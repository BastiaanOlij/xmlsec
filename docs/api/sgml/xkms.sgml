<refentry id="xmlsec-xkms">
<refmeta>
<refentrytitle>xkms</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>xkms</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>

<synopsis>



enum        <link linkend="xmlSecXkmsResultMajor">xmlSecXkmsResultMajor</link>;
enum        <link linkend="xmlSecXkmsResultMinor">xmlSecXkmsResultMinor</link>;
enum        <link linkend="xmlSecXkmsKeyBindingStatus">xmlSecXkmsKeyBindingStatus</link>;
enum        <link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link>;
<link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> <link linkend="xmlSecXkmsServerFormatFromString">xmlSecXkmsServerFormatFromString</link>
                                            (const <link linkend="xmlChar">xmlChar</link> *str);
const <link linkend="xmlChar">xmlChar</link>* <link linkend="xmlSecXkmsServerFormatToString">xmlSecXkmsServerFormatToString</link>
                                            (<link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format);
struct      <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtx</link>;
<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> <link linkend="xmlSecXkmsServerCtxCreate">xmlSecXkmsServerCtxCreate</link>
                                            (<link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> keysMngr);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsServerCtxDestroy">xmlSecXkmsServerCtxDestroy</link>      (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsServerCtxInitialize">xmlSecXkmsServerCtxInitialize</link>   (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> keysMngr);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsServerCtxFinalize">xmlSecXkmsServerCtxFinalize</link>     (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsServerCtxReset">xmlSecXkmsServerCtxReset</link>        (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsServerCtxCopyUserPref">xmlSecXkmsServerCtxCopyUserPref</link> (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> dst,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> src);
<link linkend="xmlNodePtr">xmlNodePtr</link>  <link linkend="xmlSecXkmsServerCtxProcess">xmlSecXkmsServerCtxProcess</link>      (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node,
                                             <link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsServerCtxRequestRead">xmlSecXkmsServerCtxRequestRead</link>  (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
<link linkend="xmlNode">xmlNodePtr</link>  <link linkend="xmlSecXkmsServerCtxResponseWrite">xmlSecXkmsServerCtxResponseWrite</link>
                                            (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc);
<link linkend="xmlNode">xmlNodePtr</link>  <link linkend="xmlSecXkmsServerCtxRequestUnwrap">xmlSecXkmsServerCtxRequestUnwrap</link>
                                            (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node,
                                             <link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format);
<link linkend="xmlNodePtr">xmlNodePtr</link>  <link linkend="xmlSecXkmsServerCtxResponseWrap">xmlSecXkmsServerCtxResponseWrap</link> (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node,
                                             <link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc);
<link linkend="xmlNode">xmlNodePtr</link>  <link linkend="xmlSecXkmsServerCtxFatalErrorResponseCreate">xmlSecXkmsServerCtxFatalErrorResponseCreate</link>
                                            (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsServerCtxSetResult">xmlSecXkmsServerCtxSetResult</link>    (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlSecXkmsResultMajor">xmlSecXkmsResultMajor</link> resultMajor,
                                             <link linkend="xmlSecXkmsResultMinor">xmlSecXkmsResultMinor</link> resultMinor);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsServerCtxDebugDump">xmlSecXkmsServerCtxDebugDump</link>    (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="FILE-CAPS">FILE</link> *output);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsServerCtxDebugXmlDump">xmlSecXkmsServerCtxDebugXmlDump</link> (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="FILE-CAPS">FILE</link> *output);
#define     <link linkend="xmlSecXkmsServerCtxPtrListId">xmlSecXkmsServerCtxPtrListId</link>
<link linkend="xmlSecPtrListId">xmlSecPtrListId</link> <link linkend="xmlSecXkmsServerCtxPtrListGetKlass">xmlSecXkmsServerCtxPtrListGetKlass</link>
                                            (void);
#define     <link linkend="XMLSEC-XKMS-SERVER-FLAGS-STOP-ON-UNKNOWN-RESPONSE-MECHANISM-CAPS">XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_RESPONSE_MECHANISM</link>
#define     <link linkend="XMLSEC-XKMS-SERVER-FLAGS-STOP-ON-UNKNOWN-RESPOND-WITH-CAPS">XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_RESPOND_WITH</link>
#define     <link linkend="XMLSEC-XKMS-SERVER-FLAGS-STOP-ON-UNKNOWN-KEY-USAGE-CAPS">XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_KEY_USAGE</link>
#define     <link linkend="XMLSEC-XKMS-RESPONSE-MECHANISM-MASK-PENDING-CAPS">XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_PENDING</link>
#define     <link linkend="XMLSEC-XKMS-RESPONSE-MECHANISM-MASK-REPRESENT-CAPS">XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_REPRESENT</link>
#define     <link linkend="XMLSEC-XKMS-RESPONSE-MECHANISM-MASK-REQUEST-SIGNATURE-VALUE-CAPS">XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_REQUEST_SIGNATURE_VALUE</link>
#define     <link linkend="XMLSEC-XKMS-NO-RESPONSE-LIMIT-CAPS">XMLSEC_XKMS_NO_RESPONSE_LIMIT</link>
#define     <link linkend="XMLSEC-XKMS-KEY-BINDING-REASON-MASK-ISSUER-TRAST-CAPS">XMLSEC_XKMS_KEY_BINDING_REASON_MASK_ISSUER_TRAST</link>
#define     <link linkend="XMLSEC-XKMS-KEY-BINDING-REASON-MASK-REVOCATION-STATUS-CAPS">XMLSEC_XKMS_KEY_BINDING_REASON_MASK_REVOCATION_STATUS</link>
#define     <link linkend="XMLSEC-XKMS-KEY-BINDING-REASON-MASK-VALIDITY-INTERVAL-CAPS">XMLSEC_XKMS_KEY_BINDING_REASON_MASK_VALIDITY_INTERVAL</link>
#define     <link linkend="XMLSEC-XKMS-KEY-BINDING-REASON-MASK-SIGNATURE-CAPS">XMLSEC_XKMS_KEY_BINDING_REASON_MASK_SIGNATURE</link>
<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> <link linkend="xmlSecXkmsRespondWithIdsGet">xmlSecXkmsRespondWithIdsGet</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsRespondWithIdsInit">xmlSecXkmsRespondWithIdsInit</link>    (void);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsRespondWithIdsShutdown">xmlSecXkmsRespondWithIdsShutdown</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsRespondWithIdsRegisterDefault">xmlSecXkmsRespondWithIdsRegisterDefault</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsRespondWithIdsRegister">xmlSecXkmsRespondWithIdsRegister</link>
                                            (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsRespondWithNodeRead">xmlSecXkmsRespondWithNodeRead</link>   (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsRespondWithNodeWrite">xmlSecXkmsRespondWithNodeWrite</link>  (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsRespondWithDebugDump">xmlSecXkmsRespondWithDebugDump</link>  (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="FILE-CAPS">FILE</link> *output);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsRespondWithDebugXmlDump">xmlSecXkmsRespondWithDebugXmlDump</link>
                                            (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="FILE-CAPS">FILE</link> *output);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsRespondWithDefaultNodeRead">xmlSecXkmsRespondWithDefaultNodeRead</link>
                                            (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsRespondWithDefaultNodeWrite">xmlSecXkmsRespondWithDefaultNodeWrite</link>
                                            (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
#define     <link linkend="xmlSecXkmsRespondWithIdListId">xmlSecXkmsRespondWithIdListId</link>
<link linkend="xmlSecPtrListId">xmlSecPtrListId</link> <link linkend="xmlSecXkmsRespondWithIdListGetKlass">xmlSecXkmsRespondWithIdListGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsRespondWithIdListFind">xmlSecXkmsRespondWithIdListFind</link> (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id);
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithIdListFindByNodeValue">xmlSecXkmsRespondWithIdListFindByNodeValue</link>
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsRespondWithIdListWrite">xmlSecXkmsRespondWithIdListWrite</link>
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
#define     <link linkend="xmlSecXkmsRespondWithIdUnknown">xmlSecXkmsRespondWithIdUnknown</link>
#define     <link linkend="xmlSecXkmsRespondWithKeyNameId">xmlSecXkmsRespondWithKeyNameId</link>
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithKeyNameGetKlass">xmlSecXkmsRespondWithKeyNameGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsRespondWithKeyValueId">xmlSecXkmsRespondWithKeyValueId</link>
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithKeyValueGetKlass">xmlSecXkmsRespondWithKeyValueGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsRespondWithPrivateKeyId">xmlSecXkmsRespondWithPrivateKeyId</link>
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithPrivateKeyGetKlass">xmlSecXkmsRespondWithPrivateKeyGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsRespondWithRetrievalMethodId">xmlSecXkmsRespondWithRetrievalMethodId</link>
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithRetrievalMethodGetKlass">xmlSecXkmsRespondWithRetrievalMethodGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsRespondWithX509CertId">xmlSecXkmsRespondWithX509CertId</link>
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithX509CertGetKlass">xmlSecXkmsRespondWithX509CertGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsRespondWithX509ChainId">xmlSecXkmsRespondWithX509ChainId</link>
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithX509ChainGetKlass">xmlSecXkmsRespondWithX509ChainGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsRespondWithX509CRLId">xmlSecXkmsRespondWithX509CRLId</link>
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithX509CRLGetKlass">xmlSecXkmsRespondWithX509CRLGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsRespondWithPGPId">xmlSecXkmsRespondWithPGPId</link>
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithPGPGetKlass">xmlSecXkmsRespondWithPGPGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsRespondWithSPKIId">xmlSecXkmsRespondWithSPKIId</link>
<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> <link linkend="xmlSecXkmsRespondWithSPKIGetKlass">xmlSecXkmsRespondWithSPKIGetKlass</link>
                                            (void);
<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> <link linkend="xmlSecXkmsServerRequestIdsGet">xmlSecXkmsServerRequestIdsGet</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsServerRequestIdsInit">xmlSecXkmsServerRequestIdsInit</link>  (void);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsServerRequestIdsShutdown">xmlSecXkmsServerRequestIdsShutdown</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsServerRequestIdsRegisterDefault">xmlSecXkmsServerRequestIdsRegisterDefault</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsServerRequestIdsRegister">xmlSecXkmsServerRequestIdsRegister</link>
                                            (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsServerRequestNodeRead">xmlSecXkmsServerRequestNodeRead</link> (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsServerRequestExecute">xmlSecXkmsServerRequestExecute</link>  (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx);
<link linkend="xmlNode">xmlNodePtr</link>  <link linkend="xmlSecXkmsServerRequestNodeWrite">xmlSecXkmsServerRequestNodeWrite</link>
                                            (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsServerRequestDebugDump">xmlSecXkmsServerRequestDebugDump</link>
                                            (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="FILE-CAPS">FILE</link> *output);
<link linkend="void">void</link>        <link linkend="xmlSecXkmsServerRequestDebugXmlDump">xmlSecXkmsServerRequestDebugXmlDump</link>
                                            (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="FILE-CAPS">FILE</link> *output);
#define     <link linkend="xmlSecXkmsServerRequestIdListId">xmlSecXkmsServerRequestIdListId</link>
<link linkend="xmlSecPtrListId">xmlSecPtrListId</link> <link linkend="xmlSecXkmsServerRequestIdListGetKlass">xmlSecXkmsServerRequestIdListGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecXkmsServerRequestIdListFind">xmlSecXkmsServerRequestIdListFind</link>
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id);
<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> <link linkend="xmlSecXkmsServerRequestIdListFindByName">xmlSecXkmsServerRequestIdListFindByName</link>
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             const <link linkend="xmlChar">xmlChar</link> *name);
<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> <link linkend="xmlSecXkmsServerRequestIdListFindByNode">xmlSecXkmsServerRequestIdListFindByNode</link>
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);
#define     <link linkend="xmlSecXkmsServerRequestIdUnknown">xmlSecXkmsServerRequestIdUnknown</link>
#define     <link linkend="xmlSecXkmsServerRequestResultId">xmlSecXkmsServerRequestResultId</link>
<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> <link linkend="xmlSecXkmsServerRequestResultGetKlass">xmlSecXkmsServerRequestResultGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsServerRequestStatusId">xmlSecXkmsServerRequestStatusId</link>
<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> <link linkend="xmlSecXkmsServerRequestStatusGetKlass">xmlSecXkmsServerRequestStatusGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsServerRequestCompoundId">xmlSecXkmsServerRequestCompoundId</link>
<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> <link linkend="xmlSecXkmsServerRequestCompoundGetKlass">xmlSecXkmsServerRequestCompoundGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsServerRequestLocateId">xmlSecXkmsServerRequestLocateId</link>
<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> <link linkend="xmlSecXkmsServerRequestLocateGetKlass">xmlSecXkmsServerRequestLocateGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecXkmsServerRequestValidateId">xmlSecXkmsServerRequestValidateId</link>
<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> <link linkend="xmlSecXkmsServerRequestValidateGetKlass">xmlSecXkmsServerRequestValidateGetKlass</link>
                                            (void);
</synopsis>
</refsynopsisdiv>









<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="xmlSecXkmsResultMajor">enum xmlSecXkmsResultMajor</title>
<indexterm><primary>xmlSecXkmsResultMajor</primary></indexterm><programlisting>typedef enum {
    xmlSecXkmsResultMajorSuccess = 0,
    xmlSecXkmsResultMajorVersionMismatch,
    xmlSecXkmsResultMajorSender,
    xmlSecXkmsResultMajorReceiver,
    xmlSecXkmsResultMajorRepresent,
    xmlSecXkmsResultMajorPending
} xmlSecXkmsResultMajor;
</programlisting>
<para>
The values for ResultMajor attribute.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>xmlSecXkmsResultMajorSuccess</literal></term>
<listitem><simpara>               The operation succeeded.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMajorVersionMismatch</literal></term>
<listitem><simpara>       The service does not support 
                                             the protocol version specified 
                                             in the request.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMajorSender</literal></term>
<listitem><simpara>                An error occurred that was due
                                             to the message sent by the sender.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMajorReceiver</literal></term>
<listitem><simpara>              An error occurred at the receiver.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMajorRepresent</literal></term>
<listitem><simpara>             The service has not acted on the 
                                             request. In order for the request
                                             to be acted upon the request MUST 
                                             be represented with the specified
                                             nonce in accordance with the two
                                             phase protocol.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMajorPending</literal></term>
<listitem><simpara>               The request has been accepted 
                                             for processing and the service 
                                             will return the result asynchronously.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsResultMinor">enum xmlSecXkmsResultMinor</title>
<indexterm><primary>xmlSecXkmsResultMinor</primary></indexterm><programlisting>typedef enum {
    xmlSecXkmsResultMinorNone = 0,
    xmlSecXkmsResultMinorNoMatch,
    xmlSecXkmsResultMinorTooManyResponses,
    xmlSecXkmsResultMinorIncomplete,
    xmlSecXkmsResultMinorFailure,
    xmlSecXkmsResultMinorRefused,
    xmlSecXkmsResultMinorNoAuthentication,
    xmlSecXkmsResultMinorMessageNotSupported,
    xmlSecXkmsResultMinorUnknownResponseId,
    xmlSecXkmsResultMinorSynchronous
} xmlSecXkmsResultMinor;
</programlisting>
<para>
The values for ResultMinor attribute.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>xmlSecXkmsResultMinorNone</literal></term>
<listitem><simpara>                  No minor result code available.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMinorNoMatch</literal></term>
<listitem><simpara>               No match was found for the search 
                                             prototype provided.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMinorTooManyResponses</literal></term>
<listitem><simpara>      The request resulted in the 
                                             number of responses that 
                                             exceeded either the ResponseLimit 
                                             value specified in the request or 
                                             some other limit determined by 
                                             the service. The service MAY 
                                             either return a subset of the 
                                             possible responses or none at all.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMinorIncomplete</literal></term>
<listitem><simpara>            Only part of the information 
                                             requested could be provided.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMinorFailure</literal></term>
<listitem><simpara>               The service attempted to perform 
                                             the request but the operation 
                                             failed for unspecified reasons.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMinorRefused</literal></term>
<listitem><simpara>               The operation was refused. The 
                                             service did not attempt to 
                                             perform the request.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMinorNoAuthentication</literal></term>
<listitem><simpara>      The operation was refused 
                                             because the necessary authentication 
                                             information was incorrect or missing.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMinorMessageNotSupported</literal></term>
<listitem><simpara>   The receiver does not implement 
                                             the specified operation.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMinorUnknownResponseId</literal></term>
<listitem><simpara>     The ResponseId for which pending 
                                             status was requested is unknown to 
                                             the service.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsResultMinorSynchronous</literal></term>
<listitem><simpara>           The receiver does not support 
                                             synchronous processing of this 
                                             type of request.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsKeyBindingStatus">enum xmlSecXkmsKeyBindingStatus</title>
<indexterm><primary>xmlSecXkmsKeyBindingStatus</primary></indexterm><programlisting>typedef enum {
    xmlSecXkmsKeyBindingStatusNone,
    xmlSecXkmsKeyBindingStatusValid,
    xmlSecXkmsKeyBindingStatusInvalid,
    xmlSecXkmsKeyBindingStatusIndeterminate
} xmlSecXkmsKeyBindingStatus;
</programlisting>
<para>
The values for key binding StatusValue attribute.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>xmlSecXkmsKeyBindingStatusNone</literal></term>
<listitem><simpara>             The key status is not available.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsKeyBindingStatusValid</literal></term>
<listitem><simpara>            The key is valid.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsKeyBindingStatusInvalid</literal></term>
<listitem><simpara>          The key is not valid.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsKeyBindingStatusIndeterminate</literal></term>
<listitem><simpara>    Could not determine key status.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerFormat">enum xmlSecXkmsServerFormat</title>
<indexterm><primary>xmlSecXkmsServerFormat</primary></indexterm><programlisting>typedef enum {
    xmlSecXkmsServerFormatUnknown = 0,
    xmlSecXkmsServerFormatPlain,
    xmlSecXkmsServerFormatSoap11,
    xmlSecXkmsServerFormatSoap12
} xmlSecXkmsServerFormat;
</programlisting>
<para>
The xkms server request/response format.</para>
<para>

</para><variablelist role="enum">
<varlistentry>
<term><literal>xmlSecXkmsServerFormatUnknown</literal></term>
<listitem><simpara>              The format is unknown.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsServerFormatPlain</literal></term>
<listitem><simpara>                The request/response are not enveloped.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsServerFormatSoap11</literal></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><literal>xmlSecXkmsServerFormatSoap12</literal></term>
<listitem><simpara>

</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerFormatFromString">xmlSecXkmsServerFormatFromString ()</title>
<indexterm><primary>xmlSecXkmsServerFormatFromString</primary></indexterm><programlisting><link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> xmlSecXkmsServerFormatFromString
                                            (const <link linkend="xmlChar">xmlChar</link> *str);</programlisting>
<para>
Gets xmlSecXkmsServerFormat from string <parameter>str</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>str</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>corresponding format or xmlSecXkmsServerFormatUnknown
if format could not be recognized.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerFormatToString">xmlSecXkmsServerFormatToString ()</title>
<indexterm><primary>xmlSecXkmsServerFormatToString</primary></indexterm><programlisting>const <link linkend="xmlChar">xmlChar</link>* xmlSecXkmsServerFormatToString
                                            (<link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format);</programlisting>
<para>
Gets string from <parameter>format</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>     the format.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>string corresponding to <parameter>format</parameter> or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtx">struct xmlSecXkmsServerCtx</title>
<indexterm><primary>xmlSecXkmsServerCtx</primary></indexterm><programlisting>struct xmlSecXkmsServerCtx {

    /* these data user can set before performing the operation */
    void*			userData;
    xmlSecBitMask		flags;
    xmlSecBitMask		flags2;    
    xmlSecKeyInfoCtx		keyInfoReadCtx;
    xmlSecKeyInfoCtx		keyInfoWriteCtx;
    xmlSecPtrList		enabledRespondWithIds;
    xmlSecPtrList		enabledServerRequestIds;
    xmlChar* 			expectedService;
    xmlChar*			idPrefix;
    xmlSecSize			idLen;
        
    /* these data are returned */
    xmlSecPtrList		keys;
    xmlSecXkmsResultMajor	resultMajor;
    xmlSecXkmsResultMinor	resultMinor;
    xmlSecXkmsServerRequestId	requestId;
    xmlChar*			id;    
    xmlChar*			service;
    xmlChar*			nonce;
    xmlChar*			originalRequestId;
    xmlChar*                    pendingNotificationMechanism;
    xmlChar*                    pendingNotificationIdentifier;
    int 			responseLimit;
    xmlSecBitMask		responseMechanismMask;
    xmlSecPtrListPtr		compoundRequestContexts;

    /* these are internal data, nobody should change that except us */
    xmlNodePtr			requestNode;
    xmlNodePtr			opaqueClientDataNode;
    xmlNodePtr 			firtsMsgExtNode;
    xmlNodePtr 			keyInfoNode;
    xmlSecPtrList		respWithList;
    
    /* reserved for future */
    void*			reserved0;
    void*			reserved1;
};
</programlisting>
<para>
XKMS context.</para>
<para>

</para><variablelist role="struct">
<varlistentry>
<term><link linkend="void">void</link> *<structfield>userData</structfield></term>
<listitem><simpara>			the pointer to user data (xmlsec and xmlsec-crypto libraries
			never touches this).
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecBitMask">xmlSecBitMask</link> <structfield>flags</structfield></term>
<listitem><simpara>			the XML Encryption processing flags.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecBitMask">xmlSecBitMask</link> <structfield>flags2</structfield></term>
<listitem><simpara>			the XML Encryption processing flags.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecKeyInfoCtx">xmlSecKeyInfoCtx</link> <structfield>keyInfoReadCtx</structfield></term>
<listitem><simpara>		the reading key context.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecKeyInfoCtx">xmlSecKeyInfoCtx</link> <structfield>keyInfoWriteCtx</structfield></term>
<listitem><simpara>		the writing key context (not used for signature verification).
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecPtrList">xmlSecPtrList</link> <structfield>enabledRespondWithIds</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecPtrList">xmlSecPtrList</link> <structfield>enabledServerRequestIds</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlChar">xmlChar</link> *<structfield>expectedService</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlChar">xmlChar</link> *<structfield>idPrefix</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecSize">xmlSecSize</link> <structfield>idLen</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecPtrList">xmlSecPtrList</link> <structfield>keys</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecXkmsResultMajor">xmlSecXkmsResultMajor</link> <structfield>resultMajor</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecXkmsResultMinor">xmlSecXkmsResultMinor</link> <structfield>resultMinor</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> <structfield>requestId</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlChar">xmlChar</link> *<structfield>id</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlChar">xmlChar</link> *<structfield>service</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlChar">xmlChar</link> *<structfield>nonce</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlChar">xmlChar</link> *<structfield>originalRequestId</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlChar">xmlChar</link> *<structfield>pendingNotificationMechanism</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlChar">xmlChar</link> *<structfield>pendingNotificationIdentifier</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="int">int</link> <structfield>responseLimit</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecBitMask">xmlSecBitMask</link> <structfield>responseMechanismMask</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> <structfield>compoundRequestContexts</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlNode">xmlNodePtr</link> <structfield>requestNode</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlNode">xmlNodePtr</link> <structfield>opaqueClientDataNode</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlNode">xmlNodePtr</link> <structfield>firtsMsgExtNode</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlNode">xmlNodePtr</link> <structfield>keyInfoNode</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="xmlSecPtrList">xmlSecPtrList</link> <structfield>respWithList</structfield></term>
<listitem><simpara>
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="void">void</link> *<structfield>reserved0</structfield></term>
<listitem><simpara>			reserved for the future.
</simpara></listitem>
</varlistentry>
<varlistentry>
<term><link linkend="void">void</link> *<structfield>reserved1</structfield></term>
<listitem><simpara>			reserved for the future.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxCreate">xmlSecXkmsServerCtxCreate ()</title>
<indexterm><primary>xmlSecXkmsServerCtxCreate</primary></indexterm><programlisting><link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> xmlSecXkmsServerCtxCreate
                                            (<link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> keysMngr);</programlisting>
<para>
Creates XKMS request server side processing context.
The caller is responsible for destroying returend object by calling 
<link linkend="xmlSecXkmsServerCtxDestroy"><type>xmlSecXkmsServerCtxDestroy</type></link> function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>keysMngr</parameter>&nbsp;:</term>
<listitem><simpara> 	the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>pointer to newly allocated context object or NULL if an error
occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxDestroy">xmlSecXkmsServerCtxDestroy ()</title>
<indexterm><primary>xmlSecXkmsServerCtxDestroy</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsServerCtxDestroy      (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx);</programlisting>
<para>
Destroy context object created with <link linkend="xmlSecXkmsServerCtxCreate"><type>xmlSecXkmsServerCtxCreate</type></link> function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxInitialize">xmlSecXkmsServerCtxInitialize ()</title>
<indexterm><primary>xmlSecXkmsServerCtxInitialize</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsServerCtxInitialize   (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> keysMngr);</programlisting>
<para>
Initializes XKMS element processing context.
The caller is responsible for cleaing up returend object by calling 
<link linkend="xmlSecXkmsServerCtxFinalize"><type>xmlSecXkmsServerCtxFinalize</type></link> function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keysMngr</parameter>&nbsp;:</term>
<listitem><simpara> 	the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxFinalize">xmlSecXkmsServerCtxFinalize ()</title>
<indexterm><primary>xmlSecXkmsServerCtxFinalize</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsServerCtxFinalize     (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx);</programlisting>
<para>
Cleans up <parameter>ctx</parameter> object.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxReset">xmlSecXkmsServerCtxReset ()</title>
<indexterm><primary>xmlSecXkmsServerCtxReset</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsServerCtxReset        (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx);</programlisting>
<para>
Resets <parameter>ctx</parameter> object, user settings are not touched.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxCopyUserPref">xmlSecXkmsServerCtxCopyUserPref ()</title>
<indexterm><primary>xmlSecXkmsServerCtxCopyUserPref</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsServerCtxCopyUserPref (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> dst,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> src);</programlisting>
<para>
Copies user preference from <parameter>src</parameter> context to <parameter>dst</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dst</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to destination context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>src</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to source context.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxProcess">xmlSecXkmsServerCtxProcess ()</title>
<indexterm><primary>xmlSecXkmsServerCtxProcess</primary></indexterm><programlisting><link linkend="xmlNodePtr">xmlNodePtr</link>  xmlSecXkmsServerCtxProcess      (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node,
                                             <link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc);</programlisting>
<para>
Reads XKMS request from <parameter>node</parameter> and creates response to a newly created node. 
Caller is responsible for adding the returned node to the XML document.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to request node.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>     the request/response format.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>doc</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to response parent XML document (might be NULL).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>pointer to newly created XKMS response node or NULL
if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxRequestRead">xmlSecXkmsServerCtxRequestRead ()</title>
<indexterm><primary>xmlSecXkmsServerCtxRequestRead</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsServerCtxRequestRead  (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>
Reads XKMS request from <parameter>node</parameter> and stores data in <parameter>ctx</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to request node.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxResponseWrite">xmlSecXkmsServerCtxResponseWrite ()</title>
<indexterm><primary>xmlSecXkmsServerCtxResponseWrite</primary></indexterm><programlisting><link linkend="xmlNode">xmlNodePtr</link>  xmlSecXkmsServerCtxResponseWrite
                                            (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc);</programlisting>
<para>
Writes XKMS response from context to a newly created node. Caller is 
responsible for adding the returned node to the XML document.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>doc</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to response parent XML document (might be NULL).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>pointer to newly created XKMS response node or NULL
if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxRequestUnwrap">xmlSecXkmsServerCtxRequestUnwrap ()</title>
<indexterm><primary>xmlSecXkmsServerCtxRequestUnwrap</primary></indexterm><programlisting><link linkend="xmlNode">xmlNodePtr</link>  xmlSecXkmsServerCtxRequestUnwrap
                                            (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node,
                                             <link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format);</programlisting>
<para>
Removes SOAP or other envelope from XKMS request.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to request node.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>     the request/response format.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>pointer to "real" XKMS request node or NULL if an error occurs. 
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxResponseWrap">xmlSecXkmsServerCtxResponseWrap ()</title>
<indexterm><primary>xmlSecXkmsServerCtxResponseWrap</primary></indexterm><programlisting><link linkend="xmlNodePtr">xmlNodePtr</link>  xmlSecXkmsServerCtxResponseWrap (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node,
                                             <link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc);</programlisting>
<para>
Creates SOAP or other envelope around XKMS response.
Caller is responsible for adding the returned node to the XML document.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to response node.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>     the request/response format.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>doc</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to response parent XML document (might be NULL).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>pointer to newly created response envelope node or NULL
if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxFatalErrorResponseCreate">xmlSecXkmsServerCtxFatalErrorResponseCreate ()</title>
<indexterm><primary>xmlSecXkmsServerCtxFatalErrorResponseCreate</primary></indexterm><programlisting><link linkend="xmlNode">xmlNodePtr</link>  xmlSecXkmsServerCtxFatalErrorResponseCreate
                                            (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlSecXkmsServerFormat">xmlSecXkmsServerFormat</link> format,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc);</programlisting>
<para>
Creates a "fatal error" SOAP or other envelope respons. Caller is 
responsible for adding the returned node to the XML document.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&nbsp;:</term>
<listitem><simpara>     the request/response format.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>doc</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to response parent XML document (might be NULL).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>pointer to newly created fatal error response (it might be NULL).
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxSetResult">xmlSecXkmsServerCtxSetResult ()</title>
<indexterm><primary>xmlSecXkmsServerCtxSetResult</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsServerCtxSetResult    (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlSecXkmsResultMajor">xmlSecXkmsResultMajor</link> resultMajor,
                                             <link linkend="xmlSecXkmsResultMinor">xmlSecXkmsResultMinor</link> resultMinor);</programlisting>
<para>
Sets the major/minor result code in the context if no other result is already
reported.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	 the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>resultMajor</parameter>&nbsp;:</term>
<listitem><simpara> the major result code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>resultMinor</parameter>&nbsp;:</term>
<listitem><simpara> the minor result code.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxDebugDump">xmlSecXkmsServerCtxDebugDump ()</title>
<indexterm><primary>xmlSecXkmsServerCtxDebugDump</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsServerCtxDebugDump    (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="FILE-CAPS">FILE</link> *output);</programlisting>
<para>
Prints the debug information about <parameter>ctx</parameter> to <parameter>output</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to output FILE.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxDebugXmlDump">xmlSecXkmsServerCtxDebugXmlDump ()</title>
<indexterm><primary>xmlSecXkmsServerCtxDebugXmlDump</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsServerCtxDebugXmlDump (<link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="FILE-CAPS">FILE</link> *output);</programlisting>
<para>
Prints the debug information about <parameter>ctx</parameter> to <parameter>output</parameter> in XML format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to XKMS processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to output FILE.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxPtrListId">xmlSecXkmsServerCtxPtrListId</title>
<indexterm><primary>xmlSecXkmsServerCtxPtrListId</primary></indexterm><programlisting>#define xmlSecXkmsServerCtxPtrListId	xmlSecXkmsServerCtxPtrListGetKlass()
</programlisting>
<para>
zmlSecXkmsServerCtx klasses list klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerCtxPtrListGetKlass">xmlSecXkmsServerCtxPtrListGetKlass ()</title>
<indexterm><primary>xmlSecXkmsServerCtxPtrListGetKlass</primary></indexterm><programlisting><link linkend="xmlSecPtrListId">xmlSecPtrListId</link> xmlSecXkmsServerCtxPtrListGetKlass
                                            (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-SERVER-FLAGS-STOP-ON-UNKNOWN-RESPONSE-MECHANISM-CAPS">XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_RESPONSE_MECHANISM</title>
<indexterm><primary>XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_RESPONSE_MECHANISM</primary></indexterm><programlisting>#define XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_RESPONSE_MECHANISM	0x00000001
</programlisting>
<para>
If flag is set then we abort if an unknown &lt;xkms:ResponseMechanism/&gt; 
value is found.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-SERVER-FLAGS-STOP-ON-UNKNOWN-RESPOND-WITH-CAPS">XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_RESPOND_WITH</title>
<indexterm><primary>XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_RESPOND_WITH</primary></indexterm><programlisting>#define XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_RESPOND_WITH		0x00000002
</programlisting>
<para>
If flag is set then we abort if an unknown &lt;xkms:RespondWith/&gt; 
value is found.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-SERVER-FLAGS-STOP-ON-UNKNOWN-KEY-USAGE-CAPS">XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_KEY_USAGE</title>
<indexterm><primary>XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_KEY_USAGE</primary></indexterm><programlisting>#define XMLSEC_XKMS_SERVER_FLAGS_STOP_ON_UNKNOWN_KEY_USAGE		0x00000004
</programlisting>
<para>
If flag is set then we abort if an unknown &lt;xkms:KeyUsage/&gt; 
value is found.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-RESPONSE-MECHANISM-MASK-PENDING-CAPS">XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_PENDING</title>
<indexterm><primary>XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_PENDING</primary></indexterm><programlisting>#define XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_PENDING			0x00000001	
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-RESPONSE-MECHANISM-MASK-REPRESENT-CAPS">XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_REPRESENT</title>
<indexterm><primary>XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_REPRESENT</primary></indexterm><programlisting>#define XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_REPRESENT			0x00000002
</programlisting>
<para>
XKMS ResponseMechanism element value. The requestor is prepared to 
accept a response that uses the two phase protocol, i.e. the service 
MAY return the MajorResult code Represent.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-RESPONSE-MECHANISM-MASK-REQUEST-SIGNATURE-VALUE-CAPS">XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_REQUEST_SIGNATURE_VALUE</title>
<indexterm><primary>XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_REQUEST_SIGNATURE_VALUE</primary></indexterm><programlisting>#define XMLSEC_XKMS_RESPONSE_MECHANISM_MASK_REQUEST_SIGNATURE_VALUE	0x00000004
</programlisting>
<para>
XKMS ResponseMechanism element value. The requestor is prepared to 
accept a response that carries a &lt;RequestSignatureValue&gt; element.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-NO-RESPONSE-LIMIT-CAPS">XMLSEC_XKMS_NO_RESPONSE_LIMIT</title>
<indexterm><primary>XMLSEC_XKMS_NO_RESPONSE_LIMIT</primary></indexterm><programlisting>#define XMLSEC_XKMS_NO_RESPONSE_LIMIT			        -1
</programlisting>
<para>
The ResponseLimit is not specified.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-KEY-BINDING-REASON-MASK-ISSUER-TRAST-CAPS">XMLSEC_XKMS_KEY_BINDING_REASON_MASK_ISSUER_TRAST</title>
<indexterm><primary>XMLSEC_XKMS_KEY_BINDING_REASON_MASK_ISSUER_TRAST</primary></indexterm><programlisting>#define XMLSEC_XKMS_KEY_BINDING_REASON_MASK_ISSUER_TRAST	0x00000001
</programlisting>
<para>
The issuer of the information on which the key binding is based is 
considered to be trustworthy by the XKMS service.
</para>
<para>
X.509 Equivalents
  - Valid:	Certificate path anchored by trusted root successfully constructed.
  - Invalid:	Certificate path could not be constructed to a trusted root.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-KEY-BINDING-REASON-MASK-REVOCATION-STATUS-CAPS">XMLSEC_XKMS_KEY_BINDING_REASON_MASK_REVOCATION_STATUS</title>
<indexterm><primary>XMLSEC_XKMS_KEY_BINDING_REASON_MASK_REVOCATION_STATUS</primary></indexterm><programlisting>#define XMLSEC_XKMS_KEY_BINDING_REASON_MASK_REVOCATION_STATUS	0x00000002
</programlisting>
<para>
The XKMS service has affirmatively verified the status of the 
key binding with an authoritative source
</para>
<para>
X.509 Equivalents
  - Valid:	Certificate status validated using CRL or OCSP.
  - Invalid:	Certificate status returned revoked or suspended.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-KEY-BINDING-REASON-MASK-VALIDITY-INTERVAL-CAPS">XMLSEC_XKMS_KEY_BINDING_REASON_MASK_VALIDITY_INTERVAL</title>
<indexterm><primary>XMLSEC_XKMS_KEY_BINDING_REASON_MASK_VALIDITY_INTERVAL</primary></indexterm><programlisting>#define XMLSEC_XKMS_KEY_BINDING_REASON_MASK_VALIDITY_INTERVAL	 0x00000004
</programlisting>
<para>
The requested time instant was within the validity interval of 
the key binding
</para>
<para>
X.509 Equivalents
  - Valid:	The certificate chain was valid at the requested time instant.
  - Invalid:	The requested time instant was before or after the certificate 
             chain validity interval.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="XMLSEC-XKMS-KEY-BINDING-REASON-MASK-SIGNATURE-CAPS">XMLSEC_XKMS_KEY_BINDING_REASON_MASK_SIGNATURE</title>
<indexterm><primary>XMLSEC_XKMS_KEY_BINDING_REASON_MASK_SIGNATURE</primary></indexterm><programlisting>#define XMLSEC_XKMS_KEY_BINDING_REASON_MASK_SIGNATURE		 0x00000008
</programlisting>
<para>
Signature on signed data provided by the client in the &lt;Keyinfo&gt; element was 
successfully verified.
</para>
<para>
X.509 Equivalents
  - Valid: 	Certificate Signature verified.
  - Invalid: Certificate Signature verification failed.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdsGet">xmlSecXkmsRespondWithIdsGet ()</title>
<indexterm><primary>xmlSecXkmsRespondWithIdsGet</primary></indexterm><programlisting><link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> xmlSecXkmsRespondWithIdsGet
                                            (void);</programlisting>
<para>
Gets global registered RespondWith klasses list.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the pointer to list of all registered RespondWith klasses.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdsInit">xmlSecXkmsRespondWithIdsInit ()</title>
<indexterm><primary>xmlSecXkmsRespondWithIdsInit</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsRespondWithIdsInit    (void);</programlisting>
<para>
Initializes the RespondWith klasses. This function is called from the 
<link linkend="xmlSecInit"><type>xmlSecInit</type></link> function and the application should not call it directly.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdsShutdown">xmlSecXkmsRespondWithIdsShutdown ()</title>
<indexterm><primary>xmlSecXkmsRespondWithIdsShutdown</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsRespondWithIdsShutdown
                                            (void);</programlisting>
<para>
Shuts down the keys data klasses. This function is called from the 
<link linkend="xmlSecShutdown"><type>xmlSecShutdown</type></link> function and the application should not call it directly.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdsRegisterDefault">xmlSecXkmsRespondWithIdsRegisterDefault ()</title>
<indexterm><primary>xmlSecXkmsRespondWithIdsRegisterDefault</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsRespondWithIdsRegisterDefault
                                            (void);</programlisting>
<para>
Registers default (implemented by XML Security Library)
RespondWith klasses: KeyName, KeyValue,...</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdsRegister">xmlSecXkmsRespondWithIdsRegister ()</title>
<indexterm><primary>xmlSecXkmsRespondWithIdsRegister</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsRespondWithIdsRegister
                                            (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id);</programlisting>
<para>
Registers <parameter>id</parameter> in the global list of RespondWith klasses.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>		the RespondWith klass.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithNodeRead">xmlSecXkmsRespondWithNodeRead ()</title>
<indexterm><primary>xmlSecXkmsRespondWithNodeRead</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsRespondWithNodeRead   (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>
Reads the content of the &lt;xkms:RespondWith/&gt; <parameter>node</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>		the RespondWith class.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the XKMS request processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to &lt;xkms:RespondWith/&gt; node.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithNodeWrite">xmlSecXkmsRespondWithNodeWrite ()</title>
<indexterm><primary>xmlSecXkmsRespondWithNodeWrite</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsRespondWithNodeWrite  (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>
Writes the content of the &lt;xkms:RespondWith/&gt; <parameter>node</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>		the RespondWith class.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the XKMS request processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to &lt;xkms:RespondWith/&gt; node.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithDebugDump">xmlSecXkmsRespondWithDebugDump ()</title>
<indexterm><primary>xmlSecXkmsRespondWithDebugDump</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsRespondWithDebugDump  (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="FILE-CAPS">FILE</link> *output);</programlisting>
<para>
Writes debug information about <parameter>id</parameter> into the <parameter>output</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>		the RespondWith class.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>	the output file.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithDebugXmlDump">xmlSecXkmsRespondWithDebugXmlDump ()</title>
<indexterm><primary>xmlSecXkmsRespondWithDebugXmlDump</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsRespondWithDebugXmlDump
                                            (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="FILE-CAPS">FILE</link> *output);</programlisting>
<para>
Writes debug information about <parameter>id</parameter> into the <parameter>output</parameter> in XML format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>		the RespondWith class.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>	the output file.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithDefaultNodeRead">xmlSecXkmsRespondWithDefaultNodeRead ()</title>
<indexterm><primary>xmlSecXkmsRespondWithDefaultNodeRead</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsRespondWithDefaultNodeRead
                                            (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithDefaultNodeWrite">xmlSecXkmsRespondWithDefaultNodeWrite ()</title>
<indexterm><primary>xmlSecXkmsRespondWithDefaultNodeWrite</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsRespondWithDefaultNodeWrite
                                            (<link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdListId">xmlSecXkmsRespondWithIdListId</title>
<indexterm><primary>xmlSecXkmsRespondWithIdListId</primary></indexterm><programlisting>#define xmlSecXkmsRespondWithIdListId	xmlSecXkmsRespondWithIdListGetKlass()
</programlisting>
<para>
XKMS RespondWith  klasses list klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdListGetKlass">xmlSecXkmsRespondWithIdListGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithIdListGetKlass</primary></indexterm><programlisting><link linkend="xmlSecPtrListId">xmlSecPtrListId</link> xmlSecXkmsRespondWithIdListGetKlass
                                            (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdListFind">xmlSecXkmsRespondWithIdListFind ()</title>
<indexterm><primary>xmlSecXkmsRespondWithIdListFind</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsRespondWithIdListFind (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> id);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdListFindByNodeValue">xmlSecXkmsRespondWithIdListFindByNodeValue ()</title>
<indexterm><primary>xmlSecXkmsRespondWithIdListFindByNodeValue</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithIdListFindByNodeValue
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdListWrite">xmlSecXkmsRespondWithIdListWrite ()</title>
<indexterm><primary>xmlSecXkmsRespondWithIdListWrite</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsRespondWithIdListWrite
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithIdUnknown">xmlSecXkmsRespondWithIdUnknown</title>
<indexterm><primary>xmlSecXkmsRespondWithIdUnknown</primary></indexterm><programlisting>#define xmlSecXkmsRespondWithIdUnknown			NULL
</programlisting>
<para>
The "unknown" RespondWith id (NULL).</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithKeyNameId">xmlSecXkmsRespondWithKeyNameId</title>
<indexterm><primary>xmlSecXkmsRespondWithKeyNameId</primary></indexterm><programlisting>#define     xmlSecXkmsRespondWithKeyNameId</programlisting>
<para>
The respond with KeyName klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithKeyNameGetKlass">xmlSecXkmsRespondWithKeyNameGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithKeyNameGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithKeyNameGetKlass
                                            (void);</programlisting>
<para>
The respond with KeyName klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>respond with KeyName klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithKeyValueId">xmlSecXkmsRespondWithKeyValueId</title>
<indexterm><primary>xmlSecXkmsRespondWithKeyValueId</primary></indexterm><programlisting>#define     xmlSecXkmsRespondWithKeyValueId</programlisting>
<para>
The respond with KeyValue klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithKeyValueGetKlass">xmlSecXkmsRespondWithKeyValueGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithKeyValueGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithKeyValueGetKlass
                                            (void);</programlisting>
<para>
The respond with KeyValue klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>respond with KeyValue klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithPrivateKeyId">xmlSecXkmsRespondWithPrivateKeyId</title>
<indexterm><primary>xmlSecXkmsRespondWithPrivateKeyId</primary></indexterm><programlisting>#define     xmlSecXkmsRespondWithPrivateKeyId</programlisting>
<para>
The respond with PrivateKey klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithPrivateKeyGetKlass">xmlSecXkmsRespondWithPrivateKeyGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithPrivateKeyGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithPrivateKeyGetKlass
                                            (void);</programlisting>
<para>
The respond with PrivateKey klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>respond with PrivateKey klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithRetrievalMethodId">xmlSecXkmsRespondWithRetrievalMethodId</title>
<indexterm><primary>xmlSecXkmsRespondWithRetrievalMethodId</primary></indexterm><programlisting>#define     xmlSecXkmsRespondWithRetrievalMethodId</programlisting>
<para>
The respond with RetrievalMethod klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithRetrievalMethodGetKlass">xmlSecXkmsRespondWithRetrievalMethodGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithRetrievalMethodGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithRetrievalMethodGetKlass
                                            (void);</programlisting>
<para>
The respond with RetrievalMethod klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>respond with RetrievalMethod klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithX509CertId">xmlSecXkmsRespondWithX509CertId</title>
<indexterm><primary>xmlSecXkmsRespondWithX509CertId</primary></indexterm><programlisting>#define     xmlSecXkmsRespondWithX509CertId</programlisting>
<para>
The respond with X509Cert klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithX509CertGetKlass">xmlSecXkmsRespondWithX509CertGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithX509CertGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithX509CertGetKlass
                                            (void);</programlisting>
<para>
The respond with X509Cert klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>respond with X509Cert klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithX509ChainId">xmlSecXkmsRespondWithX509ChainId</title>
<indexterm><primary>xmlSecXkmsRespondWithX509ChainId</primary></indexterm><programlisting>#define     xmlSecXkmsRespondWithX509ChainId</programlisting>
<para>
The respond with X509Chain klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithX509ChainGetKlass">xmlSecXkmsRespondWithX509ChainGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithX509ChainGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithX509ChainGetKlass
                                            (void);</programlisting>
<para>
The respond with X509Chain klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>respond with X509Chain klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithX509CRLId">xmlSecXkmsRespondWithX509CRLId</title>
<indexterm><primary>xmlSecXkmsRespondWithX509CRLId</primary></indexterm><programlisting>#define     xmlSecXkmsRespondWithX509CRLId</programlisting>
<para>
The respond with X509CRL klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithX509CRLGetKlass">xmlSecXkmsRespondWithX509CRLGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithX509CRLGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithX509CRLGetKlass
                                            (void);</programlisting>
<para>
The respond with X509CRL klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>respond with X509CRL klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithPGPId">xmlSecXkmsRespondWithPGPId</title>
<indexterm><primary>xmlSecXkmsRespondWithPGPId</primary></indexterm><programlisting>#define     xmlSecXkmsRespondWithPGPId</programlisting>
<para>
The respond with PGP klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithPGPGetKlass">xmlSecXkmsRespondWithPGPGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithPGPGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithPGPGetKlass
                                            (void);</programlisting>
<para>
The respond with PGP klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>respond with PGP klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithSPKIId">xmlSecXkmsRespondWithSPKIId</title>
<indexterm><primary>xmlSecXkmsRespondWithSPKIId</primary></indexterm><programlisting>#define     xmlSecXkmsRespondWithSPKIId</programlisting>
<para>
The respond with SPKI klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsRespondWithSPKIGetKlass">xmlSecXkmsRespondWithSPKIGetKlass ()</title>
<indexterm><primary>xmlSecXkmsRespondWithSPKIGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsRespondWithId">xmlSecXkmsRespondWithId</link> xmlSecXkmsRespondWithSPKIGetKlass
                                            (void);</programlisting>
<para>
The respond with SPKI klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>respond with SPKI klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdsGet">xmlSecXkmsServerRequestIdsGet ()</title>
<indexterm><primary>xmlSecXkmsServerRequestIdsGet</primary></indexterm><programlisting><link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> xmlSecXkmsServerRequestIdsGet
                                            (void);</programlisting>
<para>
Gets global registered ServerRequest klasses list.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>the pointer to list of all registered ServerRequest klasses.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdsInit">xmlSecXkmsServerRequestIdsInit ()</title>
<indexterm><primary>xmlSecXkmsServerRequestIdsInit</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsServerRequestIdsInit  (void);</programlisting>
<para>
Initializes the ServerRequest klasses. This function is called from the 
<link linkend="xmlSecInit"><type>xmlSecInit</type></link> function and the application should not call it directly.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdsShutdown">xmlSecXkmsServerRequestIdsShutdown ()</title>
<indexterm><primary>xmlSecXkmsServerRequestIdsShutdown</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsServerRequestIdsShutdown
                                            (void);</programlisting>
<para>
Shuts down the keys data klasses. This function is called from the 
<link linkend="xmlSecShutdown"><type>xmlSecShutdown</type></link> function and the application should not call it directly.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdsRegisterDefault">xmlSecXkmsServerRequestIdsRegisterDefault ()</title>
<indexterm><primary>xmlSecXkmsServerRequestIdsRegisterDefault</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsServerRequestIdsRegisterDefault
                                            (void);</programlisting>
<para>
Registers default (implemented by XML Security Library)
ServerRequest klasses: KeyName, KeyValue,...</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdsRegister">xmlSecXkmsServerRequestIdsRegister ()</title>
<indexterm><primary>xmlSecXkmsServerRequestIdsRegister</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsServerRequestIdsRegister
                                            (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id);</programlisting>
<para>
Registers <parameter>id</parameter> in the global list of ServerRequest klasses.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>		the ServerRequest klass.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestNodeRead">xmlSecXkmsServerRequestNodeRead ()</title>
<indexterm><primary>xmlSecXkmsServerRequestNodeRead</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsServerRequestNodeRead (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>
Reads the content of the &lt;xkms:ServerRequest/&gt; <parameter>node</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>		the ServerRequest class.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>	the XKMS request processing context.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>	the pointer to &lt;xkms:ServerRequest/&gt; node.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestExecute">xmlSecXkmsServerRequestExecute ()</title>
<indexterm><primary>xmlSecXkmsServerRequestExecute</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsServerRequestExecute  (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestNodeWrite">xmlSecXkmsServerRequestNodeWrite ()</title>
<indexterm><primary>xmlSecXkmsServerRequestNodeWrite</primary></indexterm><programlisting><link linkend="xmlNode">xmlNodePtr</link>  xmlSecXkmsServerRequestNodeWrite
                                            (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="xmlSecXkmsServerCtx">xmlSecXkmsServerCtxPtr</link> ctx,
                                             <link linkend="xmlDoc">xmlDocPtr</link> doc,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>ctx</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>doc</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestDebugDump">xmlSecXkmsServerRequestDebugDump ()</title>
<indexterm><primary>xmlSecXkmsServerRequestDebugDump</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsServerRequestDebugDump
                                            (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="FILE-CAPS">FILE</link> *output);</programlisting>
<para>
Writes debug information about <parameter>id</parameter> into the <parameter>output</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>			the ServerRequest class.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>		the output file.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestDebugXmlDump">xmlSecXkmsServerRequestDebugXmlDump ()</title>
<indexterm><primary>xmlSecXkmsServerRequestDebugXmlDump</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecXkmsServerRequestDebugXmlDump
                                            (<link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id,
                                             <link linkend="FILE-CAPS">FILE</link> *output);</programlisting>
<para>
Writes debug information about <parameter>id</parameter> into the <parameter>output</parameter> in XML format.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>			the ServerRequest class.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>output</parameter>&nbsp;:</term>
<listitem><simpara>		the output file.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdListId">xmlSecXkmsServerRequestIdListId</title>
<indexterm><primary>xmlSecXkmsServerRequestIdListId</primary></indexterm><programlisting>#define xmlSecXkmsServerRequestIdListId	xmlSecXkmsServerRequestIdListGetKlass()
</programlisting>
<para>
XKMS ServerRequest  klasses list klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdListGetKlass">xmlSecXkmsServerRequestIdListGetKlass ()</title>
<indexterm><primary>xmlSecXkmsServerRequestIdListGetKlass</primary></indexterm><programlisting><link linkend="xmlSecPtrListId">xmlSecPtrListId</link> xmlSecXkmsServerRequestIdListGetKlass
                                            (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdListFind">xmlSecXkmsServerRequestIdListFind ()</title>
<indexterm><primary>xmlSecXkmsServerRequestIdListFind</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecXkmsServerRequestIdListFind
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> id);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>id</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdListFindByName">xmlSecXkmsServerRequestIdListFindByName ()</title>
<indexterm><primary>xmlSecXkmsServerRequestIdListFindByName</primary></indexterm><programlisting><link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> xmlSecXkmsServerRequestIdListFindByName
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             const <link linkend="xmlChar">xmlChar</link> *name);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdListFindByNode">xmlSecXkmsServerRequestIdListFindByNode ()</title>
<indexterm><primary>xmlSecXkmsServerRequestIdListFindByNode</primary></indexterm><programlisting><link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> xmlSecXkmsServerRequestIdListFindByNode
                                            (<link linkend="xmlSecPtrList">xmlSecPtrListPtr</link> list,
                                             <link linkend="xmlNode">xmlNodePtr</link> node);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>list</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>node</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestIdUnknown">xmlSecXkmsServerRequestIdUnknown</title>
<indexterm><primary>xmlSecXkmsServerRequestIdUnknown</primary></indexterm><programlisting>#define xmlSecXkmsServerRequestIdUnknown			NULL
</programlisting>
<para>
The "unknown" ServerRequest id (NULL).</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestResultId">xmlSecXkmsServerRequestResultId</title>
<indexterm><primary>xmlSecXkmsServerRequestResultId</primary></indexterm><programlisting>#define     xmlSecXkmsServerRequestResultId</programlisting>
<para>
The Result response klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestResultGetKlass">xmlSecXkmsServerRequestResultGetKlass ()</title>
<indexterm><primary>xmlSecXkmsServerRequestResultGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> xmlSecXkmsServerRequestResultGetKlass
                                            (void);</programlisting>
<para>
The Result response klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>Result response klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestStatusId">xmlSecXkmsServerRequestStatusId</title>
<indexterm><primary>xmlSecXkmsServerRequestStatusId</primary></indexterm><programlisting>#define     xmlSecXkmsServerRequestStatusId</programlisting>
<para>
The StatusRequest klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestStatusGetKlass">xmlSecXkmsServerRequestStatusGetKlass ()</title>
<indexterm><primary>xmlSecXkmsServerRequestStatusGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> xmlSecXkmsServerRequestStatusGetKlass
                                            (void);</programlisting>
<para>
The StatusRequest klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>StatusRequest klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestCompoundId">xmlSecXkmsServerRequestCompoundId</title>
<indexterm><primary>xmlSecXkmsServerRequestCompoundId</primary></indexterm><programlisting>#define     xmlSecXkmsServerRequestCompoundId</programlisting>
<para>
The CompoundRequest klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestCompoundGetKlass">xmlSecXkmsServerRequestCompoundGetKlass ()</title>
<indexterm><primary>xmlSecXkmsServerRequestCompoundGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> xmlSecXkmsServerRequestCompoundGetKlass
                                            (void);</programlisting>
<para>
The CompoundRequest klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>CompoundRequest klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestLocateId">xmlSecXkmsServerRequestLocateId</title>
<indexterm><primary>xmlSecXkmsServerRequestLocateId</primary></indexterm><programlisting>#define     xmlSecXkmsServerRequestLocateId</programlisting>
<para>
The LocateRequest klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestLocateGetKlass">xmlSecXkmsServerRequestLocateGetKlass ()</title>
<indexterm><primary>xmlSecXkmsServerRequestLocateGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> xmlSecXkmsServerRequestLocateGetKlass
                                            (void);</programlisting>
<para>
The LocateRequest klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>LocateRequest klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestValidateId">xmlSecXkmsServerRequestValidateId</title>
<indexterm><primary>xmlSecXkmsServerRequestValidateId</primary></indexterm><programlisting>#define     xmlSecXkmsServerRequestValidateId</programlisting>
<para>
The ValidateRequest klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecXkmsServerRequestValidateGetKlass">xmlSecXkmsServerRequestValidateGetKlass ()</title>
<indexterm><primary>xmlSecXkmsServerRequestValidateGetKlass</primary></indexterm><programlisting><link linkend="xmlSecXkmsServerRequestId">xmlSecXkmsServerRequestId</link> xmlSecXkmsServerRequestValidateGetKlass
                                            (void);</programlisting>
<para>
The ValidateRequest klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>ValidateRequest klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
