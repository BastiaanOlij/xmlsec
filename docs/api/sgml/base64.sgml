<refentry id="xmlsec-base64">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-base64.top_of_page">base64</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>base64</refname>
<refpurpose>Base64 encoding/decoding functions.</refpurpose>
</refnamediv>

<refsect1 id="xmlsec-base64.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBase64GetDefaultLineSize">xmlSecBase64GetDefaultLineSize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBase64SetDefaultLineSize">xmlSecBase64SetDefaultLineSize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlSecBase64Ctx"><returnvalue>xmlSecBase64CtxPtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBase64CtxCreate">xmlSecBase64CtxCreate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBase64CtxDestroy">xmlSecBase64CtxDestroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBase64CtxInitialize">xmlSecBase64CtxInitialize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBase64CtxFinalize">xmlSecBase64CtxFinalize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBase64CtxUpdate">xmlSecBase64CtxUpdate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBase64CtxFinal">xmlSecBase64CtxFinal</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlChar"><returnvalue>xmlChar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="xmlSecBase64Encode">xmlSecBase64Encode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBase64Decode">xmlSecBase64Decode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="xmlsec-base64.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="XMLSEC-BASE64-LINESIZE:CAPS">XMLSEC_BASE64_LINESIZE</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="xmlsec-base64.description" role="desc">
<title role="desc.title">Description</title>
<para>
Base64 encoding/decoding functions.
</para>

</refsect1>
<refsect1 id="xmlsec-base64.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="xmlSecBase64GetDefaultLineSize" role="function">
<title>xmlSecBase64GetDefaultLineSize&#160;()</title>
<indexterm zone="xmlSecBase64GetDefaultLineSize"><primary>xmlSecBase64GetDefaultLineSize</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBase64GetDefaultLineSize (<parameter><type>void</type></parameter>);</programlisting>
<para>Gets the current default line size.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> the current default line size.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBase64SetDefaultLineSize" role="function">
<title>xmlSecBase64SetDefaultLineSize&#160;()</title>
<indexterm zone="xmlSecBase64SetDefaultLineSize"><primary>xmlSecBase64SetDefaultLineSize</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecBase64SetDefaultLineSize (<parameter><link linkend="int"><type>int</type></link> columns</parameter>);</programlisting>
<para>Sets the current default line size.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>columns</para></entry>
<entry role="parameter_description"><para>number of columns</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecBase64CtxCreate" role="function">
<title>xmlSecBase64CtxCreate&#160;()</title>
<indexterm zone="xmlSecBase64CtxCreate"><primary>xmlSecBase64CtxCreate</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecBase64Ctx"><returnvalue>xmlSecBase64CtxPtr</returnvalue></link>
xmlSecBase64CtxCreate (<parameter><link linkend="int"><type>int</type></link> encode</parameter>,
                       <parameter><link linkend="int"><type>int</type></link> columns</parameter>);</programlisting>
<para>Allocates and initializes new base64 context.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encode</para></entry>
<entry role="parameter_description"><para>the encode/decode flag (1 - encode, 0 - decode)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>columns</para></entry>
<entry role="parameter_description"><para>the max line length.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> a pointer to newly created <link linkend="xmlSecBase64Ctx"><type>xmlSecBase64Ctx</type></link> structure
or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBase64CtxDestroy" role="function">
<title>xmlSecBase64CtxDestroy&#160;()</title>
<indexterm zone="xmlSecBase64CtxDestroy"><primary>xmlSecBase64CtxDestroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecBase64CtxDestroy (<parameter><link linkend="xmlSecBase64Ctx"><type>xmlSecBase64CtxPtr</type></link> ctx</parameter>);</programlisting>
<para>Destroys base64 context.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ctx</para></entry>
<entry role="parameter_description"><para>the pointer to <link linkend="xmlSecBase64Ctx"><type>xmlSecBase64Ctx</type></link> structure.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecBase64CtxInitialize" role="function">
<title>xmlSecBase64CtxInitialize&#160;()</title>
<indexterm zone="xmlSecBase64CtxInitialize"><primary>xmlSecBase64CtxInitialize</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBase64CtxInitialize (<parameter><link linkend="xmlSecBase64Ctx"><type>xmlSecBase64CtxPtr</type></link> ctx</parameter>,
                           <parameter><link linkend="int"><type>int</type></link> encode</parameter>,
                           <parameter><link linkend="int"><type>int</type></link> columns</parameter>);</programlisting>
<para>Initializes new base64 context.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ctx</para></entry>
<entry role="parameter_description"><para>the pointer to <link linkend="xmlSecBase64Ctx"><type>xmlSecBase64Ctx</type></link> structure,</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>encode</para></entry>
<entry role="parameter_description"><para>the encode/decode flag (1 - encode, 0 - decode)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>columns</para></entry>
<entry role="parameter_description"><para>the max line length.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success and a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBase64CtxFinalize" role="function">
<title>xmlSecBase64CtxFinalize&#160;()</title>
<indexterm zone="xmlSecBase64CtxFinalize"><primary>xmlSecBase64CtxFinalize</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecBase64CtxFinalize (<parameter><link linkend="xmlSecBase64Ctx"><type>xmlSecBase64CtxPtr</type></link> ctx</parameter>);</programlisting>
<para>Frees all the resources allocated by <parameter>ctx</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ctx</para></entry>
<entry role="parameter_description"><para>the pointer to <link linkend="xmlSecBase64Ctx"><type>xmlSecBase64Ctx</type></link> structure,</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecBase64CtxUpdate" role="function">
<title>xmlSecBase64CtxUpdate&#160;()</title>
<indexterm zone="xmlSecBase64CtxUpdate"><primary>xmlSecBase64CtxUpdate</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBase64CtxUpdate (<parameter><link linkend="xmlSecBase64Ctx"><type>xmlSecBase64CtxPtr</type></link> ctx</parameter>,
                       <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *in</parameter>,
                       <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> inSize</parameter>,
                       <parameter><link linkend="xmlSecByte"><type>xmlSecByte</type></link> *out</parameter>,
                       <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> outSize</parameter>);</programlisting>
<para>Encodes or decodes the next piece of data from input buffer.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ctx</para></entry>
<entry role="parameter_description"><para>the pointer to <link linkend="xmlSecBase64Ctx"><type>xmlSecBase64Ctx</type></link> structure</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>in</para></entry>
<entry role="parameter_description"><para>the input buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>inSize</para></entry>
<entry role="parameter_description"><para>the input buffer size</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>out</para></entry>
<entry role="parameter_description"><para>the output buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>outSize</para></entry>
<entry role="parameter_description"><para>the output buffer size</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the number of bytes written to output buffer or
-1 if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBase64CtxFinal" role="function">
<title>xmlSecBase64CtxFinal&#160;()</title>
<indexterm zone="xmlSecBase64CtxFinal"><primary>xmlSecBase64CtxFinal</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBase64CtxFinal (<parameter><link linkend="xmlSecBase64Ctx"><type>xmlSecBase64CtxPtr</type></link> ctx</parameter>,
                      <parameter><link linkend="xmlSecByte"><type>xmlSecByte</type></link> *out</parameter>,
                      <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> outSize</parameter>);</programlisting>
<para>Encodes or decodes the last piece of data stored in the context
and finalizes the result.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>ctx</para></entry>
<entry role="parameter_description"><para>the pointer to <link linkend="xmlSecBase64Ctx"><type>xmlSecBase64Ctx</type></link> structure</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>out</para></entry>
<entry role="parameter_description"><para>the output buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>outSize</para></entry>
<entry role="parameter_description"><para>the output buffer size</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the number of bytes written to output buffer or
-1 if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBase64Encode" role="function">
<title>xmlSecBase64Encode&#160;()</title>
<indexterm zone="xmlSecBase64Encode"><primary>xmlSecBase64Encode</primary></indexterm>
<programlisting language="C"><link linkend="xmlChar"><returnvalue>xmlChar</returnvalue></link>&#160;*
xmlSecBase64Encode (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                    <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> len</parameter>,
                    <parameter><link linkend="int"><type>int</type></link> columns</parameter>);</programlisting>
<para>Encodes the data from input buffer and allocates the string for the result.
The caller is responsible for freeing returned buffer using
<link linkend="xmlFree"><function>xmlFree()</function></link> function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>the input buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>len</para></entry>
<entry role="parameter_description"><para>the input buffer size.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>columns</para></entry>
<entry role="parameter_description"><para>the output max line length (if 0 then no line breaks
would be inserted)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> newly allocated string with base64 encoded data
or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBase64Decode" role="function">
<title>xmlSecBase64Decode&#160;()</title>
<indexterm zone="xmlSecBase64Decode"><primary>xmlSecBase64Decode</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBase64Decode (<parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *str</parameter>,
                    <parameter><link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                    <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> len</parameter>);</programlisting>
<para>Decodes input base64 encoded string and puts result into
the output buffer.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para>the input buffer with base64 encoded string</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>the output buffer</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>len</para></entry>
<entry role="parameter_description"><para>the output buffer size</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the number of bytes written to the output buffer or
a negative value if an error occurs</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="xmlsec-base64.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="XMLSEC-BASE64-LINESIZE:CAPS" role="macro">
<title>XMLSEC_BASE64_LINESIZE</title>
<indexterm zone="XMLSEC-BASE64-LINESIZE:CAPS"><primary>XMLSEC_BASE64_LINESIZE</primary></indexterm>
<programlisting language="C">#define XMLSEC_BASE64_LINESIZE                          64
</programlisting>
<para>The default maximum base64 encoded line size.</para>
</refsect2>

</refsect1>

</refentry>
