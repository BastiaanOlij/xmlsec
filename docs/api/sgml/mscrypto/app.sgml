<refentry id="xmlsec-mscrypto-app">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-mscrypto-app.top_of_page">app</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  XMLSEC-MSCRYPTO Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>app</refname>
<refpurpose>Application functions implementation for MS Crypto.</refpurpose>
</refnamediv>

<refsynopsisdiv id="xmlsec-mscrypto-app.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrAdoptKey">xmlSecMSCryptoAppDefaultKeysMngrAdoptKey</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrAdoptKeyStore">xmlSecMSCryptoAppDefaultKeysMngrAdoptKeyStore</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCERTSTORE:CAPS"><type>HCERTSTORE</type></link> keyStore</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrAdoptTrustedStore">xmlSecMSCryptoAppDefaultKeysMngrAdoptTrustedStore</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCERTSTORE:CAPS"><type>HCERTSTORE</type></link> trustedStore</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrAdoptUntrustedStore">xmlSecMSCryptoAppDefaultKeysMngrAdoptUntrustedStore</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCERTSTORE:CAPS"><type>HCERTSTORE</type></link> untrustedStore</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrInit">xmlSecMSCryptoAppDefaultKeysMngrInit</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrLoad">xmlSecMSCryptoAppDefaultKeysMngrLoad</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *uri</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrPrivateKeyLoad">xmlSecMSCryptoAppDefaultKeysMngrPrivateKeyLoad</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCRYPTKEY:CAPS"><type>HCRYPTKEY</type></link> hKey</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrPublicKeyLoad">xmlSecMSCryptoAppDefaultKeysMngrPublicKeyLoad</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCRYPTKEY:CAPS"><type>HCRYPTKEY</type></link> hKey</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrSave">xmlSecMSCryptoAppDefaultKeysMngrSave</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppDefaultKeysMngrSymKeyLoad">xmlSecMSCryptoAppDefaultKeysMngrSymKeyLoad</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCRYPTKEY:CAPS"><type>HCRYPTKEY</type></link> hKey</parameter>);
<link linkend="LPCTSTR:CAPS"><returnvalue>LPCTSTR</returnvalue></link>             <link linkend="xmlSecMSCryptoAppGetCertStoreName">xmlSecMSCryptoAppGetCertStoreName</link>   (<parameter><type>void</type></parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link> *              <link linkend="xmlSecMSCryptoAppGetDefaultPwdCallback">xmlSecMSCryptoAppGetDefaultPwdCallback</link>
                                                        (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppInit">xmlSecMSCryptoAppInit</link>               (<parameter>const <link linkend="char"><type>char</type></link> *config</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppKeyCertLoad">xmlSecMSCryptoAppKeyCertLoad</link>        (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppKeyCertLoadMemory">xmlSecMSCryptoAppKeyCertLoadMemory</link>  (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);
<link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        <link linkend="xmlSecMSCryptoAppKeyLoad">xmlSecMSCryptoAppKeyLoad</link>            (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);
<link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        <link linkend="xmlSecMSCryptoAppKeyLoadMemory">xmlSecMSCryptoAppKeyLoadMemory</link>      (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppKeysMngrCertLoad">xmlSecMSCryptoAppKeysMngrCertLoad</link>   (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppKeysMngrCertLoadMemory">xmlSecMSCryptoAppKeysMngrCertLoadMemory</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);
<link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        <link linkend="xmlSecMSCryptoAppPkcs12Load">xmlSecMSCryptoAppPkcs12Load</link>         (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);
<link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        <link linkend="xmlSecMSCryptoAppPkcs12LoadMemory">xmlSecMSCryptoAppPkcs12LoadMemory</link>   (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecMSCryptoAppShutdown">xmlSecMSCryptoAppShutdown</link>           (<parameter><type>void</type></parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="xmlsec-mscrypto-app.description" role="desc">
<title role="desc.title">Description</title>
<para>
Application functions implementation for MS Crypto.
</para>
</refsect1>
<refsect1 id="xmlsec-mscrypto-app.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrAdoptKey" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrAdoptKey ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrAdoptKey"><primary>xmlSecMSCryptoAppDefaultKeysMngrAdoptKey</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrAdoptKey
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>);</programlisting>
<para>
Adds <parameter>key</parameter> to the keys manager <parameter>mngr</parameter> created with <link linkend="xmlSecMSCryptoAppDefaultKeysMngrInit"><type>xmlSecMSCryptoAppDefaultKeysMngrInit</type></link>
function.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>the pointer to key.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrAdoptKeyStore" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrAdoptKeyStore ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrAdoptKeyStore"><primary>xmlSecMSCryptoAppDefaultKeysMngrAdoptKeyStore</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrAdoptKeyStore
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCERTSTORE:CAPS"><type>HCERTSTORE</type></link> keyStore</parameter>);</programlisting>
<para>
Adds <parameter>keyStore</parameter> to the list of key stores in the keys manager <parameter>mngr</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>keyStore</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys store.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value if an error occurs.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrAdoptTrustedStore" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrAdoptTrustedStore ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrAdoptTrustedStore"><primary>xmlSecMSCryptoAppDefaultKeysMngrAdoptTrustedStore</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrAdoptTrustedStore
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCERTSTORE:CAPS"><type>HCERTSTORE</type></link> trustedStore</parameter>);</programlisting>
<para>
Adds <parameter>trustedStore</parameter> to the list of trusted cert stores in the keys manager <parameter>mngr</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>trustedStore</parameter>&#160;:</term>
<listitem><simpara>the pointer to certs store.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value if an error occurs.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrAdoptUntrustedStore" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrAdoptUntrustedStore ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrAdoptUntrustedStore"><primary>xmlSecMSCryptoAppDefaultKeysMngrAdoptUntrustedStore</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrAdoptUntrustedStore
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCERTSTORE:CAPS"><type>HCERTSTORE</type></link> untrustedStore</parameter>);</programlisting>
<para>
Adds <parameter>trustedStore</parameter> to the list of un-trusted cert stores in the keys manager <parameter>mngr</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>untrustedStore</parameter>&#160;:</term>
<listitem><simpara>the pointer to certs store.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value if an error occurs.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrInit" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrInit ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrInit"><primary>xmlSecMSCryptoAppDefaultKeysMngrInit</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrInit
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>);</programlisting>
<para>
Initializes <parameter>mngr</parameter> with simple keys store <link linkend="xmlSecSimpleKeysStoreId"><type>xmlSecSimpleKeysStoreId</type></link>
and a default MSCrypto crypto key data stores.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrLoad" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrLoad ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrLoad"><primary>xmlSecMSCryptoAppDefaultKeysMngrLoad</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrLoad
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *uri</parameter>);</programlisting>
<para>
Loads XML keys file from <parameter>uri</parameter> to the keys manager <parameter>mngr</parameter> created
with <link linkend="xmlSecMSCryptoAppDefaultKeysMngrInit"><type>xmlSecMSCryptoAppDefaultKeysMngrInit</type></link> function.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>the uri.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrPrivateKeyLoad" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrPrivateKeyLoad ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrPrivateKeyLoad"><primary>xmlSecMSCryptoAppDefaultKeysMngrPrivateKeyLoad</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrPrivateKeyLoad
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCRYPTKEY:CAPS"><type>HCRYPTKEY</type></link> hKey</parameter>);</programlisting>
<para>
Adds private key <parameter>hKey</parameter> to the keys manager <parameter>mngr</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hKey</parameter>&#160;:</term>
<listitem><simpara>the key handle.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrPublicKeyLoad" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrPublicKeyLoad ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrPublicKeyLoad"><primary>xmlSecMSCryptoAppDefaultKeysMngrPublicKeyLoad</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrPublicKeyLoad
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCRYPTKEY:CAPS"><type>HCRYPTKEY</type></link> hKey</parameter>);</programlisting>
<para>
Adds public key <parameter>hKey</parameter> to the keys manager <parameter>mngr</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hKey</parameter>&#160;:</term>
<listitem><simpara>the key handle.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrSave" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrSave ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrSave"><primary>xmlSecMSCryptoAppDefaultKeysMngrSave</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrSave
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);</programlisting>
<para>
Saves keys from <parameter>mngr</parameter> to  XML keys file.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the destination filename.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>the type of keys to save (public/private/symmetric).</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppDefaultKeysMngrSymKeyLoad" role="function">
<title>xmlSecMSCryptoAppDefaultKeysMngrSymKeyLoad ()</title>
<indexterm zone="xmlSecMSCryptoAppDefaultKeysMngrSymKeyLoad"><primary>xmlSecMSCryptoAppDefaultKeysMngrSymKeyLoad</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppDefaultKeysMngrSymKeyLoad
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="HCRYPTKEY:CAPS"><type>HCRYPTKEY</type></link> hKey</parameter>);</programlisting>
<para>
Adds symmetric key <parameter>hKey</parameter> to the keys manager <parameter>mngr</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>hKey</parameter>&#160;:</term>
<listitem><simpara>the key handle.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppGetCertStoreName" role="function">
<title>xmlSecMSCryptoAppGetCertStoreName ()</title>
<indexterm zone="xmlSecMSCryptoAppGetCertStoreName"><primary>xmlSecMSCryptoAppGetCertStoreName</primary></indexterm>
<programlisting><link linkend="LPCTSTR:CAPS"><returnvalue>LPCTSTR</returnvalue></link>             xmlSecMSCryptoAppGetCertStoreName   (<parameter><type>void</type></parameter>);</programlisting>
<para>
Gets the MS Crypto certs store name set by <parameter>xmlSecMSCryptoAppInit</parameter> function.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>the MS Crypto certs name used by xmlsec-mscrypto.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppGetDefaultPwdCallback" role="function">
<title>xmlSecMSCryptoAppGetDefaultPwdCallback ()</title>
<indexterm zone="xmlSecMSCryptoAppGetDefaultPwdCallback"><primary>xmlSecMSCryptoAppGetDefaultPwdCallback</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link> *              xmlSecMSCryptoAppGetDefaultPwdCallback
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
Gets default password callback.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>default password callback.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppInit" role="function">
<title>xmlSecMSCryptoAppInit ()</title>
<indexterm zone="xmlSecMSCryptoAppInit"><primary>xmlSecMSCryptoAppInit</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppInit               (<parameter>const <link linkend="char"><type>char</type></link> *config</parameter>);</programlisting>
<para>
General crypto engine initialization. This function is used
by XMLSec command line utility and called before
<parameter>xmlSecInit</parameter> function.
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara>the name of another then the default ms certificate store.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppKeyCertLoad" role="function">
<title>xmlSecMSCryptoAppKeyCertLoad ()</title>
<indexterm zone="xmlSecMSCryptoAppKeyCertLoad"><primary>xmlSecMSCryptoAppKeyCertLoad</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppKeyCertLoad        (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);</programlisting>
<para>
Reads the certificate from $<parameter>filename</parameter> and adds it to key.
</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>the pointer to key.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the certificate filename.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the certificate file format.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppKeyCertLoadMemory" role="function">
<title>xmlSecMSCryptoAppKeyCertLoadMemory ()</title>
<indexterm zone="xmlSecMSCryptoAppKeyCertLoadMemory"><primary>xmlSecMSCryptoAppKeyCertLoadMemory</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppKeyCertLoadMemory  (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);</programlisting>
<para>
Reads the certificate from $<parameter>data</parameter> and adds it to key.
</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>the pointer to key.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the binary certificate.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dataSize</parameter>&#160;:</term>
<listitem><simpara>size of certificate binary (data)</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the certificate file format.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppKeyLoad" role="function">
<title>xmlSecMSCryptoAppKeyLoad ()</title>
<indexterm zone="xmlSecMSCryptoAppKeyLoad"><primary>xmlSecMSCryptoAppKeyLoad</primary></indexterm>
<programlisting><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        xmlSecMSCryptoAppKeyLoad            (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>
Reads key from the a file.
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the key filename.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the key file format.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwd</parameter>&#160;:</term>
<listitem><simpara>the key file password.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallback</parameter>&#160;:</term>
<listitem><simpara>the key password callback.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallbackCtx</parameter>&#160;:</term>
<listitem><simpara>the user context for password callback.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>pointer to the key or NULL if an error occurs.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppKeyLoadMemory" role="function">
<title>xmlSecMSCryptoAppKeyLoadMemory ()</title>
<indexterm zone="xmlSecMSCryptoAppKeyLoadMemory"><primary>xmlSecMSCryptoAppKeyLoadMemory</primary></indexterm>
<programlisting><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        xmlSecMSCryptoAppKeyLoadMemory      (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>
Reads key from the a file.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the key binary data.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dataSize</parameter>&#160;:</term>
<listitem><simpara>the key data size.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the key format.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwd</parameter>&#160;:</term>
<listitem><simpara>the key password.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallback</parameter>&#160;:</term>
<listitem><simpara>the key password callback.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallbackCtx</parameter>&#160;:</term>
<listitem><simpara>the user context for password callback.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>pointer to the key or NULL if an error occurs.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppKeysMngrCertLoad" role="function">
<title>xmlSecMSCryptoAppKeysMngrCertLoad ()</title>
<indexterm zone="xmlSecMSCryptoAppKeysMngrCertLoad"><primary>xmlSecMSCryptoAppKeysMngrCertLoad</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppKeysMngrCertLoad   (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);</programlisting>
<para>
Reads cert from <parameter>filename</parameter> and adds to the list of trusted or known
untrusted certs in <parameter>store</parameter> (not implemented yet).
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the certificate file.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the certificate file format.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>the flag that indicates is the certificate in <parameter>filename</parameter>
trusted or not.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppKeysMngrCertLoadMemory" role="function">
<title>xmlSecMSCryptoAppKeysMngrCertLoadMemory ()</title>
<indexterm zone="xmlSecMSCryptoAppKeysMngrCertLoadMemory"><primary>xmlSecMSCryptoAppKeysMngrCertLoadMemory</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppKeysMngrCertLoadMemory
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);</programlisting>
<para>
Reads cert from <parameter>data</parameter> and adds to the list of trusted or known
untrusted certs in <parameter>store</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the keys manager.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the binary certificate.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dataSize</parameter>&#160;:</term>
<listitem><simpara>size of binary certificate (data)</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the certificate file format.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>the flag that indicates is the certificate in <parameter>filename</parameter>
trusted or not.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppPkcs12Load" role="function">
<title>xmlSecMSCryptoAppPkcs12Load ()</title>
<indexterm zone="xmlSecMSCryptoAppPkcs12Load"><primary>xmlSecMSCryptoAppPkcs12Load</primary></indexterm>
<programlisting><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        xmlSecMSCryptoAppPkcs12Load         (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>
Reads key and all associated certificates from the PKCS12 file
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the PKCS12 key filename.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwd</parameter>&#160;:</term>
<listitem><simpara>the PKCS12 file password.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallback</parameter>&#160;:</term>
<listitem><simpara>the password callback.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallbackCtx</parameter>&#160;:</term>
<listitem><simpara>the user context for password callback.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>pointer to the key or NULL if an error occurs.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppPkcs12LoadMemory" role="function">
<title>xmlSecMSCryptoAppPkcs12LoadMemory ()</title>
<indexterm zone="xmlSecMSCryptoAppPkcs12LoadMemory"><primary>xmlSecMSCryptoAppPkcs12LoadMemory</primary></indexterm>
<programlisting><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        xmlSecMSCryptoAppPkcs12LoadMemory   (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>
Reads key and all associated certificates from the PKCS12 binary
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the binary PKCS12 key in data.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dataSize</parameter>&#160;:</term>
<listitem><simpara>size of binary pkcs12 data</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwd</parameter>&#160;:</term>
<listitem><simpara>the PKCS12 file password.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallback</parameter>&#160;:</term>
<listitem><simpara>the password callback.</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallbackCtx</parameter>&#160;:</term>
<listitem><simpara>the user context for password callback.</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>pointer to the key or NULL if an error occurs.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecMSCryptoAppShutdown" role="function">
<title>xmlSecMSCryptoAppShutdown ()</title>
<indexterm zone="xmlSecMSCryptoAppShutdown"><primary>xmlSecMSCryptoAppShutdown</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecMSCryptoAppShutdown           (<parameter><type>void</type></parameter>);</programlisting>
<para>
General crypto engine shutdown. This function is used
by XMLSec command line utility and called after
<parameter>xmlSecShutdown</parameter> function.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>0 on success or a negative value otherwise.</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
