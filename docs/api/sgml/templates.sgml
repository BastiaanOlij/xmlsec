<refentry id="xmlsec-templates">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-templates.top_of_page">templates</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>templates</refname>
<refpurpose>Dynamic templates creation functions.</refpurpose>
</refnamediv>

<refsect1 id="xmlsec-templates.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplSignatureCreate">xmlSecTmplSignatureCreate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplSignatureCreateNsPref">xmlSecTmplSignatureCreateNsPref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplSignatureEnsureKeyInfo">xmlSecTmplSignatureEnsureKeyInfo</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplSignatureAddReference">xmlSecTmplSignatureAddReference</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplSignatureAddObject">xmlSecTmplSignatureAddObject</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplSignatureGetSignMethodNode">xmlSecTmplSignatureGetSignMethodNode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplSignatureGetC14NMethodNode">xmlSecTmplSignatureGetC14NMethodNode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplReferenceAddTransform">xmlSecTmplReferenceAddTransform</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplObjectAddSignProperties">xmlSecTmplObjectAddSignProperties</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplObjectAddManifest">xmlSecTmplObjectAddManifest</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplManifestAddReference">xmlSecTmplManifestAddReference</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplEncDataCreate">xmlSecTmplEncDataCreate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplEncDataEnsureKeyInfo">xmlSecTmplEncDataEnsureKeyInfo</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplEncDataEnsureEncProperties">xmlSecTmplEncDataEnsureEncProperties</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplEncDataAddEncProperty">xmlSecTmplEncDataAddEncProperty</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplEncDataEnsureCipherValue">xmlSecTmplEncDataEnsureCipherValue</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplEncDataEnsureCipherReference">xmlSecTmplEncDataEnsureCipherReference</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplEncDataGetEncMethodNode">xmlSecTmplEncDataGetEncMethodNode</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplCipherReferenceAddTransform">xmlSecTmplCipherReferenceAddTransform</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplReferenceListAddDataReference">xmlSecTmplReferenceListAddDataReference</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplReferenceListAddKeyReference">xmlSecTmplReferenceListAddKeyReference</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplKeyInfoAddKeyName">xmlSecTmplKeyInfoAddKeyName</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplKeyInfoAddKeyValue">xmlSecTmplKeyInfoAddKeyValue</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplKeyInfoAddX509Data">xmlSecTmplKeyInfoAddX509Data</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplKeyInfoAddRetrievalMethod">xmlSecTmplKeyInfoAddRetrievalMethod</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplRetrievalMethodAddTransform">xmlSecTmplRetrievalMethodAddTransform</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplKeyInfoAddEncryptedKey">xmlSecTmplKeyInfoAddEncryptedKey</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplX509DataAddIssuerSerial">xmlSecTmplX509DataAddIssuerSerial</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplX509IssuerSerialAddIssuerName">xmlSecTmplX509IssuerSerialAddIssuerName</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplX509IssuerSerialAddSerialNumber">xmlSecTmplX509IssuerSerialAddSerialNumber</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplX509DataAddSubjectName">xmlSecTmplX509DataAddSubjectName</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplX509DataAddSKI">xmlSecTmplX509DataAddSKI</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplX509DataAddCertificate">xmlSecTmplX509DataAddCertificate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplX509DataAddCRL">xmlSecTmplX509DataAddCRL</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplTransformAddHmacOutputLength">xmlSecTmplTransformAddHmacOutputLength</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplTransformAddRsaOaepParam">xmlSecTmplTransformAddRsaOaepParam</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplTransformAddXsltStylesheet">xmlSecTmplTransformAddXsltStylesheet</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplTransformAddC14NInclNamespaces">xmlSecTmplTransformAddC14NInclNamespaces</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplTransformAddXPath">xmlSecTmplTransformAddXPath</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplTransformAddXPath2">xmlSecTmplTransformAddXPath2</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTmplTransformAddXPointer">xmlSecTmplTransformAddXPointer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="xmlsec-templates.description" role="desc">
<title role="desc.title">Description</title>
<para>
Dynamic templates creation functions.
</para>

</refsect1>
<refsect1 id="xmlsec-templates.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="xmlSecTmplSignatureCreate" role="function">
<title>xmlSecTmplSignatureCreate&#160;()</title>
<indexterm zone="xmlSecTmplSignatureCreate"><primary>xmlSecTmplSignatureCreate</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplSignatureCreate (<parameter><link linkend="xmlDoc"><type>xmlDocPtr</type></link> doc</parameter>,
                           <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> c14nMethodId</parameter>,
                           <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> signMethodId</parameter>,
                           <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>);</programlisting>
<para>Creates new &lt;dsig:Signature/> node with the mandatory &lt;dsig:SignedInfo/>,
&lt;dsig:CanonicalizationMethod/>, &lt;dsig:SignatureMethod/> and
&lt;dsig:SignatureValue/> children and sub-children.
The application is responsible for inserting the returned node
in the XML document.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>doc</para></entry>
<entry role="parameter_description"><para>the pointer to signature document or NULL; in the
second case, application must later call <parameter>xmlSetTreeDoc</parameter>
to ensure that all the children nodes have correct
pointer to XML document.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>c14nMethodId</para></entry>
<entry role="parameter_description"><para>the signature canonicalization method.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>signMethodId</para></entry>
<entry role="parameter_description"><para>the signature  method.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the node id (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:Signature/> node or NULL if an
error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplSignatureCreateNsPref" role="function">
<title>xmlSecTmplSignatureCreateNsPref&#160;()</title>
<indexterm zone="xmlSecTmplSignatureCreateNsPref"><primary>xmlSecTmplSignatureCreateNsPref</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplSignatureCreateNsPref (<parameter><link linkend="xmlDoc"><type>xmlDocPtr</type></link> doc</parameter>,
                                 <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> c14nMethodId</parameter>,
                                 <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> signMethodId</parameter>,
                                 <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>,
                                 <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *nsPrefix</parameter>);</programlisting>
<para>Creates new &lt;dsig:Signature/> node with the mandatory
&lt;dsig:SignedInfo/>, &lt;dsig:CanonicalizationMethod/>,
&lt;dsig:SignatureMethod/> and &lt;dsig:SignatureValue/> children and
sub-children. This method differs from xmlSecTmplSignatureCreate in
that it will define the http://www.w3.org/2000/09/xmldsig#
namespace with the given prefix that will be used for all of the
appropriate child nodes.  The application is responsible for
inserting the returned node in the XML document.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>doc</para></entry>
<entry role="parameter_description"><para>the pointer to signature document or NULL; in the
second case, application must later call <parameter>xmlSetTreeDoc</parameter>
to ensure that all the children nodes have correct
pointer to XML document.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>c14nMethodId</para></entry>
<entry role="parameter_description"><para>the signature canonicalization method.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>signMethodId</para></entry>
<entry role="parameter_description"><para>the signature  method.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the node id (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nsPrefix</para></entry>
<entry role="parameter_description"><para>the namespace prefix for the signature element (e.g. "dsig"), or NULL</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:Signature/> node or NULL if an
error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplSignatureEnsureKeyInfo" role="function">
<title>xmlSecTmplSignatureEnsureKeyInfo&#160;()</title>
<indexterm zone="xmlSecTmplSignatureEnsureKeyInfo"><primary>xmlSecTmplSignatureEnsureKeyInfo</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplSignatureEnsureKeyInfo (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> signNode</parameter>,
                                  <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>);</programlisting>
<para>Adds (if necessary) &lt;dsig:KeyInfo/> node to the &lt;dsig:Signature/>
node <parameter>signNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>signNode</para></entry>
<entry role="parameter_description"><para>the  pointer to &lt;dsig:Signature/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the node id (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:KeyInfo/> node or NULL if an
error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplSignatureAddReference" role="function">
<title>xmlSecTmplSignatureAddReference&#160;()</title>
<indexterm zone="xmlSecTmplSignatureAddReference"><primary>xmlSecTmplSignatureAddReference</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplSignatureAddReference (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> signNode</parameter>,
                                 <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> digestMethodId</parameter>,
                                 <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>,
                                 <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *uri</parameter>,
                                 <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *type</parameter>);</programlisting>
<para>Adds &lt;dsig:Reference/> node with given URI (<parameter>uri</parameter>
), Id (<parameter>id</parameter>
) and
Type (<parameter>type</parameter>
) attributes and the required children &lt;dsig:DigestMethod/> and
&lt;dsig:DigestValue/> to the &lt;dsig:SignedInfo/> child of <parameter>signNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>signNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Signature/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>digestMethodId</para></entry>
<entry role="parameter_description"><para>the reference digest method.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the node id (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the reference node uri (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the reference node type (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:Reference/> node or NULL
if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplSignatureAddObject" role="function">
<title>xmlSecTmplSignatureAddObject&#160;()</title>
<indexterm zone="xmlSecTmplSignatureAddObject"><primary>xmlSecTmplSignatureAddObject</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplSignatureAddObject (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> signNode</parameter>,
                              <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>,
                              <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *mimeType</parameter>,
                              <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *encoding</parameter>);</programlisting>
<para>Adds &lt;dsig:Object/> node to the &lt;dsig:Signature/> node <parameter>signNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>signNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Signature/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the node id (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mimeType</para></entry>
<entry role="parameter_description"><para>the object mime type (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>encoding</para></entry>
<entry role="parameter_description"><para>the object encoding (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:Object/> node or NULL
if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplSignatureGetSignMethodNode" role="function">
<title>xmlSecTmplSignatureGetSignMethodNode&#160;()</title>
<indexterm zone="xmlSecTmplSignatureGetSignMethodNode"><primary>xmlSecTmplSignatureGetSignMethodNode</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplSignatureGetSignMethodNode (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> signNode</parameter>);</programlisting>
<para>Gets pointer to &lt;dsig:SignatureMethod/> child of &lt;dsig:KeyInfo/> node.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>signNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Signature /> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> pointer to &lt;dsig:SignatureMethod /> node or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplSignatureGetC14NMethodNode" role="function">
<title>xmlSecTmplSignatureGetC14NMethodNode&#160;()</title>
<indexterm zone="xmlSecTmplSignatureGetC14NMethodNode"><primary>xmlSecTmplSignatureGetC14NMethodNode</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplSignatureGetC14NMethodNode (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> signNode</parameter>);</programlisting>
<para>Gets pointer to &lt;dsig:CanonicalizationMethod/> child of &lt;dsig:KeyInfo/> node.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>signNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Signature /> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> pointer to &lt;dsig:CanonicalizationMethod /> node or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplReferenceAddTransform" role="function">
<title>xmlSecTmplReferenceAddTransform&#160;()</title>
<indexterm zone="xmlSecTmplReferenceAddTransform"><primary>xmlSecTmplReferenceAddTransform</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplReferenceAddTransform (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> referenceNode</parameter>,
                                 <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> transformId</parameter>);</programlisting>
<para>Adds &lt;dsig:Transform/> node to the &lt;dsig:Reference/> node <parameter>referenceNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>referenceNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Reference/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>transformId</para></entry>
<entry role="parameter_description"><para>the transform method id.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:Transform/> node or NULL if an
error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplObjectAddSignProperties" role="function">
<title>xmlSecTmplObjectAddSignProperties&#160;()</title>
<indexterm zone="xmlSecTmplObjectAddSignProperties"><primary>xmlSecTmplObjectAddSignProperties</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplObjectAddSignProperties (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> objectNode</parameter>,
                                   <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>,
                                   <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *target</parameter>);</programlisting>
<para>Adds &lt;dsig:SignatureProperties/> node to the &lt;dsig:Object/> node <parameter>objectNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>objectNode</para></entry>
<entry role="parameter_description"><para>the  pointer to &lt;dsig:Object/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the node id (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>target</para></entry>
<entry role="parameter_description"><para>the Target  (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:SignatureProperties/> node or NULL
if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplObjectAddManifest" role="function">
<title>xmlSecTmplObjectAddManifest&#160;()</title>
<indexterm zone="xmlSecTmplObjectAddManifest"><primary>xmlSecTmplObjectAddManifest</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplObjectAddManifest (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> objectNode</parameter>,
                             <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>);</programlisting>
<para>Adds &lt;dsig:Manifest/> node to the &lt;dsig:Object/> node <parameter>objectNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>objectNode</para></entry>
<entry role="parameter_description"><para>the  pointer to &lt;dsig:Object/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the node id (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:Manifest/> node or NULL
if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplManifestAddReference" role="function">
<title>xmlSecTmplManifestAddReference&#160;()</title>
<indexterm zone="xmlSecTmplManifestAddReference"><primary>xmlSecTmplManifestAddReference</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplManifestAddReference (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> manifestNode</parameter>,
                                <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> digestMethodId</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *uri</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *type</parameter>);</programlisting>
<para>Adds &lt;dsig:Reference/> node with specified URI (<parameter>uri</parameter>
), Id (<parameter>id</parameter>
) and
Type (<parameter>type</parameter>
) attributes and the required children &lt;dsig:DigestMethod/> and
&lt;dsig:DigestValue/> to the &lt;dsig:Manifest/> node <parameter>manifestNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>manifestNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Manifest/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>digestMethodId</para></entry>
<entry role="parameter_description"><para>the reference digest method.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the node id (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the reference node uri (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the reference node type (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:Reference/> node or NULL
if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplEncDataCreate" role="function">
<title>xmlSecTmplEncDataCreate&#160;()</title>
<indexterm zone="xmlSecTmplEncDataCreate"><primary>xmlSecTmplEncDataCreate</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplEncDataCreate (<parameter><link linkend="xmlDoc"><type>xmlDocPtr</type></link> doc</parameter>,
                         <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> encMethodId</parameter>,
                         <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>,
                         <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *type</parameter>,
                         <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *mimeType</parameter>,
                         <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *encoding</parameter>);</programlisting>
<para>Creates new &lt;enc:EncryptedData /> node for encryption template.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>doc</para></entry>
<entry role="parameter_description"><para>the pointer to signature document or NULL; in the later
case, application must later call <parameter>xmlSetTreeDoc</parameter>
to ensure
that all the children nodes have correct pointer to XML document.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>encMethodId</para></entry>
<entry role="parameter_description"><para>the encryption method (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the Id attribute (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the Type attribute (optional)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mimeType</para></entry>
<entry role="parameter_description"><para>the MimeType attribute (optional)</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>encoding</para></entry>
<entry role="parameter_description"><para>the Encoding attribute (optional)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer newly created  &lt;enc:EncryptedData/> node or NULL
if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplEncDataEnsureKeyInfo" role="function">
<title>xmlSecTmplEncDataEnsureKeyInfo&#160;()</title>
<indexterm zone="xmlSecTmplEncDataEnsureKeyInfo"><primary>xmlSecTmplEncDataEnsureKeyInfo</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplEncDataEnsureKeyInfo (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> encNode</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>);</programlisting>
<para>Adds &lt;dsig:KeyInfo/> to the  &lt;enc:EncryptedData/> node <parameter>encNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the Id attrbibute (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:KeyInfo/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplEncDataEnsureEncProperties" role="function">
<title>xmlSecTmplEncDataEnsureEncProperties&#160;()</title>
<indexterm zone="xmlSecTmplEncDataEnsureEncProperties"><primary>xmlSecTmplEncDataEnsureEncProperties</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplEncDataEnsureEncProperties (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> encNode</parameter>,
                                      <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>);</programlisting>
<para>Adds &lt;enc:EncryptionProperties/> node to the &lt;enc:EncryptedData/>
node <parameter>encNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the Id attribute (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;enc:EncryptionProperties/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplEncDataAddEncProperty" role="function">
<title>xmlSecTmplEncDataAddEncProperty&#160;()</title>
<indexterm zone="xmlSecTmplEncDataAddEncProperty"><primary>xmlSecTmplEncDataAddEncProperty</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplEncDataAddEncProperty (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> encNode</parameter>,
                                 <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>,
                                 <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *target</parameter>);</programlisting>
<para>Adds &lt;enc:EncryptionProperty/> node (and the parent
&lt;enc:EncryptionProperties/> node if required) to the
&lt;enc:EncryptedData/> node <parameter>encNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the Id attribute (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>target</para></entry>
<entry role="parameter_description"><para>the Target attribute (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;enc:EncryptionProperty/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplEncDataEnsureCipherValue" role="function">
<title>xmlSecTmplEncDataEnsureCipherValue&#160;()</title>
<indexterm zone="xmlSecTmplEncDataEnsureCipherValue"><primary>xmlSecTmplEncDataEnsureCipherValue</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplEncDataEnsureCipherValue (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> encNode</parameter>);</programlisting>
<para>Adds &lt;enc:CipherValue/> to the &lt;enc:EncryptedData/> node <parameter>encNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;enc:CipherValue/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplEncDataEnsureCipherReference" role="function">
<title>xmlSecTmplEncDataEnsureCipherReference&#160;()</title>
<indexterm zone="xmlSecTmplEncDataEnsureCipherReference"><primary>xmlSecTmplEncDataEnsureCipherReference</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplEncDataEnsureCipherReference
                               (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> encNode</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *uri</parameter>);</programlisting>
<para>Adds &lt;enc:CipherReference/> node with specified URI attribute <parameter>uri</parameter>

to the &lt;enc:EncryptedData/> node <parameter>encNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the URI attribute (may be NULL).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;enc:CipherReference/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplEncDataGetEncMethodNode" role="function">
<title>xmlSecTmplEncDataGetEncMethodNode&#160;()</title>
<indexterm zone="xmlSecTmplEncDataGetEncMethodNode"><primary>xmlSecTmplEncDataGetEncMethodNode</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplEncDataGetEncMethodNode (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> encNode</parameter>);</programlisting>
<para>Gets pointer to &lt;enc:EncrytpionMethod/> node.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EcnryptedData /> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> pointer to &lt;enc:EncryptionMethod /> node or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplCipherReferenceAddTransform" role="function">
<title>xmlSecTmplCipherReferenceAddTransform&#160;()</title>
<indexterm zone="xmlSecTmplCipherReferenceAddTransform"><primary>xmlSecTmplCipherReferenceAddTransform</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplCipherReferenceAddTransform (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> cipherReferenceNode</parameter>,
                                       <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> transformId</parameter>);</programlisting>
<para>Adds &lt;dsig:Transform/> node (and the parent &lt;dsig:Transforms/> node)
with specified transform methods <parameter>transform</parameter>
 to the &lt;enc:CipherReference/>
child node of the &lt;enc:EncryptedData/> node <parameter>encNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>cipherReferenceNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:CipherReference/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>transformId</para></entry>
<entry role="parameter_description"><para>the transform id.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;dsig:Transform/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplReferenceListAddDataReference" role="function">
<title>xmlSecTmplReferenceListAddDataReference&#160;()</title>
<indexterm zone="xmlSecTmplReferenceListAddDataReference"><primary>xmlSecTmplReferenceListAddDataReference</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplReferenceListAddDataReference
                               (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> encNode</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *uri</parameter>);</programlisting>
<para>Adds &lt;enc:DataReference/> and the parent &lt;enc:ReferenceList/> node (if needed).</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedKey/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>uri to reference (optional)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;enc:DataReference/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplReferenceListAddKeyReference" role="function">
<title>xmlSecTmplReferenceListAddKeyReference&#160;()</title>
<indexterm zone="xmlSecTmplReferenceListAddKeyReference"><primary>xmlSecTmplReferenceListAddKeyReference</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplReferenceListAddKeyReference
                               (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> encNode</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *uri</parameter>);</programlisting>
<para>Adds &lt;enc:KeyReference/> and the parent &lt;enc:ReferenceList/> node (if needed).</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedKey/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>uri to reference (optional)</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to newly created &lt;enc:KeyReference/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplKeyInfoAddKeyName" role="function">
<title>xmlSecTmplKeyInfoAddKeyName&#160;()</title>
<indexterm zone="xmlSecTmplKeyInfoAddKeyName"><primary>xmlSecTmplKeyInfoAddKeyName</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplKeyInfoAddKeyName (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> keyInfoNode</parameter>,
                             <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *name</parameter>);</programlisting>
<para>Adds &lt;dsig:KeyName/> node to the &lt;dsig:KeyInfo/> node <parameter>keyInfoNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>keyInfoNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:KeyInfo/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>the key name (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:KeyName/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplKeyInfoAddKeyValue" role="function">
<title>xmlSecTmplKeyInfoAddKeyValue&#160;()</title>
<indexterm zone="xmlSecTmplKeyInfoAddKeyValue"><primary>xmlSecTmplKeyInfoAddKeyValue</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplKeyInfoAddKeyValue (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> keyInfoNode</parameter>);</programlisting>
<para>Adds &lt;dsig:KeyValue/> node to the &lt;dsig:KeyInfo/> node <parameter>keyInfoNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>keyInfoNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:KeyInfo/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:KeyValue/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplKeyInfoAddX509Data" role="function">
<title>xmlSecTmplKeyInfoAddX509Data&#160;()</title>
<indexterm zone="xmlSecTmplKeyInfoAddX509Data"><primary>xmlSecTmplKeyInfoAddX509Data</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplKeyInfoAddX509Data (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> keyInfoNode</parameter>);</programlisting>
<para>Adds &lt;dsig:X509Data/> node to the &lt;dsig:KeyInfo/> node <parameter>keyInfoNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>keyInfoNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:KeyInfo/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:X509Data/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplKeyInfoAddRetrievalMethod" role="function">
<title>xmlSecTmplKeyInfoAddRetrievalMethod&#160;()</title>
<indexterm zone="xmlSecTmplKeyInfoAddRetrievalMethod"><primary>xmlSecTmplKeyInfoAddRetrievalMethod</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplKeyInfoAddRetrievalMethod (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> keyInfoNode</parameter>,
                                     <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *uri</parameter>,
                                     <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *type</parameter>);</programlisting>
<para>Adds &lt;dsig:RetrievalMethod/> node to the &lt;dsig:KeyInfo/> node <parameter>keyInfoNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>keyInfoNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:KeyInfo/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the URI attribute (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the Type attribute(optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:RetrievalMethod/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplRetrievalMethodAddTransform" role="function">
<title>xmlSecTmplRetrievalMethodAddTransform&#160;()</title>
<indexterm zone="xmlSecTmplRetrievalMethodAddTransform"><primary>xmlSecTmplRetrievalMethodAddTransform</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplRetrievalMethodAddTransform (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> retrMethodNode</parameter>,
                                       <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> transformId</parameter>);</programlisting>
<para>Adds &lt;dsig:Transform/> node (and the parent &lt;dsig:Transforms/> node
if required) to the &lt;dsig:RetrievalMethod/> node <parameter>retrMethod</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>retrMethodNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:RetrievalMethod/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>transformId</para></entry>
<entry role="parameter_description"><para>the transform id.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:Transforms/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplKeyInfoAddEncryptedKey" role="function">
<title>xmlSecTmplKeyInfoAddEncryptedKey&#160;()</title>
<indexterm zone="xmlSecTmplKeyInfoAddEncryptedKey"><primary>xmlSecTmplKeyInfoAddEncryptedKey</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplKeyInfoAddEncryptedKey (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> keyInfoNode</parameter>,
                                  <parameter><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link> encMethodId</parameter>,
                                  <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *id</parameter>,
                                  <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *type</parameter>,
                                  <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *recipient</parameter>);</programlisting>
<para>Adds &lt;enc:EncryptedKey/> node with given attributes to
the &lt;dsig:KeyInfo/> node <parameter>keyInfoNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>keyInfoNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:KeyInfo/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>encMethodId</para></entry>
<entry role="parameter_description"><para>the encryption method (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>the Id attribute (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the Type attribute (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>recipient</para></entry>
<entry role="parameter_description"><para>the Recipient attribute (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;enc:EncryptedKey/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplX509DataAddIssuerSerial" role="function">
<title>xmlSecTmplX509DataAddIssuerSerial&#160;()</title>
<indexterm zone="xmlSecTmplX509DataAddIssuerSerial"><primary>xmlSecTmplX509DataAddIssuerSerial</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplX509DataAddIssuerSerial (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> x509DataNode</parameter>);</programlisting>
<para>Adds &lt;dsig:X509IssuerSerial/> node to the given &lt;dsig:X509Data/> node.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>x509DataNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:X509Data/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:X509IssuerSerial/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplX509IssuerSerialAddIssuerName" role="function">
<title>xmlSecTmplX509IssuerSerialAddIssuerName&#160;()</title>
<indexterm zone="xmlSecTmplX509IssuerSerialAddIssuerName"><primary>xmlSecTmplX509IssuerSerialAddIssuerName</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplX509IssuerSerialAddIssuerName
                               (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> x509IssuerSerialNode</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *issuerName</parameter>);</programlisting>
<para>Adds &lt;dsig:X509IssuerName/> node to the &lt;dsig:X509IssuerSerial/> node <parameter>x509IssuerSerialNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>x509IssuerSerialNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:X509IssuerSerial/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>issuerName</para></entry>
<entry role="parameter_description"><para>the issuer name (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:X509IssuerName/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplX509IssuerSerialAddSerialNumber" role="function">
<title>xmlSecTmplX509IssuerSerialAddSerialNumber&#160;()</title>
<indexterm zone="xmlSecTmplX509IssuerSerialAddSerialNumber"><primary>xmlSecTmplX509IssuerSerialAddSerialNumber</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplX509IssuerSerialAddSerialNumber
                               (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> x509IssuerSerialNode</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *serial</parameter>);</programlisting>
<para>Adds &lt;dsig:X509SerialNumber/> node to the &lt;dsig:X509IssuerSerial/> node <parameter>x509IssuerSerialNode</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>x509IssuerSerialNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:X509IssuerSerial/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>serial</para></entry>
<entry role="parameter_description"><para>the serial number (optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:X509SerialNumber/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplX509DataAddSubjectName" role="function">
<title>xmlSecTmplX509DataAddSubjectName&#160;()</title>
<indexterm zone="xmlSecTmplX509DataAddSubjectName"><primary>xmlSecTmplX509DataAddSubjectName</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplX509DataAddSubjectName (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> x509DataNode</parameter>);</programlisting>
<para>Adds &lt;dsig:X509SubjectName/> node to the given &lt;dsig:X509Data/> node.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>x509DataNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:X509Data/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:X509SubjectName/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplX509DataAddSKI" role="function">
<title>xmlSecTmplX509DataAddSKI&#160;()</title>
<indexterm zone="xmlSecTmplX509DataAddSKI"><primary>xmlSecTmplX509DataAddSKI</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplX509DataAddSKI (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> x509DataNode</parameter>);</programlisting>
<para>Adds &lt;dsig:X509SKI/> node to the given &lt;dsig:X509Data/> node.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>x509DataNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:X509Data/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:X509SKI/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplX509DataAddCertificate" role="function">
<title>xmlSecTmplX509DataAddCertificate&#160;()</title>
<indexterm zone="xmlSecTmplX509DataAddCertificate"><primary>xmlSecTmplX509DataAddCertificate</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplX509DataAddCertificate (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> x509DataNode</parameter>);</programlisting>
<para>Adds &lt;dsig:X509Certificate/> node to the given &lt;dsig:X509Data/> node.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>x509DataNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:X509Data/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:X509Certificate/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplX509DataAddCRL" role="function">
<title>xmlSecTmplX509DataAddCRL&#160;()</title>
<indexterm zone="xmlSecTmplX509DataAddCRL"><primary>xmlSecTmplX509DataAddCRL</primary></indexterm>
<programlisting language="C"><link linkend="xmlNode"><returnvalue>xmlNodePtr</returnvalue></link>
xmlSecTmplX509DataAddCRL (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> x509DataNode</parameter>);</programlisting>
<para>Adds &lt;dsig:X509CRL/> node to the given &lt;dsig:X509Data/> node.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>x509DataNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:X509Data/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the pointer to the newly created &lt;dsig:X509CRL/> node or
NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplTransformAddHmacOutputLength" role="function">
<title>xmlSecTmplTransformAddHmacOutputLength&#160;()</title>
<indexterm zone="xmlSecTmplTransformAddHmacOutputLength"><primary>xmlSecTmplTransformAddHmacOutputLength</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecTmplTransformAddHmacOutputLength
                               (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> transformNode</parameter>,
                                <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bitsLen</parameter>);</programlisting>
<para>Creates &lt;dsig:HMACOutputLength/> child for the HMAC transform
node <parameter>node</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>transformNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Transform/> node</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>bitsLen</para></entry>
<entry role="parameter_description"><para>the required length in bits</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success and a negatie value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplTransformAddRsaOaepParam" role="function">
<title>xmlSecTmplTransformAddRsaOaepParam&#160;()</title>
<indexterm zone="xmlSecTmplTransformAddRsaOaepParam"><primary>xmlSecTmplTransformAddRsaOaepParam</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecTmplTransformAddRsaOaepParam (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> transformNode</parameter>,
                                    <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                    <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> size</parameter>);</programlisting>
<para>Creates &lt;enc:OAEPParam/> child node in the <parameter>node</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>transformNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Transform/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buf</para></entry>
<entry role="parameter_description"><para>the OAEP param buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>the OAEP param buffer size.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplTransformAddXsltStylesheet" role="function">
<title>xmlSecTmplTransformAddXsltStylesheet&#160;()</title>
<indexterm zone="xmlSecTmplTransformAddXsltStylesheet"><primary>xmlSecTmplTransformAddXsltStylesheet</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecTmplTransformAddXsltStylesheet (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> transformNode</parameter>,
                                      <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *xslt</parameter>);</programlisting>
<para>Writes the XSLT transform expression to the <parameter>node</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>transformNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Transform/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>xslt</para></entry>
<entry role="parameter_description"><para>the XSLT transform exspression.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplTransformAddC14NInclNamespaces" role="function">
<title>xmlSecTmplTransformAddC14NInclNamespaces&#160;()</title>
<indexterm zone="xmlSecTmplTransformAddC14NInclNamespaces"><primary>xmlSecTmplTransformAddC14NInclNamespaces</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecTmplTransformAddC14NInclNamespaces
                               (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> transformNode</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *prefixList</parameter>);</programlisting>
<para>Adds "inclusive" namespaces to the ExcC14N transform node <parameter>node</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>transformNode</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;dsig:Transform/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>prefixList</para></entry>
<entry role="parameter_description"><para>the white space delimited  list of namespace prefixes,
where "<link linkend="default"><type>default</type></link>" indicates the default namespace
(optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 if success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplTransformAddXPath" role="function">
<title>xmlSecTmplTransformAddXPath&#160;()</title>
<indexterm zone="xmlSecTmplTransformAddXPath"><primary>xmlSecTmplTransformAddXPath</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecTmplTransformAddXPath (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> transformNode</parameter>,
                             <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *expression</parameter>,
                             <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> **nsList</parameter>);</programlisting>
<para>Writes XPath transform infromation to the &lt;dsig:Transform/> node
<parameter>node</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>transformNode</para></entry>
<entry role="parameter_description"><para>the pointer to the &lt;dsig:Transform/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>expression</para></entry>
<entry role="parameter_description"><para>the XPath expression.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nsList</para></entry>
<entry role="parameter_description"><para>the NULL terminated list of namespace prefix/href pairs
(optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 for success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplTransformAddXPath2" role="function">
<title>xmlSecTmplTransformAddXPath2&#160;()</title>
<indexterm zone="xmlSecTmplTransformAddXPath2"><primary>xmlSecTmplTransformAddXPath2</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecTmplTransformAddXPath2 (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> transformNode</parameter>,
                              <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *type</parameter>,
                              <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *expression</parameter>,
                              <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> **nsList</parameter>);</programlisting>
<para>Writes XPath2 transform infromation to the &lt;dsig:Transform/> node
<parameter>node</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>transformNode</para></entry>
<entry role="parameter_description"><para>the pointer to the &lt;dsig:Transform/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the XPath2 transform type ("union", "intersect" or "subtract").</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>expression</para></entry>
<entry role="parameter_description"><para>the XPath expression.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nsList</para></entry>
<entry role="parameter_description"><para>the NULL terminated list of namespace prefix/href pairs.
(optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 for success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTmplTransformAddXPointer" role="function">
<title>xmlSecTmplTransformAddXPointer&#160;()</title>
<indexterm zone="xmlSecTmplTransformAddXPointer"><primary>xmlSecTmplTransformAddXPointer</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecTmplTransformAddXPointer (<parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> transformNode</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *expression</parameter>,
                                <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> **nsList</parameter>);</programlisting>
<para>Writes XPoniter transform infromation to the &lt;dsig:Transform/> node
<parameter>node</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>transformNode</para></entry>
<entry role="parameter_description"><para>the pointer to the &lt;dsig:Transform/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>expression</para></entry>
<entry role="parameter_description"><para>the XPath expression.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>nsList</para></entry>
<entry role="parameter_description"><para>the NULL terminated list of namespace prefix/href pairs.
(optional).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 for success or a negative value otherwise.</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="xmlsec-templates.other_details" role="details">
<title role="details.title">Types and Values</title>

</refsect1>

</refentry>
