<refentry id="xmlsec-keyinfo">
<refmeta>
<refentrytitle>keyinfo.h</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>keyinfo.h</refname><refpurpose>The &lt;dsig:KeyInfo&gt; element manipulation functions.</refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



int         <link linkend="xmlSecKeyInfoNodeRead">xmlSecKeyInfoNodeRead</link>           (<link linkend="xmlNodePtr">xmlNodePtr</link> keyInfoNode,
                                             <link linkend="xmlSecKeyPtr">xmlSecKeyPtr</link> key,
                                             <link linkend="xmlSecKeyInfoCtxPtr">xmlSecKeyInfoCtxPtr</link> keyInfoCtx);
int         <link linkend="xmlSecKeyInfoNodeWrite">xmlSecKeyInfoNodeWrite</link>          (<link linkend="xmlNodePtr">xmlNodePtr</link> keyInfoNode,
                                             <link linkend="xmlSecKeyPtr">xmlSecKeyPtr</link> key,
                                             <link linkend="xmlSecKeyInfoCtxPtr">xmlSecKeyInfoCtxPtr</link> keyInfoCtx);
#define     <link linkend="xmlSecKeyDataNameId">xmlSecKeyDataNameId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecKeyDataNameGetKlass">xmlSecKeyDataNameGetKlass</link>   (void);
#define     <link linkend="xmlSecKeyDataValueId">xmlSecKeyDataValueId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecKeyDataValueGetKlass">xmlSecKeyDataValueGetKlass</link>  (void);
#define     <link linkend="xmlSecKeyDataRetrievalMethodId">xmlSecKeyDataRetrievalMethodId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecKeyDataRetrievalMethodGetKlass">xmlSecKeyDataRetrievalMethodGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecKeyDataEncryptedKeyId">xmlSecKeyDataEncryptedKeyId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecKeyDataEncryptedKeyGetKlass">xmlSecKeyDataEncryptedKeyGetKlass</link>
                                            (void);
struct      <link linkend="xmlSecKeyInfoCtx">xmlSecKeyInfoCtx</link>;
#define     <link linkend="xmlSecKeyInfoNodeCheckOrigin">xmlSecKeyInfoNodeCheckOrigin</link>    (status, origin)
#define     <link linkend="xmlSecKeyInfoNodeCheckRetrievalsLevel">xmlSecKeyInfoNodeCheckRetrievalsLevel</link>(status)
#define     <link linkend="xmlSecKeyInfoNodeCheckEncKeysLevel">xmlSecKeyInfoNodeCheckEncKeysLevel</link>(status)
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="xmlSecKeyInfoNodeRead">xmlSecKeyInfoNodeRead ()</title>
<programlisting>int         xmlSecKeyInfoNodeRead           (<link linkend="xmlNodePtr">xmlNodePtr</link> keyInfoNode,
                                             <link linkend="xmlSecKeyPtr">xmlSecKeyPtr</link> key,
                                             <link linkend="xmlSecKeyInfoCtxPtr">xmlSecKeyInfoCtxPtr</link> keyInfoCtx);</programlisting>
<para>
Parses the &lt;dsig:KeyInfo&gt; element and extracts the key (with required 
id, type and usage).</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>keyInfoNode</parameter>&nbsp;:</entry>
<entry> the pointer to &lt;dsig:KeyInfo&gt; node.
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>keyInfoCtx</parameter>&nbsp;:</entry>
<entry> the pointer to <link linkend="xmlSecKeyInfoCtx">xmlSecKeyInfoCtx</link> structure.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>0 on success or -1 if an error occurs.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyInfoNodeWrite">xmlSecKeyInfoNodeWrite ()</title>
<programlisting>int         xmlSecKeyInfoNodeWrite          (<link linkend="xmlNodePtr">xmlNodePtr</link> keyInfoNode,
                                             <link linkend="xmlSecKeyPtr">xmlSecKeyPtr</link> key,
                                             <link linkend="xmlSecKeyInfoCtxPtr">xmlSecKeyInfoCtxPtr</link> keyInfoCtx);</programlisting>
<para>
Writes the key into the &lt;dsig:KeyInfo&gt; template <parameter>keyInfoNode</parameter>.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>keyInfoNode</parameter>&nbsp;:</entry>
<entry> the pointer to &lt;dsig:KeyInfo&gt; node.
</entry></row>
<row><entry align="right"><parameter>key</parameter>&nbsp;:</entry>
<entry> the key.
</entry></row>
<row><entry align="right"><parameter>keyInfoCtx</parameter>&nbsp;:</entry>
<entry> the pointer to <link linkend="xmlSecKeyInfoCtx">xmlSecKeyInfoCtx</link> structure.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>0 on success or -1 if an error occurs.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyDataNameId">xmlSecKeyDataNameId</title>
<programlisting>#define xmlSecKeyDataNameId	xmlSecKeyDataNameGetKlass()
</programlisting>
<para>
The &lt;dsig:KeyName&gt; processing class.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyDataNameGetKlass">xmlSecKeyDataNameGetKlass ()</title>
<programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecKeyDataNameGetKlass   (void);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyDataValueId">xmlSecKeyDataValueId</title>
<programlisting>#define xmlSecKeyDataValueId	xmlSecKeyDataValueGetKlass()
</programlisting>
<para>
The &lt;dsig:KeyValue&gt; processing class.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyDataValueGetKlass">xmlSecKeyDataValueGetKlass ()</title>
<programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecKeyDataValueGetKlass  (void);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyDataRetrievalMethodId">xmlSecKeyDataRetrievalMethodId</title>
<programlisting>#define xmlSecKeyDataRetrievalMethodId	xmlSecKeyDataRetrievalMethodGetKlass()
</programlisting>
<para>
The &lt;dsig:RetrievalMethod&gt; processing class.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyDataRetrievalMethodGetKlass">xmlSecKeyDataRetrievalMethodGetKlass ()</title>
<programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecKeyDataRetrievalMethodGetKlass
                                            (void);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyDataEncryptedKeyId">xmlSecKeyDataEncryptedKeyId</title>
<programlisting>#define xmlSecKeyDataEncryptedKeyId	xmlSecKeyDataEncryptedKeyGetKlass()
</programlisting>
<para>
The &lt;enc:EncryptedKey&gt; processing class.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyDataEncryptedKeyGetKlass">xmlSecKeyDataEncryptedKeyGetKlass ()</title>
<programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecKeyDataEncryptedKeyGetKlass
                                            (void);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyInfoCtx">struct xmlSecKeyInfoCtx</title>
<programlisting>struct xmlSecKeyInfoCtx {
    xmlSecKeysMngrPtr			keysMngr;
    void				*context;
    
    xmlSecKeyReq			keyReq;

    int					base64LineSize;
    int 				retrievalsLevel;
    int					encKeysLevel;                

    /* x509 certificate */
    int					failIfCertNotFound;
    time_t				certsVerificationTime;
    int					certsVerificationDepth;
};
</programlisting>
<para>
</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyInfoNodeCheckOrigin">xmlSecKeyInfoNodeCheckOrigin()</title>
<programlisting>#define     xmlSecKeyInfoNodeCheckOrigin(status, origin)</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>status</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>origin</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyInfoNodeCheckRetrievalsLevel">xmlSecKeyInfoNodeCheckRetrievalsLevel()</title>
<programlisting>#define     xmlSecKeyInfoNodeCheckRetrievalsLevel(status)</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>status</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecKeyInfoNodeCheckEncKeysLevel">xmlSecKeyInfoNodeCheckEncKeysLevel()</title>
<programlisting>#define     xmlSecKeyInfoNodeCheckEncKeysLevel(status)</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>status</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
