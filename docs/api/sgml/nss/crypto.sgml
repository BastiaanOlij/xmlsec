<refentry id="xmlsec-nss-crypto">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-nss-crypto.top_of_page">crypto</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  XMLSEC-NSS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>crypto</refname>
<refpurpose>Crypto transforms implementation for NSS.</refpurpose>
</refnamediv>

<refsynopsisdiv id="xmlsec-nss-crypto.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="xmlSecCryptoDLFunctions"><returnvalue>xmlSecCryptoDLFunctionsPtr</returnvalue></link>  <link linkend="xmlSecCryptoGetFunctions-nss">xmlSecCryptoGetFunctions_nss</link>
                                                        (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecNssInit">xmlSecNssInit</link>                       (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecNssShutdown">xmlSecNssShutdown</link>                   (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecNssKeysMngrInit">xmlSecNssKeysMngrInit</link>               (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecNssGenerateRandom">xmlSecNssGenerateRandom</link>             (<parameter><link linkend="xmlSecBuffer"><type>xmlSecBufferPtr</type></link> buffer</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> size</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="xmlSecNssErrorsDefaultCallback">xmlSecNssErrorsDefaultCallback</link>      (<parameter>const <link linkend="char"><type>char</type></link> *file</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> line</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *func</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *errorObject</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *errorSubject</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> reason</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *msg</parameter>);
<link linkend="PK11SlotInfo"><returnvalue>PK11SlotInfo</returnvalue></link> *      <link linkend="xmlSecNssGetInternalKeySlot">xmlSecNssGetInternalKeySlot</link>         (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssKeyDataAesId">xmlSecNssKeyDataAesId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecNssKeyDataAesGetKlass">xmlSecNssKeyDataAesGetKlass</link>         (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecNssKeyDataAesSet">xmlSecNssKeyDataAesSet</link>              (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);
#define             <link linkend="xmlSecNssTransformAes128CbcId">xmlSecNssTransformAes128CbcId</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformAes128CbcGetKlass">xmlSecNssTransformAes128CbcGetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformAes192CbcId">xmlSecNssTransformAes192CbcId</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformAes192CbcGetKlass">xmlSecNssTransformAes192CbcGetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformAes256CbcId">xmlSecNssTransformAes256CbcId</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformAes256CbcGetKlass">xmlSecNssTransformAes256CbcGetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformKWAes128Id">xmlSecNssTransformKWAes128Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformKWAes128GetKlass">xmlSecNssTransformKWAes128GetKlass</link>  (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformKWAes192Id">xmlSecNssTransformKWAes192Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformKWAes192GetKlass">xmlSecNssTransformKWAes192GetKlass</link>  (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformKWAes256Id">xmlSecNssTransformKWAes256Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformKWAes256GetKlass">xmlSecNssTransformKWAes256GetKlass</link>  (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssKeyDataDesId">xmlSecNssKeyDataDesId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecNssKeyDataDesGetKlass">xmlSecNssKeyDataDesGetKlass</link>         (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecNssKeyDataDesSet">xmlSecNssKeyDataDesSet</link>              (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);
#define             <link linkend="xmlSecNssTransformDes3CbcId">xmlSecNssTransformDes3CbcId</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformDes3CbcGetKlass">xmlSecNssTransformDes3CbcGetKlass</link>   (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformKWDes3Id">xmlSecNssTransformKWDes3Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformKWDes3GetKlass">xmlSecNssTransformKWDes3GetKlass</link>    (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssKeyDataDsaId">xmlSecNssKeyDataDsaId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecNssKeyDataDsaGetKlass">xmlSecNssKeyDataDsaGetKlass</link>         (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformDsaSha1Id">xmlSecNssTransformDsaSha1Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformDsaSha1GetKlass">xmlSecNssTransformDsaSha1GetKlass</link>   (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecNssHmacGetMinOutputLength">xmlSecNssHmacGetMinOutputLength</link>     (<parameter><type>void</type></parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="xmlSecNssHmacSetMinOutputLength">xmlSecNssHmacSetMinOutputLength</link>     (<parameter><link linkend="int"><type>int</type></link> min_length</parameter>);
#define             <link linkend="xmlSecNssKeyDataHmacId">xmlSecNssKeyDataHmacId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecNssKeyDataHmacGetKlass">xmlSecNssKeyDataHmacGetKlass</link>        (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecNssKeyDataHmacSet">xmlSecNssKeyDataHmacSet</link>             (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);
#define             <link linkend="xmlSecNssTransformHmacMd5Id">xmlSecNssTransformHmacMd5Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformHmacMd5GetKlass">xmlSecNssTransformHmacMd5GetKlass</link>   (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformHmacRipemd160Id">xmlSecNssTransformHmacRipemd160Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformHmacRipemd160GetKlass">xmlSecNssTransformHmacRipemd160GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformHmacSha1Id">xmlSecNssTransformHmacSha1Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformHmacSha1GetKlass">xmlSecNssTransformHmacSha1GetKlass</link>  (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformHmacSha256Id">xmlSecNssTransformHmacSha256Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformHmacSha256GetKlass">xmlSecNssTransformHmacSha256GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformHmacSha384Id">xmlSecNssTransformHmacSha384Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformHmacSha384GetKlass">xmlSecNssTransformHmacSha384GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformHmacSha512Id">xmlSecNssTransformHmacSha512Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformHmacSha512GetKlass">xmlSecNssTransformHmacSha512GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssKeyDataRsaId">xmlSecNssKeyDataRsaId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecNssKeyDataRsaGetKlass">xmlSecNssKeyDataRsaGetKlass</link>         (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformRsaMd5Id">xmlSecNssTransformRsaMd5Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformRsaMd5GetKlass">xmlSecNssTransformRsaMd5GetKlass</link>    (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformRsaSha1Id">xmlSecNssTransformRsaSha1Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformRsaSha1GetKlass">xmlSecNssTransformRsaSha1GetKlass</link>   (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformRsaSha256Id">xmlSecNssTransformRsaSha256Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformRsaSha256GetKlass">xmlSecNssTransformRsaSha256GetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformRsaSha384Id">xmlSecNssTransformRsaSha384Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformRsaSha384GetKlass">xmlSecNssTransformRsaSha384GetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformRsaSha512Id">xmlSecNssTransformRsaSha512Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformRsaSha512GetKlass">xmlSecNssTransformRsaSha512GetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformRsaPkcs1Id">xmlSecNssTransformRsaPkcs1Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformRsaPkcs1GetKlass">xmlSecNssTransformRsaPkcs1GetKlass</link>  (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformRsaOaepId">xmlSecNssTransformRsaOaepId</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformRsaOaepGetKlass">xmlSecNssTransformRsaOaepGetKlass</link>   (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformSha1Id">xmlSecNssTransformSha1Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformSha1GetKlass">xmlSecNssTransformSha1GetKlass</link>      (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformSha256Id">xmlSecNssTransformSha256Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformSha256GetKlass">xmlSecNssTransformSha256GetKlass</link>    (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformSha384Id">xmlSecNssTransformSha384Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformSha384GetKlass">xmlSecNssTransformSha384GetKlass</link>    (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformSha512Id">xmlSecNssTransformSha512Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformSha512GetKlass">xmlSecNssTransformSha512GetKlass</link>    (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecNssTransformMd5Id">xmlSecNssTransformMd5Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecNssTransformMd5GetKlass">xmlSecNssTransformMd5GetKlass</link>       (<parameter><type>void</type></parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="xmlsec-nss-crypto.description" role="desc">
<title role="desc.title">Description</title>
<para>
Crypto transforms implementation for NSS.
</para>
</refsect1>
<refsect1 id="xmlsec-nss-crypto.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="xmlSecCryptoGetFunctions-nss" role="function">
<title>xmlSecCryptoGetFunctions_nss ()</title>
<indexterm zone="xmlSecCryptoGetFunctions-nss"><primary>xmlSecCryptoGetFunctions_nss</primary></indexterm>
<programlisting><link linkend="xmlSecCryptoDLFunctions"><returnvalue>xmlSecCryptoDLFunctionsPtr</returnvalue></link>  xmlSecCryptoGetFunctions_nss
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
Gets the pointer to xmlsec-nss functions table.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the xmlsec-nss functions table or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssInit" role="function">
<title>xmlSecNssInit ()</title>
<indexterm zone="xmlSecNssInit"><primary>xmlSecNssInit</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecNssInit                       (<parameter><type>void</type></parameter>);</programlisting>
<para>
XMLSec library specific crypto engine initialization.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssShutdown" role="function">
<title>xmlSecNssShutdown ()</title>
<indexterm zone="xmlSecNssShutdown"><primary>xmlSecNssShutdown</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecNssShutdown                   (<parameter><type>void</type></parameter>);</programlisting>
<para>
XMLSec library specific crypto engine shutdown.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssKeysMngrInit" role="function">
<title>xmlSecNssKeysMngrInit ()</title>
<indexterm zone="xmlSecNssKeysMngrInit"><primary>xmlSecNssKeysMngrInit</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecNssKeysMngrInit               (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>);</programlisting>
<para>
Adds NSS specific key data stores in keys manager.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssGenerateRandom" role="function">
<title>xmlSecNssGenerateRandom ()</title>
<indexterm zone="xmlSecNssGenerateRandom"><primary>xmlSecNssGenerateRandom</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecNssGenerateRandom             (<parameter><link linkend="xmlSecBuffer"><type>xmlSecBufferPtr</type></link> buffer</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> size</parameter>);</programlisting>
<para>
Generates <parameter>size</parameter> random bytes and puts result in <parameter>buffer</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&#160;:</term>
<listitem><simpara>the destination buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>the numer of bytes to generate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssErrorsDefaultCallback" role="function">
<title>xmlSecNssErrorsDefaultCallback ()</title>
<indexterm zone="xmlSecNssErrorsDefaultCallback"><primary>xmlSecNssErrorsDefaultCallback</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                xmlSecNssErrorsDefaultCallback      (<parameter>const <link linkend="char"><type>char</type></link> *file</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> line</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *func</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *errorObject</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *errorSubject</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> reason</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *msg</parameter>);</programlisting>
<para>
The default errors reporting callback function.
</para><variablelist role="params">
<varlistentry><term><parameter>file</parameter>&#160;:</term>
<listitem><simpara>the error location file name (__FILE__ macro).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>line</parameter>&#160;:</term>
<listitem><simpara>the error location line number (__LINE__ macro).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>func</parameter>&#160;:</term>
<listitem><simpara>the error location function name (__FUNCTION__ macro).
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errorObject</parameter>&#160;:</term>
<listitem><simpara>the error specific error object
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>errorSubject</parameter>&#160;:</term>
<listitem><simpara>the error specific error subject.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>reason</parameter>&#160;:</term>
<listitem><simpara>the error code.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>msg</parameter>&#160;:</term>
<listitem><simpara>the additional error message.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssGetInternalKeySlot" role="function">
<title>xmlSecNssGetInternalKeySlot ()</title>
<indexterm zone="xmlSecNssGetInternalKeySlot"><primary>xmlSecNssGetInternalKeySlot</primary></indexterm>
<programlisting><link linkend="PK11SlotInfo"><returnvalue>PK11SlotInfo</returnvalue></link> *      xmlSecNssGetInternalKeySlot         (<parameter><type>void</type></parameter>);</programlisting>
<para>
Gets internal NSS key slot.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> internal key slot and initializes it if needed.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssKeyDataAesId" role="macro">
<title>xmlSecNssKeyDataAesId</title>
<indexterm zone="xmlSecNssKeyDataAesId"><primary>xmlSecNssKeyDataAesId</primary></indexterm>
<programlisting>#define             xmlSecNssKeyDataAesId</programlisting>
<para>
The AES key data klass.
</para></refsect2>
<refsect2 id="xmlSecNssKeyDataAesGetKlass" role="function">
<title>xmlSecNssKeyDataAesGetKlass ()</title>
<indexterm zone="xmlSecNssKeyDataAesGetKlass"><primary>xmlSecNssKeyDataAesGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecNssKeyDataAesGetKlass         (<parameter><type>void</type></parameter>);</programlisting>
<para>
The AES key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssKeyDataAesSet" role="function">
<title>xmlSecNssKeyDataAesSet ()</title>
<indexterm zone="xmlSecNssKeyDataAesSet"><primary>xmlSecNssKeyDataAesSet</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecNssKeyDataAesSet              (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);</programlisting>
<para>
Sets the value of AES key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to AES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&#160;:</term>
<listitem><simpara>the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformAes128CbcId" role="macro">
<title>xmlSecNssTransformAes128CbcId</title>
<indexterm zone="xmlSecNssTransformAes128CbcId"><primary>xmlSecNssTransformAes128CbcId</primary></indexterm>
<programlisting>#define             xmlSecNssTransformAes128CbcId</programlisting>
<para>
The AES128 CBC cipher transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformAes128CbcGetKlass" role="function">
<title>xmlSecNssTransformAes128CbcGetKlass ()</title>
<indexterm zone="xmlSecNssTransformAes128CbcGetKlass"><primary>xmlSecNssTransformAes128CbcGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformAes128CbcGetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
AES 128 CBC encryption transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to AES 128 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformAes192CbcId" role="macro">
<title>xmlSecNssTransformAes192CbcId</title>
<indexterm zone="xmlSecNssTransformAes192CbcId"><primary>xmlSecNssTransformAes192CbcId</primary></indexterm>
<programlisting>#define             xmlSecNssTransformAes192CbcId</programlisting>
<para>
The AES192 CBC cipher transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformAes192CbcGetKlass" role="function">
<title>xmlSecNssTransformAes192CbcGetKlass ()</title>
<indexterm zone="xmlSecNssTransformAes192CbcGetKlass"><primary>xmlSecNssTransformAes192CbcGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformAes192CbcGetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
AES 192 CBC encryption transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to AES 192 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformAes256CbcId" role="macro">
<title>xmlSecNssTransformAes256CbcId</title>
<indexterm zone="xmlSecNssTransformAes256CbcId"><primary>xmlSecNssTransformAes256CbcId</primary></indexterm>
<programlisting>#define             xmlSecNssTransformAes256CbcId</programlisting>
<para>
The AES256 CBC cipher transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformAes256CbcGetKlass" role="function">
<title>xmlSecNssTransformAes256CbcGetKlass ()</title>
<indexterm zone="xmlSecNssTransformAes256CbcGetKlass"><primary>xmlSecNssTransformAes256CbcGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformAes256CbcGetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
AES 256 CBC encryption transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to AES 256 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformKWAes128Id" role="macro">
<title>xmlSecNssTransformKWAes128Id</title>
<indexterm zone="xmlSecNssTransformKWAes128Id"><primary>xmlSecNssTransformKWAes128Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformKWAes128Id</programlisting>
<para>
The AES 128 key wrap transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformKWAes128GetKlass" role="function">
<title>xmlSecNssTransformKWAes128GetKlass ()</title>
<indexterm zone="xmlSecNssTransformKWAes128GetKlass"><primary>xmlSecNssTransformKWAes128GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformKWAes128GetKlass  (<parameter><type>void</type></parameter>);</programlisting>
<para>
The AES-128 key wrapper transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES-128 key wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformKWAes192Id" role="macro">
<title>xmlSecNssTransformKWAes192Id</title>
<indexterm zone="xmlSecNssTransformKWAes192Id"><primary>xmlSecNssTransformKWAes192Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformKWAes192Id</programlisting>
<para>
The AES 192 key wrap transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformKWAes192GetKlass" role="function">
<title>xmlSecNssTransformKWAes192GetKlass ()</title>
<indexterm zone="xmlSecNssTransformKWAes192GetKlass"><primary>xmlSecNssTransformKWAes192GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformKWAes192GetKlass  (<parameter><type>void</type></parameter>);</programlisting>
<para>
The AES-192 key wrapper transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES-192 key wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformKWAes256Id" role="macro">
<title>xmlSecNssTransformKWAes256Id</title>
<indexterm zone="xmlSecNssTransformKWAes256Id"><primary>xmlSecNssTransformKWAes256Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformKWAes256Id</programlisting>
<para>
The AES 256 key wrap transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformKWAes256GetKlass" role="function">
<title>xmlSecNssTransformKWAes256GetKlass ()</title>
<indexterm zone="xmlSecNssTransformKWAes256GetKlass"><primary>xmlSecNssTransformKWAes256GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformKWAes256GetKlass  (<parameter><type>void</type></parameter>);</programlisting>
<para>
The AES-256 key wrapper transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES-256 key wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssKeyDataDesId" role="macro">
<title>xmlSecNssKeyDataDesId</title>
<indexterm zone="xmlSecNssKeyDataDesId"><primary>xmlSecNssKeyDataDesId</primary></indexterm>
<programlisting>#define             xmlSecNssKeyDataDesId</programlisting>
<para>
The DES key data klass.
</para></refsect2>
<refsect2 id="xmlSecNssKeyDataDesGetKlass" role="function">
<title>xmlSecNssKeyDataDesGetKlass ()</title>
<indexterm zone="xmlSecNssKeyDataDesGetKlass"><primary>xmlSecNssKeyDataDesGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecNssKeyDataDesGetKlass         (<parameter><type>void</type></parameter>);</programlisting>
<para>
The DES key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> DES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssKeyDataDesSet" role="function">
<title>xmlSecNssKeyDataDesSet ()</title>
<indexterm zone="xmlSecNssKeyDataDesSet"><primary>xmlSecNssKeyDataDesSet</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecNssKeyDataDesSet              (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);</programlisting>
<para>
Sets the value of DES key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to DES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&#160;:</term>
<listitem><simpara>the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformDes3CbcId" role="macro">
<title>xmlSecNssTransformDes3CbcId</title>
<indexterm zone="xmlSecNssTransformDes3CbcId"><primary>xmlSecNssTransformDes3CbcId</primary></indexterm>
<programlisting>#define             xmlSecNssTransformDes3CbcId</programlisting>
<para>
The Triple DES CBC cipher transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformDes3CbcGetKlass" role="function">
<title>xmlSecNssTransformDes3CbcGetKlass ()</title>
<indexterm zone="xmlSecNssTransformDes3CbcGetKlass"><primary>xmlSecNssTransformDes3CbcGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformDes3CbcGetKlass   (<parameter><type>void</type></parameter>);</programlisting>
<para>
Triple DES CBC encryption transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to Triple DES encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformKWDes3Id" role="macro">
<title>xmlSecNssTransformKWDes3Id</title>
<indexterm zone="xmlSecNssTransformKWDes3Id"><primary>xmlSecNssTransformKWDes3Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformKWDes3Id</programlisting>
<para>
The DES3 KW transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformKWDes3GetKlass" role="function">
<title>xmlSecNssTransformKWDes3GetKlass ()</title>
<indexterm zone="xmlSecNssTransformKWDes3GetKlass"><primary>xmlSecNssTransformKWDes3GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformKWDes3GetKlass    (<parameter><type>void</type></parameter>);</programlisting>
<para>
The Triple DES key wrapper transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Triple DES key wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssKeyDataDsaId" role="macro">
<title>xmlSecNssKeyDataDsaId</title>
<indexterm zone="xmlSecNssKeyDataDsaId"><primary>xmlSecNssKeyDataDsaId</primary></indexterm>
<programlisting>#define             xmlSecNssKeyDataDsaId</programlisting>
<para>
The DSA key klass.
</para></refsect2>
<refsect2 id="xmlSecNssKeyDataDsaGetKlass" role="function">
<title>xmlSecNssKeyDataDsaGetKlass ()</title>
<indexterm zone="xmlSecNssKeyDataDsaGetKlass"><primary>xmlSecNssKeyDataDsaGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecNssKeyDataDsaGetKlass         (<parameter><type>void</type></parameter>);</programlisting>
<para>
The DSA key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to DSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformDsaSha1Id" role="macro">
<title>xmlSecNssTransformDsaSha1Id</title>
<indexterm zone="xmlSecNssTransformDsaSha1Id"><primary>xmlSecNssTransformDsaSha1Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformDsaSha1Id</programlisting>
<para>
The DSA SHA1 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformDsaSha1GetKlass" role="function">
<title>xmlSecNssTransformDsaSha1GetKlass ()</title>
<indexterm zone="xmlSecNssTransformDsaSha1GetKlass"><primary>xmlSecNssTransformDsaSha1GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformDsaSha1GetKlass   (<parameter><type>void</type></parameter>);</programlisting>
<para>
The DSA-SHA1 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> DSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssHmacGetMinOutputLength" role="function">
<title>xmlSecNssHmacGetMinOutputLength ()</title>
<indexterm zone="xmlSecNssHmacGetMinOutputLength"><primary>xmlSecNssHmacGetMinOutputLength</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecNssHmacGetMinOutputLength     (<parameter><type>void</type></parameter>);</programlisting>
<para>
Gets the value of min HMAC length.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the min HMAC output length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssHmacSetMinOutputLength" role="function">
<title>xmlSecNssHmacSetMinOutputLength ()</title>
<indexterm zone="xmlSecNssHmacSetMinOutputLength"><primary>xmlSecNssHmacSetMinOutputLength</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                xmlSecNssHmacSetMinOutputLength     (<parameter><link linkend="int"><type>int</type></link> min_length</parameter>);</programlisting>
<para>
Sets the min HMAC output length
</para><variablelist role="params">
<varlistentry><term><parameter>min_length</parameter>&#160;:</term>
<listitem><simpara>the new min length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssKeyDataHmacId" role="macro">
<title>xmlSecNssKeyDataHmacId</title>
<indexterm zone="xmlSecNssKeyDataHmacId"><primary>xmlSecNssKeyDataHmacId</primary></indexterm>
<programlisting>#define             xmlSecNssKeyDataHmacId</programlisting>
<para>
The DHMAC key data klass.
</para></refsect2>
<refsect2 id="xmlSecNssKeyDataHmacGetKlass" role="function">
<title>xmlSecNssKeyDataHmacGetKlass ()</title>
<indexterm zone="xmlSecNssKeyDataHmacGetKlass"><primary>xmlSecNssKeyDataHmacGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecNssKeyDataHmacGetKlass        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> HMAC key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssKeyDataHmacSet" role="function">
<title>xmlSecNssKeyDataHmacSet ()</title>
<indexterm zone="xmlSecNssKeyDataHmacSet"><primary>xmlSecNssKeyDataHmacSet</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecNssKeyDataHmacSet             (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);</programlisting>
<para>
Sets the value of HMAC key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to HMAC key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&#160;:</term>
<listitem><simpara>the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformHmacMd5Id" role="macro">
<title>xmlSecNssTransformHmacMd5Id</title>
<indexterm zone="xmlSecNssTransformHmacMd5Id"><primary>xmlSecNssTransformHmacMd5Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformHmacMd5Id</programlisting>
<para>
The HMAC with MD5 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformHmacMd5GetKlass" role="function">
<title>xmlSecNssTransformHmacMd5GetKlass ()</title>
<indexterm zone="xmlSecNssTransformHmacMd5GetKlass"><primary>xmlSecNssTransformHmacMd5GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformHmacMd5GetKlass   (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-MD5 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-MD5 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformHmacRipemd160Id" role="macro">
<title>xmlSecNssTransformHmacRipemd160Id</title>
<indexterm zone="xmlSecNssTransformHmacRipemd160Id"><primary>xmlSecNssTransformHmacRipemd160Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformHmacRipemd160Id</programlisting>
<para>
The HMAC with RipeMD160 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformHmacRipemd160GetKlass" role="function">
<title>xmlSecNssTransformHmacRipemd160GetKlass ()</title>
<indexterm zone="xmlSecNssTransformHmacRipemd160GetKlass"><primary>xmlSecNssTransformHmacRipemd160GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformHmacRipemd160GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-RIPEMD160 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-RIPEMD160 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformHmacSha1Id" role="macro">
<title>xmlSecNssTransformHmacSha1Id</title>
<indexterm zone="xmlSecNssTransformHmacSha1Id"><primary>xmlSecNssTransformHmacSha1Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformHmacSha1Id</programlisting>
<para>
The HMAC with SHA1 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformHmacSha1GetKlass" role="function">
<title>xmlSecNssTransformHmacSha1GetKlass ()</title>
<indexterm zone="xmlSecNssTransformHmacSha1GetKlass"><primary>xmlSecNssTransformHmacSha1GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformHmacSha1GetKlass  (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-SHA1 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA1 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformHmacSha256Id" role="macro">
<title>xmlSecNssTransformHmacSha256Id</title>
<indexterm zone="xmlSecNssTransformHmacSha256Id"><primary>xmlSecNssTransformHmacSha256Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformHmacSha256Id</programlisting>
<para>
The HMAC with SHA256 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformHmacSha256GetKlass" role="function">
<title>xmlSecNssTransformHmacSha256GetKlass ()</title>
<indexterm zone="xmlSecNssTransformHmacSha256GetKlass"><primary>xmlSecNssTransformHmacSha256GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformHmacSha256GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-SHA256 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA256 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformHmacSha384Id" role="macro">
<title>xmlSecNssTransformHmacSha384Id</title>
<indexterm zone="xmlSecNssTransformHmacSha384Id"><primary>xmlSecNssTransformHmacSha384Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformHmacSha384Id</programlisting>
<para>
The HMAC with SHA384 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformHmacSha384GetKlass" role="function">
<title>xmlSecNssTransformHmacSha384GetKlass ()</title>
<indexterm zone="xmlSecNssTransformHmacSha384GetKlass"><primary>xmlSecNssTransformHmacSha384GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformHmacSha384GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-SHA384 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA384 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformHmacSha512Id" role="macro">
<title>xmlSecNssTransformHmacSha512Id</title>
<indexterm zone="xmlSecNssTransformHmacSha512Id"><primary>xmlSecNssTransformHmacSha512Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformHmacSha512Id</programlisting>
<para>
The HMAC with SHA512 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformHmacSha512GetKlass" role="function">
<title>xmlSecNssTransformHmacSha512GetKlass ()</title>
<indexterm zone="xmlSecNssTransformHmacSha512GetKlass"><primary>xmlSecNssTransformHmacSha512GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformHmacSha512GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-SHA512 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA512 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssKeyDataRsaId" role="macro">
<title>xmlSecNssKeyDataRsaId</title>
<indexterm zone="xmlSecNssKeyDataRsaId"><primary>xmlSecNssKeyDataRsaId</primary></indexterm>
<programlisting>#define             xmlSecNssKeyDataRsaId</programlisting>
<para>
The RSA key klass.
</para></refsect2>
<refsect2 id="xmlSecNssKeyDataRsaGetKlass" role="function">
<title>xmlSecNssKeyDataRsaGetKlass ()</title>
<indexterm zone="xmlSecNssKeyDataRsaGetKlass"><primary>xmlSecNssKeyDataRsaGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecNssKeyDataRsaGetKlass         (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to RSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformRsaMd5Id" role="macro">
<title>xmlSecNssTransformRsaMd5Id</title>
<indexterm zone="xmlSecNssTransformRsaMd5Id"><primary>xmlSecNssTransformRsaMd5Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformRsaMd5Id</programlisting>
<para>
The RSA-MD5 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformRsaMd5GetKlass" role="function">
<title>xmlSecNssTransformRsaMd5GetKlass ()</title>
<indexterm zone="xmlSecNssTransformRsaMd5GetKlass"><primary>xmlSecNssTransformRsaMd5GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformRsaMd5GetKlass    (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-MD5 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-MD5 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformRsaSha1Id" role="macro">
<title>xmlSecNssTransformRsaSha1Id</title>
<indexterm zone="xmlSecNssTransformRsaSha1Id"><primary>xmlSecNssTransformRsaSha1Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformRsaSha1Id</programlisting>
<para>
The RSA-SHA1 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformRsaSha1GetKlass" role="function">
<title>xmlSecNssTransformRsaSha1GetKlass ()</title>
<indexterm zone="xmlSecNssTransformRsaSha1GetKlass"><primary>xmlSecNssTransformRsaSha1GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformRsaSha1GetKlass   (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-SHA1 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformRsaSha256Id" role="macro">
<title>xmlSecNssTransformRsaSha256Id</title>
<indexterm zone="xmlSecNssTransformRsaSha256Id"><primary>xmlSecNssTransformRsaSha256Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformRsaSha256Id</programlisting>
<para>
The RSA-SHA256 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformRsaSha256GetKlass" role="function">
<title>xmlSecNssTransformRsaSha256GetKlass ()</title>
<indexterm zone="xmlSecNssTransformRsaSha256GetKlass"><primary>xmlSecNssTransformRsaSha256GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformRsaSha256GetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-SHA256 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA256 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformRsaSha384Id" role="macro">
<title>xmlSecNssTransformRsaSha384Id</title>
<indexterm zone="xmlSecNssTransformRsaSha384Id"><primary>xmlSecNssTransformRsaSha384Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformRsaSha384Id</programlisting>
<para>
The RSA-SHA384 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformRsaSha384GetKlass" role="function">
<title>xmlSecNssTransformRsaSha384GetKlass ()</title>
<indexterm zone="xmlSecNssTransformRsaSha384GetKlass"><primary>xmlSecNssTransformRsaSha384GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformRsaSha384GetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-SHA384 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA384 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformRsaSha512Id" role="macro">
<title>xmlSecNssTransformRsaSha512Id</title>
<indexterm zone="xmlSecNssTransformRsaSha512Id"><primary>xmlSecNssTransformRsaSha512Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformRsaSha512Id</programlisting>
<para>
The RSA-SHA512 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformRsaSha512GetKlass" role="function">
<title>xmlSecNssTransformRsaSha512GetKlass ()</title>
<indexterm zone="xmlSecNssTransformRsaSha512GetKlass"><primary>xmlSecNssTransformRsaSha512GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformRsaSha512GetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-SHA512 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA512 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformRsaPkcs1Id" role="macro">
<title>xmlSecNssTransformRsaPkcs1Id</title>
<indexterm zone="xmlSecNssTransformRsaPkcs1Id"><primary>xmlSecNssTransformRsaPkcs1Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformRsaPkcs1Id</programlisting>
<para>
The RSA PKCS1 key transport transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformRsaPkcs1GetKlass" role="function">
<title>xmlSecNssTransformRsaPkcs1GetKlass ()</title>
<indexterm zone="xmlSecNssTransformRsaPkcs1GetKlass"><primary>xmlSecNssTransformRsaPkcs1GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformRsaPkcs1GetKlass  (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-PKCS1 key transport transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-PKCS1 key transport transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformRsaOaepId" role="macro">
<title>xmlSecNssTransformRsaOaepId</title>
<indexterm zone="xmlSecNssTransformRsaOaepId"><primary>xmlSecNssTransformRsaOaepId</primary></indexterm>
<programlisting>#define             xmlSecNssTransformRsaOaepId</programlisting>
<para>
The RSA OAEP key transport transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformRsaOaepGetKlass" role="function">
<title>xmlSecNssTransformRsaOaepGetKlass ()</title>
<indexterm zone="xmlSecNssTransformRsaOaepGetKlass"><primary>xmlSecNssTransformRsaOaepGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformRsaOaepGetKlass   (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-PKCS1 key transport transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-PKCS1 key transport transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformSha1Id" role="macro">
<title>xmlSecNssTransformSha1Id</title>
<indexterm zone="xmlSecNssTransformSha1Id"><primary>xmlSecNssTransformSha1Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformSha1Id</programlisting>
<para>
The SHA1 digest transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformSha1GetKlass" role="function">
<title>xmlSecNssTransformSha1GetKlass ()</title>
<indexterm zone="xmlSecNssTransformSha1GetKlass"><primary>xmlSecNssTransformSha1GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformSha1GetKlass      (<parameter><type>void</type></parameter>);</programlisting>
<para>
SHA-1 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA-1 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformSha256Id" role="macro">
<title>xmlSecNssTransformSha256Id</title>
<indexterm zone="xmlSecNssTransformSha256Id"><primary>xmlSecNssTransformSha256Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformSha256Id</programlisting>
<para>
The SHA256 digest transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformSha256GetKlass" role="function">
<title>xmlSecNssTransformSha256GetKlass ()</title>
<indexterm zone="xmlSecNssTransformSha256GetKlass"><primary>xmlSecNssTransformSha256GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformSha256GetKlass    (<parameter><type>void</type></parameter>);</programlisting>
<para>
SHA256 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA256 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformSha384Id" role="macro">
<title>xmlSecNssTransformSha384Id</title>
<indexterm zone="xmlSecNssTransformSha384Id"><primary>xmlSecNssTransformSha384Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformSha384Id</programlisting>
<para>
The SHA384 digest transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformSha384GetKlass" role="function">
<title>xmlSecNssTransformSha384GetKlass ()</title>
<indexterm zone="xmlSecNssTransformSha384GetKlass"><primary>xmlSecNssTransformSha384GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformSha384GetKlass    (<parameter><type>void</type></parameter>);</programlisting>
<para>
SHA384 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA384 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformSha512Id" role="macro">
<title>xmlSecNssTransformSha512Id</title>
<indexterm zone="xmlSecNssTransformSha512Id"><primary>xmlSecNssTransformSha512Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformSha512Id</programlisting>
<para>
The SHA512 digest transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformSha512GetKlass" role="function">
<title>xmlSecNssTransformSha512GetKlass ()</title>
<indexterm zone="xmlSecNssTransformSha512GetKlass"><primary>xmlSecNssTransformSha512GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformSha512GetKlass    (<parameter><type>void</type></parameter>);</programlisting>
<para>
SHA512 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA512 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecNssTransformMd5Id" role="macro">
<title>xmlSecNssTransformMd5Id</title>
<indexterm zone="xmlSecNssTransformMd5Id"><primary>xmlSecNssTransformMd5Id</primary></indexterm>
<programlisting>#define             xmlSecNssTransformMd5Id</programlisting>
<para>
The MD5 digest transform klass.
</para></refsect2>
<refsect2 id="xmlSecNssTransformMd5GetKlass" role="function">
<title>xmlSecNssTransformMd5GetKlass ()</title>
<indexterm zone="xmlSecNssTransformMd5GetKlass"><primary>xmlSecNssTransformMd5GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecNssTransformMd5GetKlass       (<parameter><type>void</type></parameter>);</programlisting>
<para>
MD5 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to MD5 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
