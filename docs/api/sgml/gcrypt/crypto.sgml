<refentry id="xmlsec-gcrypt-crypto">
<refmeta>
<refentrytitle role="top_of_page">crypto</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC-GCRYPT Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>crypto</refname>
<refpurpose>Crypto transforms implementation for GCrypt.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



<link linkend="xmlSecCryptoDLFunctions">xmlSecCryptoDLFunctionsPtr</link> <link linkend="xmlSecCryptoGetFunctions-gcrypt">xmlSecCryptoGetFunctions_gcrypt</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptInit">xmlSecGCryptInit</link>                (void);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptShutdown">xmlSecGCryptShutdown</link>            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptKeysMngrInit">xmlSecGCryptKeysMngrInit</link>        (<link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> mngr);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptGenerateRandom">xmlSecGCryptGenerateRandom</link>      (<link linkend="xmlSecBuffer">xmlSecBufferPtr</link> buffer,
                                             <link linkend="xmlSecSize">xmlSecSize</link> size);
#define     <link linkend="xmlSecGCryptKeyDataAesId">xmlSecGCryptKeyDataAesId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGCryptKeyDataAesGetKlass">xmlSecGCryptKeyDataAesGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptKeyDataAesSet">xmlSecGCryptKeyDataAesSet</link>       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);
#define     <link linkend="xmlSecGCryptTransformAes128CbcId">xmlSecGCryptTransformAes128CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformAes128CbcGetKlass">xmlSecGCryptTransformAes128CbcGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformAes192CbcId">xmlSecGCryptTransformAes192CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformAes192CbcGetKlass">xmlSecGCryptTransformAes192CbcGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformAes256CbcId">xmlSecGCryptTransformAes256CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformAes256CbcGetKlass">xmlSecGCryptTransformAes256CbcGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformKWAes128Id">xmlSecGCryptTransformKWAes128Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformKWAes128GetKlass">xmlSecGCryptTransformKWAes128GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformKWAes192Id">xmlSecGCryptTransformKWAes192Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformKWAes192GetKlass">xmlSecGCryptTransformKWAes192GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformKWAes256Id">xmlSecGCryptTransformKWAes256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformKWAes256GetKlass">xmlSecGCryptTransformKWAes256GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptKeyDataDesId">xmlSecGCryptKeyDataDesId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGCryptKeyDataDesGetKlass">xmlSecGCryptKeyDataDesGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptKeyDataDesSet">xmlSecGCryptKeyDataDesSet</link>       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);
#define     <link linkend="xmlSecGCryptTransformDes3CbcId">xmlSecGCryptTransformDes3CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformDes3CbcGetKlass">xmlSecGCryptTransformDes3CbcGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformKWDes3Id">xmlSecGCryptTransformKWDes3Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformKWDes3GetKlass">xmlSecGCryptTransformKWDes3GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptKeyDataDsaId">xmlSecGCryptKeyDataDsaId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGCryptKeyDataDsaGetKlass">xmlSecGCryptKeyDataDsaGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptKeyDataDsaAdoptKey">xmlSecGCryptKeyDataDsaAdoptKey</link>  (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> dsa_key);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptKeyDataDsaAdoptKeyPair">xmlSecGCryptKeyDataDsaAdoptKeyPair</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> pub_key,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> priv_key);
<link linkend="gcry-sexp-t">gcry_sexp_t</link> <link linkend="xmlSecGCryptKeyDataDsaGetPublicKey">xmlSecGCryptKeyDataDsaGetPublicKey</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
<link linkend="gcry-sexp-t">gcry_sexp_t</link> <link linkend="xmlSecGCryptKeyDataDsaGetPrivateKey">xmlSecGCryptKeyDataDsaGetPrivateKey</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
#define     <link linkend="xmlSecGCryptTransformDsaSha1Id">xmlSecGCryptTransformDsaSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformDsaSha1GetKlass">xmlSecGCryptTransformDsaSha1GetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptHmacGetMinOutputLength">xmlSecGCryptHmacGetMinOutputLength</link>
                                            (void);
<link linkend="void">void</link>        <link linkend="xmlSecGCryptHmacSetMinOutputLength">xmlSecGCryptHmacSetMinOutputLength</link>
                                            (<link linkend="int">int</link> min_length);
#define     <link linkend="xmlSecGCryptKeyDataHmacId">xmlSecGCryptKeyDataHmacId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGCryptKeyDataHmacGetKlass">xmlSecGCryptKeyDataHmacGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptKeyDataHmacSet">xmlSecGCryptKeyDataHmacSet</link>      (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);
#define     <link linkend="xmlSecGCryptTransformHmacMd5Id">xmlSecGCryptTransformHmacMd5Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformHmacMd5GetKlass">xmlSecGCryptTransformHmacMd5GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformHmacRipemd160Id">xmlSecGCryptTransformHmacRipemd160Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformHmacRipemd160GetKlass">xmlSecGCryptTransformHmacRipemd160GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformHmacSha1Id">xmlSecGCryptTransformHmacSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformHmacSha1GetKlass">xmlSecGCryptTransformHmacSha1GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformHmacSha256Id">xmlSecGCryptTransformHmacSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformHmacSha256GetKlass">xmlSecGCryptTransformHmacSha256GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformHmacSha384Id">xmlSecGCryptTransformHmacSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformHmacSha384GetKlass">xmlSecGCryptTransformHmacSha384GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformHmacSha512Id">xmlSecGCryptTransformHmacSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformHmacSha512GetKlass">xmlSecGCryptTransformHmacSha512GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptKeyDataRsaId">xmlSecGCryptKeyDataRsaId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGCryptKeyDataRsaGetKlass">xmlSecGCryptKeyDataRsaGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptKeyDataRsaAdoptKey">xmlSecGCryptKeyDataRsaAdoptKey</link>  (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> rsa_key);
<link linkend="int">int</link>         <link linkend="xmlSecGCryptKeyDataRsaAdoptKeyPair">xmlSecGCryptKeyDataRsaAdoptKeyPair</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> pub_key,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> priv_key);
<link linkend="gcry-sexp-t">gcry_sexp_t</link> <link linkend="xmlSecGCryptKeyDataRsaGetPublicKey">xmlSecGCryptKeyDataRsaGetPublicKey</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
<link linkend="gcry-sexp-t">gcry_sexp_t</link> <link linkend="xmlSecGCryptKeyDataRsaGetPrivateKey">xmlSecGCryptKeyDataRsaGetPrivateKey</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);
#define     <link linkend="xmlSecGCryptTransformRsaMd5Id">xmlSecGCryptTransformRsaMd5Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformRsaMd5GetKlass">xmlSecGCryptTransformRsaMd5GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformRsaRipemd160Id">xmlSecGCryptTransformRsaRipemd160Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformRsaRipemd160GetKlass">xmlSecGCryptTransformRsaRipemd160GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformRsaSha1Id">xmlSecGCryptTransformRsaSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformRsaSha1GetKlass">xmlSecGCryptTransformRsaSha1GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformRsaSha256Id">xmlSecGCryptTransformRsaSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformRsaSha256GetKlass">xmlSecGCryptTransformRsaSha256GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformRsaSha384Id">xmlSecGCryptTransformRsaSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformRsaSha384GetKlass">xmlSecGCryptTransformRsaSha384GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformRsaSha512Id">xmlSecGCryptTransformRsaSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformRsaSha512GetKlass">xmlSecGCryptTransformRsaSha512GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformSha1Id">xmlSecGCryptTransformSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformSha1GetKlass">xmlSecGCryptTransformSha1GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformSha256Id">xmlSecGCryptTransformSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformSha256GetKlass">xmlSecGCryptTransformSha256GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformSha384Id">xmlSecGCryptTransformSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformSha384GetKlass">xmlSecGCryptTransformSha384GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformSha512Id">xmlSecGCryptTransformSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformSha512GetKlass">xmlSecGCryptTransformSha512GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformMd5Id">xmlSecGCryptTransformMd5Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformMd5GetKlass">xmlSecGCryptTransformMd5GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGCryptTransformRipemd160Id">xmlSecGCryptTransformRipemd160Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGCryptTransformRipemd160GetKlass">xmlSecGCryptTransformRipemd160GetKlass</link>
                                            (void);
</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
Crypto transforms implementation for GCrypt.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="xmlSecCryptoGetFunctions-gcrypt" role="function">xmlSecCryptoGetFunctions_gcrypt ()</title>
<indexterm><primary>xmlSecCryptoGetFunctions_gcrypt</primary></indexterm><programlisting><link linkend="xmlSecCryptoDLFunctions">xmlSecCryptoDLFunctionsPtr</link> xmlSecCryptoGetFunctions_gcrypt
                                            (void);</programlisting>
<para>
Gets the pointer to xmlsec-gcrypt functions table.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the xmlsec-gcrypt functions table or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptInit" role="function">xmlSecGCryptInit ()</title>
<indexterm><primary>xmlSecGCryptInit</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptInit                (void);</programlisting>
<para>
XMLSec library specific crypto engine initialization.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptShutdown" role="function">xmlSecGCryptShutdown ()</title>
<indexterm><primary>xmlSecGCryptShutdown</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptShutdown            (void);</programlisting>
<para>
XMLSec library specific crypto engine shutdown.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeysMngrInit" role="function">xmlSecGCryptKeysMngrInit ()</title>
<indexterm><primary>xmlSecGCryptKeysMngrInit</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptKeysMngrInit        (<link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> mngr);</programlisting>
<para>
Adds GCrypt specific key data stores in keys manager.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptGenerateRandom" role="function">xmlSecGCryptGenerateRandom ()</title>
<indexterm><primary>xmlSecGCryptGenerateRandom</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptGenerateRandom      (<link linkend="xmlSecBuffer">xmlSecBufferPtr</link> buffer,
                                             <link linkend="xmlSecSize">xmlSecSize</link> size);</programlisting>
<para>
Generates <parameter>size</parameter> random bytes and puts result in <parameter>buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara>             the destination buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara>               the numer of bytes to generate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataAesId" role="macro">xmlSecGCryptKeyDataAesId</title>
<indexterm><primary>xmlSecGCryptKeyDataAesId</primary></indexterm><programlisting>#define     xmlSecGCryptKeyDataAesId</programlisting>
<para>
The AES key data klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataAesGetKlass" role="function">xmlSecGCryptKeyDataAesGetKlass ()</title>
<indexterm><primary>xmlSecGCryptKeyDataAesGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGCryptKeyDataAesGetKlass
                                            (void);</programlisting>
<para>
The AES key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> AES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataAesSet" role="function">xmlSecGCryptKeyDataAesSet ()</title>
<indexterm><primary>xmlSecGCryptKeyDataAesSet</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptKeyDataAesSet       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);</programlisting>
<para>
Sets the value of AES key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to AES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>                the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&nbsp;:</term>
<listitem><simpara>            the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformAes128CbcId" role="macro">xmlSecGCryptTransformAes128CbcId</title>
<indexterm><primary>xmlSecGCryptTransformAes128CbcId</primary></indexterm><programlisting>#define     xmlSecGCryptTransformAes128CbcId</programlisting>
<para>
The AES128 CBC cipher transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformAes128CbcGetKlass" role="function">xmlSecGCryptTransformAes128CbcGetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformAes128CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformAes128CbcGetKlass
                                            (void);</programlisting>
<para>
AES 128 CBC encryption transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to AES 128 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformAes192CbcId" role="macro">xmlSecGCryptTransformAes192CbcId</title>
<indexterm><primary>xmlSecGCryptTransformAes192CbcId</primary></indexterm><programlisting>#define     xmlSecGCryptTransformAes192CbcId</programlisting>
<para>
The AES192 CBC cipher transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformAes192CbcGetKlass" role="function">xmlSecGCryptTransformAes192CbcGetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformAes192CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformAes192CbcGetKlass
                                            (void);</programlisting>
<para>
AES 192 CBC encryption transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to AES 192 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformAes256CbcId" role="macro">xmlSecGCryptTransformAes256CbcId</title>
<indexterm><primary>xmlSecGCryptTransformAes256CbcId</primary></indexterm><programlisting>#define     xmlSecGCryptTransformAes256CbcId</programlisting>
<para>
The AES256 CBC cipher transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformAes256CbcGetKlass" role="function">xmlSecGCryptTransformAes256CbcGetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformAes256CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformAes256CbcGetKlass
                                            (void);</programlisting>
<para>
AES 256 CBC encryption transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to AES 256 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformKWAes128Id" role="macro">xmlSecGCryptTransformKWAes128Id</title>
<indexterm><primary>xmlSecGCryptTransformKWAes128Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformKWAes128Id</programlisting>
<para>
The AES 128 key wrap transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformKWAes128GetKlass" role="function">xmlSecGCryptTransformKWAes128GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformKWAes128GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformKWAes128GetKlass
                                            (void);</programlisting>
<para>
The AES-128 kew wrapper transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> AES-128 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformKWAes192Id" role="macro">xmlSecGCryptTransformKWAes192Id</title>
<indexterm><primary>xmlSecGCryptTransformKWAes192Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformKWAes192Id</programlisting>
<para>
The AES 192 key wrap transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformKWAes192GetKlass" role="function">xmlSecGCryptTransformKWAes192GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformKWAes192GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformKWAes192GetKlass
                                            (void);</programlisting>
<para>
The AES-192 kew wrapper transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> AES-192 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformKWAes256Id" role="macro">xmlSecGCryptTransformKWAes256Id</title>
<indexterm><primary>xmlSecGCryptTransformKWAes256Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformKWAes256Id</programlisting>
<para>
The AES 256 key wrap transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformKWAes256GetKlass" role="function">xmlSecGCryptTransformKWAes256GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformKWAes256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformKWAes256GetKlass
                                            (void);</programlisting>
<para>
The AES-256 kew wrapper transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> AES-256 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataDesId" role="macro">xmlSecGCryptKeyDataDesId</title>
<indexterm><primary>xmlSecGCryptKeyDataDesId</primary></indexterm><programlisting>#define     xmlSecGCryptKeyDataDesId</programlisting>
<para>
The DES key data klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataDesGetKlass" role="function">xmlSecGCryptKeyDataDesGetKlass ()</title>
<indexterm><primary>xmlSecGCryptKeyDataDesGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGCryptKeyDataDesGetKlass
                                            (void);</programlisting>
<para>
The DES key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> DES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataDesSet" role="function">xmlSecGCryptKeyDataDesSet ()</title>
<indexterm><primary>xmlSecGCryptKeyDataDesSet</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptKeyDataDesSet       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);</programlisting>
<para>
Sets the value of DES key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to DES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>                the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&nbsp;:</term>
<listitem><simpara>            the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformDes3CbcId" role="macro">xmlSecGCryptTransformDes3CbcId</title>
<indexterm><primary>xmlSecGCryptTransformDes3CbcId</primary></indexterm><programlisting>#define     xmlSecGCryptTransformDes3CbcId</programlisting>
<para>
The DES3 CBC cipher transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformDes3CbcGetKlass" role="function">xmlSecGCryptTransformDes3CbcGetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformDes3CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformDes3CbcGetKlass
                                            (void);</programlisting>
<para>
Triple DES CBC encryption transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to Triple DES encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformKWDes3Id" role="macro">xmlSecGCryptTransformKWDes3Id</title>
<indexterm><primary>xmlSecGCryptTransformKWDes3Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformKWDes3Id</programlisting>
<para>
The DES3 KW transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformKWDes3GetKlass" role="function">xmlSecGCryptTransformKWDes3GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformKWDes3GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformKWDes3GetKlass
                                            (void);</programlisting>
<para>
The Triple DES key wrapper transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Triple DES key wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataDsaId" role="macro">xmlSecGCryptKeyDataDsaId</title>
<indexterm><primary>xmlSecGCryptKeyDataDsaId</primary></indexterm><programlisting>#define     xmlSecGCryptKeyDataDsaId</programlisting>
<para>
The DSA key klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataDsaGetKlass" role="function">xmlSecGCryptKeyDataDsaGetKlass ()</title>
<indexterm><primary>xmlSecGCryptKeyDataDsaGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGCryptKeyDataDsaGetKlass
                                            (void);</programlisting>
<para>
The DSA key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to DSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataDsaAdoptKey" role="function">xmlSecGCryptKeyDataDsaAdoptKey ()</title>
<indexterm><primary>xmlSecGCryptKeyDataDsaAdoptKey</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptKeyDataDsaAdoptKey  (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> dsa_key);</programlisting>
<para>
Sets the value of DSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dsa_key</parameter>&nbsp;:</term>
<listitem><simpara>            the pointer to GCrypt DSA key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataDsaAdoptKeyPair" role="function">xmlSecGCryptKeyDataDsaAdoptKeyPair ()</title>
<indexterm><primary>xmlSecGCryptKeyDataDsaAdoptKeyPair</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptKeyDataDsaAdoptKeyPair
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> pub_key,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> priv_key);</programlisting>
<para>
Sets the value of DSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pub_key</parameter>&nbsp;:</term>
<listitem><simpara>            the pointer to GCrypt DSA pub key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv_key</parameter>&nbsp;:</term>
<listitem><simpara>           the pointer to GCrypt DSA priv key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataDsaGetPublicKey" role="function">xmlSecGCryptKeyDataDsaGetPublicKey ()</title>
<indexterm><primary>xmlSecGCryptKeyDataDsaGetPublicKey</primary></indexterm><programlisting><link linkend="gcry-sexp-t">gcry_sexp_t</link> xmlSecGCryptKeyDataDsaGetPublicKey
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the GCrypt DSA public key from DSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to GCrypt public DSA key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataDsaGetPrivateKey" role="function">xmlSecGCryptKeyDataDsaGetPrivateKey ()</title>
<indexterm><primary>xmlSecGCryptKeyDataDsaGetPrivateKey</primary></indexterm><programlisting><link linkend="gcry-sexp-t">gcry_sexp_t</link> xmlSecGCryptKeyDataDsaGetPrivateKey
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the GCrypt DSA private key from DSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to GCrypt private DSA key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformDsaSha1Id" role="macro">xmlSecGCryptTransformDsaSha1Id</title>
<indexterm><primary>xmlSecGCryptTransformDsaSha1Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformDsaSha1Id</programlisting>
<para>
The DSA SHA1 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformDsaSha1GetKlass" role="function">xmlSecGCryptTransformDsaSha1GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformDsaSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformDsaSha1GetKlass
                                            (void);</programlisting>
<para>
The DSA-SHA1 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> DSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptHmacGetMinOutputLength" role="function">xmlSecGCryptHmacGetMinOutputLength ()</title>
<indexterm><primary>xmlSecGCryptHmacGetMinOutputLength</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptHmacGetMinOutputLength
                                            (void);</programlisting>
<para>
Gets the value of min HMAC length.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the min HMAC output length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptHmacSetMinOutputLength" role="function">xmlSecGCryptHmacSetMinOutputLength ()</title>
<indexterm><primary>xmlSecGCryptHmacSetMinOutputLength</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecGCryptHmacSetMinOutputLength
                                            (<link linkend="int">int</link> min_length);</programlisting>
<para>
Sets the min HMAC output length</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>min_length</parameter>&nbsp;:</term>
<listitem><simpara> the new min length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataHmacId" role="macro">xmlSecGCryptKeyDataHmacId</title>
<indexterm><primary>xmlSecGCryptKeyDataHmacId</primary></indexterm><programlisting>#define     xmlSecGCryptKeyDataHmacId</programlisting>
<para>
The HMAC key klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataHmacGetKlass" role="function">xmlSecGCryptKeyDataHmacGetKlass ()</title>
<indexterm><primary>xmlSecGCryptKeyDataHmacGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGCryptKeyDataHmacGetKlass
                                            (void);</programlisting>
<para>
The HMAC key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> HMAC key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataHmacSet" role="function">xmlSecGCryptKeyDataHmacSet ()</title>
<indexterm><primary>xmlSecGCryptKeyDataHmacSet</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptKeyDataHmacSet      (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);</programlisting>
<para>
Sets the value of HMAC key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to HMAC key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>                the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&nbsp;:</term>
<listitem><simpara>            the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacMd5Id" role="macro">xmlSecGCryptTransformHmacMd5Id</title>
<indexterm><primary>xmlSecGCryptTransformHmacMd5Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformHmacMd5Id</programlisting>
<para>
The HMAC with MD5 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacMd5GetKlass" role="function">xmlSecGCryptTransformHmacMd5GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformHmacMd5GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformHmacMd5GetKlass
                                            (void);</programlisting>
<para>
The HMAC-MD5 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-MD5 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacRipemd160Id" role="macro">xmlSecGCryptTransformHmacRipemd160Id</title>
<indexterm><primary>xmlSecGCryptTransformHmacRipemd160Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformHmacRipemd160Id</programlisting>
<para>
The HMAC with RipeMD160 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacRipemd160GetKlass" role="function">xmlSecGCryptTransformHmacRipemd160GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformHmacRipemd160GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformHmacRipemd160GetKlass
                                            (void);</programlisting>
<para>
The HMAC-RIPEMD160 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-RIPEMD160 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacSha1Id" role="macro">xmlSecGCryptTransformHmacSha1Id</title>
<indexterm><primary>xmlSecGCryptTransformHmacSha1Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformHmacSha1Id</programlisting>
<para>
The HMAC with SHA1 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacSha1GetKlass" role="function">xmlSecGCryptTransformHmacSha1GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformHmacSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformHmacSha1GetKlass
                                            (void);</programlisting>
<para>
The HMAC-SHA1 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-SHA1 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacSha256Id" role="macro">xmlSecGCryptTransformHmacSha256Id</title>
<indexterm><primary>xmlSecGCryptTransformHmacSha256Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformHmacSha256Id</programlisting>
<para>
The HMAC with SHA256 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacSha256GetKlass" role="function">xmlSecGCryptTransformHmacSha256GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformHmacSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformHmacSha256GetKlass
                                            (void);</programlisting>
<para>
The HMAC-SHA256 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-SHA256 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacSha384Id" role="macro">xmlSecGCryptTransformHmacSha384Id</title>
<indexterm><primary>xmlSecGCryptTransformHmacSha384Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformHmacSha384Id</programlisting>
<para>
The HMAC with SHA384 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacSha384GetKlass" role="function">xmlSecGCryptTransformHmacSha384GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformHmacSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformHmacSha384GetKlass
                                            (void);</programlisting>
<para>
The HMAC-SHA384 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-SHA384 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacSha512Id" role="macro">xmlSecGCryptTransformHmacSha512Id</title>
<indexterm><primary>xmlSecGCryptTransformHmacSha512Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformHmacSha512Id</programlisting>
<para>
The HMAC with SHA512 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformHmacSha512GetKlass" role="function">xmlSecGCryptTransformHmacSha512GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformHmacSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformHmacSha512GetKlass
                                            (void);</programlisting>
<para>
The HMAC-SHA512 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-SHA512 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataRsaId" role="macro">xmlSecGCryptKeyDataRsaId</title>
<indexterm><primary>xmlSecGCryptKeyDataRsaId</primary></indexterm><programlisting>#define     xmlSecGCryptKeyDataRsaId</programlisting>
<para>
The RSA key klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataRsaGetKlass" role="function">xmlSecGCryptKeyDataRsaGetKlass ()</title>
<indexterm><primary>xmlSecGCryptKeyDataRsaGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGCryptKeyDataRsaGetKlass
                                            (void);</programlisting>
<para>
The GCrypt RSA key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to GCrypt RSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataRsaAdoptKey" role="function">xmlSecGCryptKeyDataRsaAdoptKey ()</title>
<indexterm><primary>xmlSecGCryptKeyDataRsaAdoptKey</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptKeyDataRsaAdoptKey  (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> rsa_key);</programlisting>
<para>
Sets the value of RSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rsa_key</parameter>&nbsp;:</term>
<listitem><simpara>            the pointer to GCrypt RSA key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataRsaAdoptKeyPair" role="function">xmlSecGCryptKeyDataRsaAdoptKeyPair ()</title>
<indexterm><primary>xmlSecGCryptKeyDataRsaAdoptKeyPair</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGCryptKeyDataRsaAdoptKeyPair
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> pub_key,
                                             <link linkend="gcry-sexp-t">gcry_sexp_t</link> priv_key);</programlisting>
<para>
Sets the value of RSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pub_key</parameter>&nbsp;:</term>
<listitem><simpara>            the pointer to GCrypt RSA pub key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>priv_key</parameter>&nbsp;:</term>
<listitem><simpara>           the pointer to GCrypt RSA priv key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataRsaGetPublicKey" role="function">xmlSecGCryptKeyDataRsaGetPublicKey ()</title>
<indexterm><primary>xmlSecGCryptKeyDataRsaGetPublicKey</primary></indexterm><programlisting><link linkend="gcry-sexp-t">gcry_sexp_t</link> xmlSecGCryptKeyDataRsaGetPublicKey
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the GCrypt RSA public key from RSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to GCrypt public RSA key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptKeyDataRsaGetPrivateKey" role="function">xmlSecGCryptKeyDataRsaGetPrivateKey ()</title>
<indexterm><primary>xmlSecGCryptKeyDataRsaGetPrivateKey</primary></indexterm><programlisting><link linkend="gcry-sexp-t">gcry_sexp_t</link> xmlSecGCryptKeyDataRsaGetPrivateKey
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data);</programlisting>
<para>
Gets the GCrypt RSA private key from RSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to GCrypt private RSA key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaMd5Id" role="macro">xmlSecGCryptTransformRsaMd5Id</title>
<indexterm><primary>xmlSecGCryptTransformRsaMd5Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformRsaMd5Id</programlisting>
<para>
The RSA-MD5 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaMd5GetKlass" role="function">xmlSecGCryptTransformRsaMd5GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformRsaMd5GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformRsaMd5GetKlass
                                            (void);</programlisting>
<para>
The RSA-MD5 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-MD5 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaRipemd160Id" role="macro">xmlSecGCryptTransformRsaRipemd160Id</title>
<indexterm><primary>xmlSecGCryptTransformRsaRipemd160Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformRsaRipemd160Id</programlisting>
<para>
The RSA-RIPEMD160 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaRipemd160GetKlass" role="function">xmlSecGCryptTransformRsaRipemd160GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformRsaRipemd160GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformRsaRipemd160GetKlass
                                            (void);</programlisting>
<para>
The RSA-RIPEMD160 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-RIPEMD160 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaSha1Id" role="macro">xmlSecGCryptTransformRsaSha1Id</title>
<indexterm><primary>xmlSecGCryptTransformRsaSha1Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformRsaSha1Id</programlisting>
<para>
The RSA-SHA1 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaSha1GetKlass" role="function">xmlSecGCryptTransformRsaSha1GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformRsaSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformRsaSha1GetKlass
                                            (void);</programlisting>
<para>
The RSA-SHA1 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaSha256Id" role="macro">xmlSecGCryptTransformRsaSha256Id</title>
<indexterm><primary>xmlSecGCryptTransformRsaSha256Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformRsaSha256Id</programlisting>
<para>
The RSA-SHA256 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaSha256GetKlass" role="function">xmlSecGCryptTransformRsaSha256GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformRsaSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformRsaSha256GetKlass
                                            (void);</programlisting>
<para>
The RSA-SHA256 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-SHA256 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaSha384Id" role="macro">xmlSecGCryptTransformRsaSha384Id</title>
<indexterm><primary>xmlSecGCryptTransformRsaSha384Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformRsaSha384Id</programlisting>
<para>
The RSA-SHA384 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaSha384GetKlass" role="function">xmlSecGCryptTransformRsaSha384GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformRsaSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformRsaSha384GetKlass
                                            (void);</programlisting>
<para>
The RSA-SHA384 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-SHA384 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaSha512Id" role="macro">xmlSecGCryptTransformRsaSha512Id</title>
<indexterm><primary>xmlSecGCryptTransformRsaSha512Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformRsaSha512Id</programlisting>
<para>
The RSA-SHA512 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRsaSha512GetKlass" role="function">xmlSecGCryptTransformRsaSha512GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformRsaSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformRsaSha512GetKlass
                                            (void);</programlisting>
<para>
The RSA-SHA512 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-SHA512 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformSha1Id" role="macro">xmlSecGCryptTransformSha1Id</title>
<indexterm><primary>xmlSecGCryptTransformSha1Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformSha1Id</programlisting>
<para>
The HMAC with SHA1 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformSha1GetKlass" role="function">xmlSecGCryptTransformSha1GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformSha1GetKlass
                                            (void);</programlisting>
<para>
SHA-1 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to SHA-1 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformSha256Id" role="macro">xmlSecGCryptTransformSha256Id</title>
<indexterm><primary>xmlSecGCryptTransformSha256Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformSha256Id</programlisting>
<para>
The HMAC with SHA256 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformSha256GetKlass" role="function">xmlSecGCryptTransformSha256GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformSha256GetKlass
                                            (void);</programlisting>
<para>
SHA256 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to SHA256 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformSha384Id" role="macro">xmlSecGCryptTransformSha384Id</title>
<indexterm><primary>xmlSecGCryptTransformSha384Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformSha384Id</programlisting>
<para>
The HMAC with SHA384 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformSha384GetKlass" role="function">xmlSecGCryptTransformSha384GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformSha384GetKlass
                                            (void);</programlisting>
<para>
SHA384 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to SHA384 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformSha512Id" role="macro">xmlSecGCryptTransformSha512Id</title>
<indexterm><primary>xmlSecGCryptTransformSha512Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformSha512Id</programlisting>
<para>
The HMAC with SHA512 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformSha512GetKlass" role="function">xmlSecGCryptTransformSha512GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformSha512GetKlass
                                            (void);</programlisting>
<para>
SHA512 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to SHA512 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformMd5Id" role="macro">xmlSecGCryptTransformMd5Id</title>
<indexterm><primary>xmlSecGCryptTransformMd5Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformMd5Id</programlisting>
<para>
The MD5 digest transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformMd5GetKlass" role="function">xmlSecGCryptTransformMd5GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformMd5GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformMd5GetKlass
                                            (void);</programlisting>
<para>
MD5 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to MD5 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRipemd160Id" role="macro">xmlSecGCryptTransformRipemd160Id</title>
<indexterm><primary>xmlSecGCryptTransformRipemd160Id</primary></indexterm><programlisting>#define     xmlSecGCryptTransformRipemd160Id</programlisting>
<para>
The RIPEMD160 digest transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGCryptTransformRipemd160GetKlass" role="function">xmlSecGCryptTransformRipemd160GetKlass ()</title>
<indexterm><primary>xmlSecGCryptTransformRipemd160GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGCryptTransformRipemd160GetKlass
                                            (void);</programlisting>
<para>
RIPEMD160 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to RIPEMD160 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
