<refentry id="xmlsec-io">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-io.top_of_page">io</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>io</refname>
<refpurpose>Input/output support.</refpurpose>
</refnamediv>

<refsect1 id="xmlsec-io.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecIOInit">xmlSecIOInit</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecIOShutdown">xmlSecIOShutdown</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecIOCleanupCallbacks">xmlSecIOCleanupCallbacks</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecIORegisterDefaultCallbacks">xmlSecIORegisterDefaultCallbacks</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecIORegisterCallbacks">xmlSecIORegisterCallbacks</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTransformInputURIGetKlass">xmlSecTransformInputURIGetKlass</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTransformInputURIOpen">xmlSecTransformInputURIOpen</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecTransformInputURIClose">xmlSecTransformInputURIClose</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="xmlsec-io.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="xmlSecTransformInputURIId">xmlSecTransformInputURIId</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="xmlsec-io.description" role="desc">
<title role="desc.title">Description</title>
<para>
Input/output support.
</para>

</refsect1>
<refsect1 id="xmlsec-io.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="xmlSecIOInit" role="function">
<title>xmlSecIOInit&#160;()</title>
<indexterm zone="xmlSecIOInit"><primary>xmlSecIOInit</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecIOInit (<parameter><type>void</type></parameter>);</programlisting>
<para>The IO initialization (called from <link linkend="xmlSecInit"><type>xmlSecInit</type></link> function).
Applications should not call this function directly.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecIOShutdown" role="function">
<title>xmlSecIOShutdown&#160;()</title>
<indexterm zone="xmlSecIOShutdown"><primary>xmlSecIOShutdown</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecIOShutdown (<parameter><type>void</type></parameter>);</programlisting>
<para>The IO clenaup (called from <link linkend="xmlSecShutdown"><type>xmlSecShutdown</type></link> function).
Applications should not call this function directly.</para>
</refsect2>
<refsect2 id="xmlSecIOCleanupCallbacks" role="function">
<title>xmlSecIOCleanupCallbacks&#160;()</title>
<indexterm zone="xmlSecIOCleanupCallbacks"><primary>xmlSecIOCleanupCallbacks</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecIOCleanupCallbacks (<parameter><type>void</type></parameter>);</programlisting>
<para>Clears the entire input callback table. this includes the
compiled-in I/O.</para>
</refsect2>
<refsect2 id="xmlSecIORegisterDefaultCallbacks" role="function">
<title>xmlSecIORegisterDefaultCallbacks&#160;()</title>
<indexterm zone="xmlSecIORegisterDefaultCallbacks"><primary>xmlSecIORegisterDefaultCallbacks</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecIORegisterDefaultCallbacks (<parameter><type>void</type></parameter>);</programlisting>
<para>Registers the default compiled-in I/O handlers.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecIORegisterCallbacks" role="function">
<title>xmlSecIORegisterCallbacks&#160;()</title>
<indexterm zone="xmlSecIORegisterCallbacks"><primary>xmlSecIORegisterCallbacks</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecIORegisterCallbacks (<parameter><link linkend="xmlInputMatchCallback"><type>xmlInputMatchCallback</type></link> matchFunc</parameter>,
                           <parameter><link linkend="xmlInputOpenCallback"><type>xmlInputOpenCallback</type></link> openFunc</parameter>,
                           <parameter><link linkend="xmlInputReadCallback"><type>xmlInputReadCallback</type></link> readFunc</parameter>,
                           <parameter><link linkend="xmlInputCloseCallback"><type>xmlInputCloseCallback</type></link> closeFunc</parameter>);</programlisting>
<para>Register a new set of I/O callback for handling parser input.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>matchFunc</para></entry>
<entry role="parameter_description"><para>the protocol match callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>openFunc</para></entry>
<entry role="parameter_description"><para>the open stream callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>readFunc</para></entry>
<entry role="parameter_description"><para>the read from stream callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>closeFunc</para></entry>
<entry role="parameter_description"><para>the close stream callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTransformInputURIGetKlass" role="function">
<title>xmlSecTransformInputURIGetKlass&#160;()</title>
<indexterm zone="xmlSecTransformInputURIGetKlass"><primary>xmlSecTransformInputURIGetKlass</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>
xmlSecTransformInputURIGetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>The input uri transform klass. Reads binary data from an uri.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> input URI transform id.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTransformInputURIOpen" role="function">
<title>xmlSecTransformInputURIOpen&#160;()</title>
<indexterm zone="xmlSecTransformInputURIOpen"><primary>xmlSecTransformInputURIOpen</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecTransformInputURIOpen (<parameter><link linkend="xmlSecTransform"><type>xmlSecTransformPtr</type></link> transform</parameter>,
                             <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *uri</parameter>);</programlisting>
<para>Opens the given <parameter>uri</parameter>
 for reading.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>transform</para></entry>
<entry role="parameter_description"><para>the pointer to IO transform.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the URL to open.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecTransformInputURIClose" role="function">
<title>xmlSecTransformInputURIClose&#160;()</title>
<indexterm zone="xmlSecTransformInputURIClose"><primary>xmlSecTransformInputURIClose</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecTransformInputURIClose (<parameter><link linkend="xmlSecTransform"><type>xmlSecTransformPtr</type></link> transform</parameter>);</programlisting>
<para>Closes the given <parameter>transform</parameter>
 and frees up resourses.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>transform</para></entry>
<entry role="parameter_description"><para>the pointer to IO transform.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="xmlsec-io.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="xmlSecTransformInputURIId" role="macro">
<title>xmlSecTransformInputURIId</title>
<indexterm zone="xmlSecTransformInputURIId"><primary>xmlSecTransformInputURIId</primary></indexterm>
<programlisting language="C">#define             xmlSecTransformInputURIId</programlisting>
<para>The Input URI transform id.</para>
</refsect2>

</refsect1>

</refentry>
