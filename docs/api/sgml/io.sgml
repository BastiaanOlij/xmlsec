<refentry id="xmlsec-io">
<refmeta>
<refentrytitle>io</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>io</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="xmlSecIOInit">xmlSecIOInit</link>                    (void);
void        <link linkend="xmlSecIOShutdown">xmlSecIOShutdown</link>                (void);
void        <link linkend="xmlSecIOCleanupCallbacks">xmlSecIOCleanupCallbacks</link>        (void);
void        <link linkend="xmlSecIORegisterDefaultCallbacks">xmlSecIORegisterDefaultCallbacks</link>
                                            (void);
int         <link linkend="xmlSecIORegisterCallbacks">xmlSecIORegisterCallbacks</link>       (<link linkend="xmlInputMatchCallback">xmlInputMatchCallback</link> matchFunc,
                                             <link linkend="xmlInputOpenCallback">xmlInputOpenCallback</link> openFunc,
                                             <link linkend="xmlInputReadCallback">xmlInputReadCallback</link> readFunc,
                                             <link linkend="xmlInputCloseCallback">xmlInputCloseCallback</link> closeFunc);
#define     <link linkend="xmlSecTransformInputURIId">xmlSecTransformInputURIId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecTransformInputURIGetKlass">xmlSecTransformInputURIGetKlass</link>
                                            (void);
int         <link linkend="xmlSecTransformInputURIOpen">xmlSecTransformInputURIOpen</link>     (<link linkend="xmlSecTransformPtr">xmlSecTransformPtr</link> transform,
                                             const <link linkend="xmlChar">xmlChar</link> *uri);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="xmlSecIOInit">xmlSecIOInit ()</title>
<programlisting>void        xmlSecIOInit                    (void);</programlisting>
<para>
The IO initialization (called from <link linkend="xmlSecInit">xmlSecInit</link>() function).
Applications should not call this function directly.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecIOShutdown">xmlSecIOShutdown ()</title>
<programlisting>void        xmlSecIOShutdown                (void);</programlisting>
<para>
The IO clenaup (called from <link linkend="xmlSecShutdown">xmlSecShutdown</link>() function).
Applications should not call this function directly.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecIOCleanupCallbacks">xmlSecIOCleanupCallbacks ()</title>
<programlisting>void        xmlSecIOCleanupCallbacks        (void);</programlisting>
<para>
Clears the entire input callback table. this includes the
compiled-in I/O.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecIORegisterDefaultCallbacks">xmlSecIORegisterDefaultCallbacks ()</title>
<programlisting>void        xmlSecIORegisterDefaultCallbacks
                                            (void);</programlisting>
<para>
Registers the default compiled-in I/O handlers.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecIORegisterCallbacks">xmlSecIORegisterCallbacks ()</title>
<programlisting>int         xmlSecIORegisterCallbacks       (<link linkend="xmlInputMatchCallback">xmlInputMatchCallback</link> matchFunc,
                                             <link linkend="xmlInputOpenCallback">xmlInputOpenCallback</link> openFunc,
                                             <link linkend="xmlInputReadCallback">xmlInputReadCallback</link> readFunc,
                                             <link linkend="xmlInputCloseCallback">xmlInputCloseCallback</link> closeFunc);</programlisting>
<para>
Register a new set of I/O callback for handling parser input.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>matchFunc</parameter>&nbsp;:</entry>
<entry>  the xmlInputMatchCallback.
</entry></row>
<row><entry align="right"><parameter>openFunc</parameter>&nbsp;:</entry>
<entry>  the xmlInputOpenCallback.
</entry></row>
<row><entry align="right"><parameter>readFunc</parameter>&nbsp;:</entry>
<entry>  the xmlInputReadCallback.
</entry></row>
<row><entry align="right"><parameter>closeFunc</parameter>&nbsp;:</entry>
<entry>  the xmlInputCloseCallback.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>the registered handler number or a negative value if 
an error occurs.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecTransformInputURIId">xmlSecTransformInputURIId</title>
<programlisting>#define     xmlSecTransformInputURIId</programlisting>
<para>
The Input URI transform id.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecTransformInputURIGetKlass">xmlSecTransformInputURIGetKlass ()</title>
<programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecTransformInputURIGetKlass
                                            (void);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="xmlSecTransformInputURIOpen">xmlSecTransformInputURIOpen ()</title>
<programlisting>int         xmlSecTransformInputURIOpen     (<link linkend="xmlSecTransformPtr">xmlSecTransformPtr</link> transform,
                                             const <link linkend="xmlChar">xmlChar</link> *uri);</programlisting>
<para>
Opens the given <parameter>uri</parameter> for reading.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>transform</parameter>&nbsp;:</entry>
<entry> the pointer to IO transform.
</entry></row>
<row><entry align="right"><parameter>uri</parameter>&nbsp;:</entry>
<entry> the URL to open.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>0 on success or a negative value otherwise.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
