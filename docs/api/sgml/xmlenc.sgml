<refentry id="xmlsec-xmlenc">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-xmlenc.top_of_page">xmlenc</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>xmlenc</refname>
<refpurpose>XML Encryption support.</refpurpose>
</refnamediv>

<refsect1 id="xmlsec-xmlenc.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="xmlSecEncCtx"><returnvalue>xmlSecEncCtxPtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxCreate">xmlSecEncCtxCreate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxDestroy">xmlSecEncCtxDestroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxInitialize">xmlSecEncCtxInitialize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxFinalize">xmlSecEncCtxFinalize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxCopyUserPref">xmlSecEncCtxCopyUserPref</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxReset">xmlSecEncCtxReset</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxBinaryEncrypt">xmlSecEncCtxBinaryEncrypt</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxXmlEncrypt">xmlSecEncCtxXmlEncrypt</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxUriEncrypt">xmlSecEncCtxUriEncrypt</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxDecrypt">xmlSecEncCtxDecrypt</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlSecBuffer"><returnvalue>xmlSecBufferPtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxDecryptToBuffer">xmlSecEncCtxDecryptToBuffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxDebugDump">xmlSecEncCtxDebugDump</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecEncCtxDebugXmlDump">xmlSecEncCtxDebugXmlDump</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="xmlsec-xmlenc.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="xmlEncCtxMode">xmlEncCtxMode</link></entry></row>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="XMLSEC-ENC-RETURN-REPLACED-NODE:CAPS">XMLSEC_ENC_RETURN_REPLACED_NODE</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="xmlSecEncCtx">xmlSecEncCtx</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="xmlsec-xmlenc.description" role="desc">
<title role="desc.title">Description</title>
<para>
XML Encryption support.
</para>

</refsect1>
<refsect1 id="xmlsec-xmlenc.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="xmlSecEncCtxCreate" role="function">
<title>xmlSecEncCtxCreate&#160;()</title>
<indexterm zone="xmlSecEncCtxCreate"><primary>xmlSecEncCtxCreate</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecEncCtx"><returnvalue>xmlSecEncCtxPtr</returnvalue></link>
xmlSecEncCtxCreate (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> keysMngr</parameter>);</programlisting>
<para>Creates &lt;enc:EncryptedData/> element processing context.
The caller is responsible for destroying returned object by calling
<link linkend="xmlSecEncCtxDestroy"><type>xmlSecEncCtxDestroy</type></link> function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>keysMngr</para></entry>
<entry role="parameter_description"><para>the pointer to keys manager.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> pointer to newly allocated context object or NULL if an error
occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxDestroy" role="function">
<title>xmlSecEncCtxDestroy&#160;()</title>
<indexterm zone="xmlSecEncCtxDestroy"><primary>xmlSecEncCtxDestroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecEncCtxDestroy (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>);</programlisting>
<para>Destroy context object created with <link linkend="xmlSecEncCtxCreate"><type>xmlSecEncCtxCreate</type></link> function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxInitialize" role="function">
<title>xmlSecEncCtxInitialize&#160;()</title>
<indexterm zone="xmlSecEncCtxInitialize"><primary>xmlSecEncCtxInitialize</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecEncCtxInitialize (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>,
                        <parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> keysMngr</parameter>);</programlisting>
<para>Initializes &lt;enc:EncryptedData/> element processing context.
The caller is responsible for cleaning up returned object by calling
<link linkend="xmlSecEncCtxFinalize"><type>xmlSecEncCtxFinalize</type></link> function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>keysMngr</para></entry>
<entry role="parameter_description"><para>the pointer to keys manager.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxFinalize" role="function">
<title>xmlSecEncCtxFinalize&#160;()</title>
<indexterm zone="xmlSecEncCtxFinalize"><primary>xmlSecEncCtxFinalize</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecEncCtxFinalize (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>);</programlisting>
<para>Cleans up <parameter>encCtx</parameter>
 object.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxCopyUserPref" role="function">
<title>xmlSecEncCtxCopyUserPref&#160;()</title>
<indexterm zone="xmlSecEncCtxCopyUserPref"><primary>xmlSecEncCtxCopyUserPref</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecEncCtxCopyUserPref (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> dst</parameter>,
                          <parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> src</parameter>);</programlisting>
<para>Copies user preference from <parameter>src</parameter>
 context to <parameter>dst</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>dst</para></entry>
<entry role="parameter_description"><para>the pointer to destination context.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>src</para></entry>
<entry role="parameter_description"><para>the pointer to source context.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxReset" role="function">
<title>xmlSecEncCtxReset&#160;()</title>
<indexterm zone="xmlSecEncCtxReset"><primary>xmlSecEncCtxReset</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecEncCtxReset (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>);</programlisting>
<para>Resets <parameter>encCtx</parameter>
 object, user settings are not touched.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxBinaryEncrypt" role="function">
<title>xmlSecEncCtxBinaryEncrypt&#160;()</title>
<indexterm zone="xmlSecEncCtxBinaryEncrypt"><primary>xmlSecEncCtxBinaryEncrypt</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecEncCtxBinaryEncrypt (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>,
                           <parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> tmpl</parameter>,
                           <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                           <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>);</programlisting>
<para>Encrypts <parameter>data</parameter>
 according to template <parameter>tmpl</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tmpl</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> template node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the pointer for binary buffer.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dataSize</para></entry>
<entry role="parameter_description"><para>the <parameter>data</parameter>
buffer size.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxXmlEncrypt" role="function">
<title>xmlSecEncCtxXmlEncrypt&#160;()</title>
<indexterm zone="xmlSecEncCtxXmlEncrypt"><primary>xmlSecEncCtxXmlEncrypt</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecEncCtxXmlEncrypt (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>,
                        <parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> tmpl</parameter>,
                        <parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> node</parameter>);</programlisting>
<para>Encrypts <parameter>node</parameter>
 according to template <parameter>tmpl</parameter>
. If requested, <parameter>node</parameter>
 is replaced
with result &lt;enc:EncryptedData/> node.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tmpl</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> template node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>the pointer to node for encryption.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxUriEncrypt" role="function">
<title>xmlSecEncCtxUriEncrypt&#160;()</title>
<indexterm zone="xmlSecEncCtxUriEncrypt"><primary>xmlSecEncCtxUriEncrypt</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecEncCtxUriEncrypt (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>,
                        <parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> tmpl</parameter>,
                        <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *uri</parameter>);</programlisting>
<para>Encrypts data from <parameter>uri</parameter>
 according to template <parameter>tmpl</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>tmpl</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> template node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the URI.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxDecrypt" role="function">
<title>xmlSecEncCtxDecrypt&#160;()</title>
<indexterm zone="xmlSecEncCtxDecrypt"><primary>xmlSecEncCtxDecrypt</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecEncCtxDecrypt (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>,
                     <parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> node</parameter>);</programlisting>
<para>Decrypts <parameter>node</parameter>
 and if necessary replaces <parameter>node</parameter>
 with decrypted data.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxDecryptToBuffer" role="function">
<title>xmlSecEncCtxDecryptToBuffer&#160;()</title>
<indexterm zone="xmlSecEncCtxDecryptToBuffer"><primary>xmlSecEncCtxDecryptToBuffer</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecBuffer"><returnvalue>xmlSecBufferPtr</returnvalue></link>
xmlSecEncCtxDecryptToBuffer (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>,
                             <parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> node</parameter>);</programlisting>
<para>Decrypts <parameter>node</parameter>
 data to the <parameter>encCtx</parameter>
 buffer.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>node</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> node.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxDebugDump" role="function">
<title>xmlSecEncCtxDebugDump&#160;()</title>
<indexterm zone="xmlSecEncCtxDebugDump"><primary>xmlSecEncCtxDebugDump</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecEncCtxDebugDump (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>,
                       <parameter><link linkend="FILE:CAPS"><type>FILE</type></link> *output</parameter>);</programlisting>
<para>Prints the debug information about <parameter>encCtx</parameter>
 to <parameter>output</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>output</para></entry>
<entry role="parameter_description"><para>the pointer to output FILE.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecEncCtxDebugXmlDump" role="function">
<title>xmlSecEncCtxDebugXmlDump&#160;()</title>
<indexterm zone="xmlSecEncCtxDebugXmlDump"><primary>xmlSecEncCtxDebugXmlDump</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecEncCtxDebugXmlDump (<parameter><link linkend="xmlSecEncCtx"><type>xmlSecEncCtxPtr</type></link> encCtx</parameter>,
                          <parameter><link linkend="FILE:CAPS"><type>FILE</type></link> *output</parameter>);</programlisting>
<para>Prints the debug information about <parameter>encCtx</parameter>
 to <parameter>output</parameter>
 in XML format.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>encCtx</para></entry>
<entry role="parameter_description"><para>the pointer to &lt;enc:EncryptedData/> processing context.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>output</para></entry>
<entry role="parameter_description"><para>the pointer to output FILE.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>
<refsect1 id="xmlsec-xmlenc.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="xmlEncCtxMode" role="enum">
<title>enum xmlEncCtxMode</title>
<indexterm zone="xmlEncCtxMode"><primary>xmlEncCtxMode</primary></indexterm>
<para>The <link linkend="xmlSecEncCtx"><type>xmlSecEncCtx</type></link> mode.</para>
<refsect3 role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="xmlEncCtxModeEncryptedData">xmlEncCtxModeEncryptedData</para></entry>
<entry role="enum_member_description"><para>the &lt;enc:EncryptedData/> element procesing.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="xmlEncCtxModeEncryptedKey">xmlEncCtxModeEncryptedKey</para></entry>
<entry role="enum_member_description"><para>the &lt;enc:EncryptedKey/> element processing.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="XMLSEC-ENC-RETURN-REPLACED-NODE:CAPS" role="macro">
<title>XMLSEC_ENC_RETURN_REPLACED_NODE</title>
<indexterm zone="XMLSEC-ENC-RETURN-REPLACED-NODE:CAPS"><primary>XMLSEC_ENC_RETURN_REPLACED_NODE</primary></indexterm>
<programlisting language="C">#define XMLSEC_ENC_RETURN_REPLACED_NODE                 0x00000001
</programlisting>
<para>If this flag is set, then the replaced node will be returned in the replacedNodeList</para>
</refsect2>
<refsect2 id="xmlSecEncCtx" role="struct">
<title>struct xmlSecEncCtx</title>
<indexterm zone="xmlSecEncCtx"><primary>xmlSecEncCtx</primary></indexterm>
<programlisting language="C">struct xmlSecEncCtx {
    /* these data user can set before performing the operation */
    void*                       userData;
    unsigned int                flags;
    unsigned int                flags2;
    xmlEncCtxMode               mode;
    xmlSecKeyInfoCtx            keyInfoReadCtx;
    xmlSecKeyInfoCtx            keyInfoWriteCtx;
    xmlSecTransformCtx          transformCtx;
    xmlSecTransformId           defEncMethodId;

    /* these data are returned */
    xmlSecKeyPtr                encKey;
    xmlSecTransformOperation    operation;
    xmlSecBufferPtr             result;
    int                         resultBase64Encoded;
    int                         resultReplaced;
    xmlSecTransformPtr          encMethod;

    /* attributes from EncryptedData or EncryptedKey */
    xmlChar*                    id;
    xmlChar*                    type;
    xmlChar*                    mimeType;
    xmlChar*                    encoding;
    xmlChar*                    recipient;
    xmlChar*                    carriedKeyName;

    /* these are internal data, nobody should change that except us */
    xmlNodePtr                  encDataNode;
    xmlNodePtr                  encMethodNode;
    xmlNodePtr                  keyInfoNode;
    xmlNodePtr                  cipherValueNode;

    xmlNodePtr                  replacedNodeList; /* the pointer to the replaced node */
    void*                       reserved1;        /* reserved for future */
};
</programlisting>
<para>XML Encrypiton context.</para>
<refsect3 role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
<row><entry role="struct_member_name"><para><link linkend="void"><type>void</type></link>&#160;*<structfield id="xmlSecEncCtx.userData">userData</structfield>;</para></entry>
<entry role="struct_member_description"><para>the pointer to user data (xmlsec and xmlsec-crypto libraries
never touches this).</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para>unsigned&#160;<link linkend="int"><type>int</type></link>&#160;<structfield id="xmlSecEncCtx.flags">flags</structfield>;</para></entry>
<entry role="struct_member_description"><para>the XML Encryption processing flags.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para>unsigned&#160;<link linkend="int"><type>int</type></link>&#160;<structfield id="xmlSecEncCtx.flags2">flags2</structfield>;</para></entry>
<entry role="struct_member_description"><para>the XML Encryption processing flags.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlEncCtxMode"><type>xmlEncCtxMode</type></link>&#160;<structfield id="xmlSecEncCtx.mode">mode</structfield>;</para></entry>
<entry role="struct_member_description"><para>the mode.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlSecKeyInfoCtx"><type>xmlSecKeyInfoCtx</type></link>&#160;<structfield id="xmlSecEncCtx.keyInfoReadCtx">keyInfoReadCtx</structfield>;</para></entry>
<entry role="struct_member_description"><para>the reading key context.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlSecKeyInfoCtx"><type>xmlSecKeyInfoCtx</type></link>&#160;<structfield id="xmlSecEncCtx.keyInfoWriteCtx">keyInfoWriteCtx</structfield>;</para></entry>
<entry role="struct_member_description"><para>the writing key context (not used for signature verification).</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlSecTransformCtx"><type>xmlSecTransformCtx</type></link>&#160;<structfield id="xmlSecEncCtx.transformCtx">transformCtx</structfield>;</para></entry>
<entry role="struct_member_description"><para>the transforms processing context.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlSecTransformId"><type>xmlSecTransformId</type></link>&#160;<structfield id="xmlSecEncCtx.defEncMethodId">defEncMethodId</structfield>;</para></entry>
<entry role="struct_member_description"><para>the default encryption method (used if
&lt;enc:EncryptionMethod/> node is not present).</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link>&#160;<structfield id="xmlSecEncCtx.encKey">encKey</structfield>;</para></entry>
<entry role="struct_member_description"><para>the signature key; application may set <link linkend="encKey"><type>encKey</type></link>
before calling encryption/decryption functions.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlSecTransformOperation"><type>xmlSecTransformOperation</type></link>&#160;<structfield id="xmlSecEncCtx.operation">operation</structfield>;</para></entry>
<entry role="struct_member_description"><para>the operation: encrypt or decrypt.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlSecBuffer"><type>xmlSecBufferPtr</type></link>&#160;<structfield id="xmlSecEncCtx.result">result</structfield>;</para></entry>
<entry role="struct_member_description"><para>the pointer to signature (not valid for signature verification).</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="int"><type>int</type></link>&#160;<structfield id="xmlSecEncCtx.resultBase64Encoded">resultBase64Encoded</structfield>;</para></entry>
<entry role="struct_member_description"><para>the flag: if set then result in <link linkend="result"><type>result</type></link> is base64 encoded.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="int"><type>int</type></link>&#160;<structfield id="xmlSecEncCtx.resultReplaced">resultReplaced</structfield>;</para></entry>
<entry role="struct_member_description"><para>the flag: if set then resulted &lt;enc:EncryptedData/>
or &lt;enc:EncryptedKey/> node is added to the document.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlSecTransform"><type>xmlSecTransformPtr</type></link>&#160;<structfield id="xmlSecEncCtx.encMethod">encMethod</structfield>;</para></entry>
<entry role="struct_member_description"><para>the pointer to encryption transform.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlChar"><type>xmlChar</type></link>&#160;*<structfield id="xmlSecEncCtx.id">id</structfield>;</para></entry>
<entry role="struct_member_description"><para>the ID attribute of &lt;enc:EncryptedData/>
or &lt;enc:EncryptedKey/> node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlChar"><type>xmlChar</type></link>&#160;*<structfield id="xmlSecEncCtx.type">type</structfield>;</para></entry>
<entry role="struct_member_description"><para>the Type attribute of &lt;enc:EncryptedData/>
or &lt;enc:EncryptedKey/> node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlChar"><type>xmlChar</type></link>&#160;*<structfield id="xmlSecEncCtx.mimeType">mimeType</structfield>;</para></entry>
<entry role="struct_member_description"><para>the MimeType attribute of &lt;enc:EncryptedData/>
or &lt;enc:EncryptedKey/> node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlChar"><type>xmlChar</type></link>&#160;*<structfield id="xmlSecEncCtx.encoding">encoding</structfield>;</para></entry>
<entry role="struct_member_description"><para>the Encoding attributeof &lt;enc:EncryptedData/>
or &lt;enc:EncryptedKey/> node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlChar"><type>xmlChar</type></link>&#160;*<structfield id="xmlSecEncCtx.recipient">recipient</structfield>;</para></entry>
<entry role="struct_member_description"><para>the Recipient attribute of &lt;enc:EncryptedKey/> node..</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlChar"><type>xmlChar</type></link>&#160;*<structfield id="xmlSecEncCtx.carriedKeyName">carriedKeyName</structfield>;</para></entry>
<entry role="struct_member_description"><para>the CarriedKeyName attribute of &lt;enc:EncryptedKey/> node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlNode"><type>xmlNodePtr</type></link>&#160;<structfield id="xmlSecEncCtx.encDataNode">encDataNode</structfield>;</para></entry>
<entry role="struct_member_description"><para>the pointer to &lt;enc:EncryptedData/>
or &lt;enc:EncryptedKey/> node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlNode"><type>xmlNodePtr</type></link>&#160;<structfield id="xmlSecEncCtx.encMethodNode">encMethodNode</structfield>;</para></entry>
<entry role="struct_member_description"><para>the pointer to &lt;enc:EncryptionMethod/> node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlNode"><type>xmlNodePtr</type></link>&#160;<structfield id="xmlSecEncCtx.keyInfoNode">keyInfoNode</structfield>;</para></entry>
<entry role="struct_member_description"><para>the pointer to &lt;enc:KeyInfo/> node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlNode"><type>xmlNodePtr</type></link>&#160;<structfield id="xmlSecEncCtx.cipherValueNode">cipherValueNode</structfield>;</para></entry>
<entry role="struct_member_description"><para>the pointer to &lt;enc:CipherValue/> node.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="xmlNode"><type>xmlNodePtr</type></link>&#160;<structfield id="xmlSecEncCtx.replacedNodeList">replacedNodeList</structfield>;</para></entry>
<entry role="struct_member_description"><para>the first node of the list of replaced nodes depending on the nodeReplacementMode</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
<row><entry role="struct_member_name"><para><link linkend="void"><type>void</type></link>&#160;*<structfield id="xmlSecEncCtx.reserved1">reserved1</structfield>;</para></entry>
<entry role="struct_member_description"><para>reserved for the future.</para></entry>
<entry role="struct_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>

</refsect1>

</refentry>
