<refentry id="xmlsec-parser">
<refmeta>
<refentrytitle>parser</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>parser</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



<link linkend="xmlDoc">xmlDocPtr</link>   <link linkend="xmlSecParseFile">xmlSecParseFile</link>                 (const char *filename);
<link linkend="xmlDoc">xmlDocPtr</link>   <link linkend="xmlSecParseMemory">xmlSecParseMemory</link>               (unsigned char *buffer,
                                             <link linkend="size-t">size_t</link> size,
                                             int recovery);
<link linkend="xmlDoc">xmlDocPtr</link>   <link linkend="xmlSecParseMemoryExt">xmlSecParseMemoryExt</link>            (unsigned char *prefix,
                                             <link linkend="size-t">size_t</link> prefixSize,
                                             unsigned char *buffer,
                                             <link linkend="size-t">size_t</link> bufferSize,
                                             unsigned char *postfix,
                                             <link linkend="size-t">size_t</link> postfixSize);
#define     <link linkend="xmlSecTransformXmlParserId">xmlSecTransformXmlParserId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecTransformXmlParserGetKlass">xmlSecTransformXmlParserGetKlass</link>
                                            (void);
</synopsis>
</refsynopsisdiv>







<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="xmlSecParseFile">xmlSecParseFile ()</title>
<programlisting><link linkend="xmlDoc">xmlDocPtr</link>   xmlSecParseFile                 (const char *filename);</programlisting>
<para>
Loads XML Doc from file <parameter>filename</parameter>. We need a special version because of 
c14n issue. The code is copied from <link linkend="xmlSAXParseFileWithData">xmlSAXParseFileWithData</link>() function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&nbsp;:</term>
<listitem><simpara> 		the filename.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>pointer to the loaded XML document or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecParseMemory">xmlSecParseMemory ()</title>
<programlisting><link linkend="xmlDoc">xmlDocPtr</link>   xmlSecParseMemory               (unsigned char *buffer,
                                             <link linkend="size-t">size_t</link> size,
                                             int recovery);</programlisting>
<para>
Loads XML Doc from memory. We need a special version because of 
c14n issue. The code is copied from <link linkend="xmlSAXParseMemory">xmlSAXParseMemory</link>() function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> 		the input buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara> 		the input buffer size.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>recovery</parameter>&nbsp;:</term>
<listitem><simpara> 		the flag.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>pointer to the loaded XML document or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecParseMemoryExt">xmlSecParseMemoryExt ()</title>
<programlisting><link linkend="xmlDoc">xmlDocPtr</link>   xmlSecParseMemoryExt            (unsigned char *prefix,
                                             <link linkend="size-t">size_t</link> prefixSize,
                                             unsigned char *buffer,
                                             <link linkend="size-t">size_t</link> bufferSize,
                                             unsigned char *postfix,
                                             <link linkend="size-t">size_t</link> postfixSize);</programlisting>
<para>
Loads XML Doc from 3 chunks of memory: <parameter>prefix</parameter>, <parameter>buffer</parameter> and <parameter>postfix</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>prefix</parameter>&nbsp;:</term>
<listitem><simpara> 		the first part of the input.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>prefixSize</parameter>&nbsp;:</term>
<listitem><simpara> 	the size of the first part of the input.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> 		the second part of the input.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufferSize</parameter>&nbsp;:</term>
<listitem><simpara> 	the size of the second part of the input.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>postfix</parameter>&nbsp;:</term>
<listitem><simpara> 		the third part of the input.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>postfixSize</parameter>&nbsp;:</term>
<listitem><simpara> 	the size of the third part of the input.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>pointer to the loaded XML document or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecTransformXmlParserId">xmlSecTransformXmlParserId</title>
<programlisting>#define     xmlSecTransformXmlParserId</programlisting>
<para>
The XML Parser transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecTransformXmlParserGetKlass">xmlSecTransformXmlParserGetKlass ()</title>
<programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecTransformXmlParserGetKlass
                                            (void);</programlisting>
<para>
The XML parser transform.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis> :</term><listitem><simpara>XML parser transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
