<refentry id="xmlsec-gnutls-app">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-gnutls-app.top_of_page">app</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  XMLSEC-GNUTLS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>app</refname>
<refpurpose>Application functions implementation for GnuTLS.</refpurpose>
</refnamediv>

<refsynopsisdiv id="xmlsec-gnutls-app.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppInit">xmlSecGnuTLSAppInit</link>                 (<parameter>const <link linkend="char"><type>char</type></link> *config</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppShutdown">xmlSecGnuTLSAppShutdown</link>             (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppDefaultKeysMngrInit">xmlSecGnuTLSAppDefaultKeysMngrInit</link>  (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppDefaultKeysMngrAdoptKey">xmlSecGnuTLSAppDefaultKeysMngrAdoptKey</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppDefaultKeysMngrLoad">xmlSecGnuTLSAppDefaultKeysMngrLoad</link>  (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *uri</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppDefaultKeysMngrSave">xmlSecGnuTLSAppDefaultKeysMngrSave</link>  (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppKeysMngrCertLoad">xmlSecGnuTLSAppKeysMngrCertLoad</link>     (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppKeysMngrCertLoadMemory">xmlSecGnuTLSAppKeysMngrCertLoadMemory</link>
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);
<link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        <link linkend="xmlSecGnuTLSAppKeyLoad">xmlSecGnuTLSAppKeyLoad</link>              (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);
<link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        <link linkend="xmlSecGnuTLSAppKeyLoadMemory">xmlSecGnuTLSAppKeyLoadMemory</link>        (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);
<link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        <link linkend="xmlSecGnuTLSAppPkcs12Load">xmlSecGnuTLSAppPkcs12Load</link>           (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);
<link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        <link linkend="xmlSecGnuTLSAppPkcs12LoadMemory">xmlSecGnuTLSAppPkcs12LoadMemory</link>     (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppKeyCertLoad">xmlSecGnuTLSAppKeyCertLoad</link>          (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSAppKeyCertLoadMemory">xmlSecGnuTLSAppKeyCertLoadMemory</link>    (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>*               <link linkend="xmlSecGnuTLSAppGetDefaultPwdCallback">xmlSecGnuTLSAppGetDefaultPwdCallback</link>
                                                        (<parameter><type>void</type></parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="xmlsec-gnutls-app.description" role="desc">
<title role="desc.title">Description</title>
<para>
Application functions implementation for GnuTLS.
</para>
</refsect1>
<refsect1 id="xmlsec-gnutls-app.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="xmlSecGnuTLSAppInit" role="function">
<title>xmlSecGnuTLSAppInit ()</title>
<indexterm zone="xmlSecGnuTLSAppInit"><primary>xmlSecGnuTLSAppInit</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppInit                 (<parameter>const <link linkend="char"><type>char</type></link> *config</parameter>);</programlisting>
<para>
General crypto engine initialization. This function is used
by XMLSec command line utility and called before
<parameter>xmlSecInit</parameter> function.
</para><variablelist role="params">
<varlistentry><term><parameter>config</parameter>&#160;:</term>
<listitem><simpara>the path to GnuTLS configuration (unused).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppShutdown" role="function">
<title>xmlSecGnuTLSAppShutdown ()</title>
<indexterm zone="xmlSecGnuTLSAppShutdown"><primary>xmlSecGnuTLSAppShutdown</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppShutdown             (<parameter><type>void</type></parameter>);</programlisting>
<para>
General crypto engine shutdown. This function is used
by XMLSec command line utility and called after
<parameter>xmlSecShutdown</parameter> function.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppDefaultKeysMngrInit" role="function">
<title>xmlSecGnuTLSAppDefaultKeysMngrInit ()</title>
<indexterm zone="xmlSecGnuTLSAppDefaultKeysMngrInit"><primary>xmlSecGnuTLSAppDefaultKeysMngrInit</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppDefaultKeysMngrInit  (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>);</programlisting>
<para>
Initializes <parameter>mngr</parameter> with simple keys store <link linkend="xmlSecSimpleKeysStoreId"><type>xmlSecSimpleKeysStoreId</type></link>
and a default GnuTLS crypto key data stores.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppDefaultKeysMngrAdoptKey" role="function">
<title>xmlSecGnuTLSAppDefaultKeysMngrAdoptKey ()</title>
<indexterm zone="xmlSecGnuTLSAppDefaultKeysMngrAdoptKey"><primary>xmlSecGnuTLSAppDefaultKeysMngrAdoptKey</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppDefaultKeysMngrAdoptKey
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>);</programlisting>
<para>
Adds <parameter>key</parameter> to the keys manager <parameter>mngr</parameter> created with <link linkend="xmlSecGnuTLSAppDefaultKeysMngrInit"><type>xmlSecGnuTLSAppDefaultKeysMngrInit</type></link>
function.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>the pointer to key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppDefaultKeysMngrLoad" role="function">
<title>xmlSecGnuTLSAppDefaultKeysMngrLoad ()</title>
<indexterm zone="xmlSecGnuTLSAppDefaultKeysMngrLoad"><primary>xmlSecGnuTLSAppDefaultKeysMngrLoad</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppDefaultKeysMngrLoad  (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *uri</parameter>);</programlisting>
<para>
Loads XML keys file from <parameter>uri</parameter> to the keys manager <parameter>mngr</parameter> created
with <link linkend="xmlSecGnuTLSAppDefaultKeysMngrInit"><type>xmlSecGnuTLSAppDefaultKeysMngrInit</type></link> function.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>uri</parameter>&#160;:</term>
<listitem><simpara>the uri.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppDefaultKeysMngrSave" role="function">
<title>xmlSecGnuTLSAppDefaultKeysMngrSave ()</title>
<indexterm zone="xmlSecGnuTLSAppDefaultKeysMngrSave"><primary>xmlSecGnuTLSAppDefaultKeysMngrSave</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppDefaultKeysMngrSave  (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);</programlisting>
<para>
Saves keys from <parameter>mngr</parameter> to  XML keys file.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the destination filename.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>the type of keys to save (public/private/symmetric).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeysMngrCertLoad" role="function">
<title>xmlSecGnuTLSAppKeysMngrCertLoad ()</title>
<indexterm zone="xmlSecGnuTLSAppKeysMngrCertLoad"><primary>xmlSecGnuTLSAppKeysMngrCertLoad</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppKeysMngrCertLoad     (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);</programlisting>
<para>
Reads cert from <parameter>filename</parameter> and adds to the list of trusted or known
untrusted certs in <parameter>store</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the certificate file.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the certificate file format.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>the flag that indicates is the certificate in <parameter>filename</parameter>
                     trusted or not.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeysMngrCertLoadMemory" role="function">
<title>xmlSecGnuTLSAppKeysMngrCertLoadMemory ()</title>
<indexterm zone="xmlSecGnuTLSAppKeysMngrCertLoadMemory"><primary>xmlSecGnuTLSAppKeysMngrCertLoadMemory</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppKeysMngrCertLoadMemory
                                                        (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);</programlisting>
<para>
Reads cert from binary buffer <parameter>data</parameter> and adds to the list of trusted or known
untrusted certs in <parameter>store</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the certificate binary data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dataSize</parameter>&#160;:</term>
<listitem><simpara>the certificate binary data size.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the certificate file format.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&#160;:</term>
<listitem><simpara>the flag that indicates is the certificate trusted or not.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeyLoad" role="function">
<title>xmlSecGnuTLSAppKeyLoad ()</title>
<indexterm zone="xmlSecGnuTLSAppKeyLoad"><primary>xmlSecGnuTLSAppKeyLoad</primary></indexterm>
<programlisting><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        xmlSecGnuTLSAppKeyLoad              (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>
Reads key from the a file.
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the key filename.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the key file format.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwd</parameter>&#160;:</term>
<listitem><simpara>the key file password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallback</parameter>&#160;:</term>
<listitem><simpara>the key password callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallbackCtx</parameter>&#160;:</term>
<listitem><simpara>the user context for password callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to the key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeyLoadMemory" role="function">
<title>xmlSecGnuTLSAppKeyLoadMemory ()</title>
<indexterm zone="xmlSecGnuTLSAppKeyLoadMemory"><primary>xmlSecGnuTLSAppKeyLoadMemory</primary></indexterm>
<programlisting><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        xmlSecGnuTLSAppKeyLoadMemory        (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>
Reads key from the memory buffer.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the binary key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dataSize</parameter>&#160;:</term>
<listitem><simpara>the size of binary key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the key file format.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwd</parameter>&#160;:</term>
<listitem><simpara>the key file password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallback</parameter>&#160;:</term>
<listitem><simpara>the key password callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallbackCtx</parameter>&#160;:</term>
<listitem><simpara>the user context for password callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to the key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppPkcs12Load" role="function">
<title>xmlSecGnuTLSAppPkcs12Load ()</title>
<indexterm zone="xmlSecGnuTLSAppPkcs12Load"><primary>xmlSecGnuTLSAppPkcs12Load</primary></indexterm>
<programlisting><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        xmlSecGnuTLSAppPkcs12Load           (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>
Reads key and all associated certificates from the PKCS12 file.
For uniformity, call xmlSecGnuTLSAppKeyLoad instead of this function. Pass
in format=xmlSecKeyDataFormatPkcs12.
</para><variablelist role="params">
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the PKCS12 key filename.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwd</parameter>&#160;:</term>
<listitem><simpara>the PKCS12 file password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallback</parameter>&#160;:</term>
<listitem><simpara>the password callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallbackCtx</parameter>&#160;:</term>
<listitem><simpara>the user context for password callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to the key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppPkcs12LoadMemory" role="function">
<title>xmlSecGnuTLSAppPkcs12LoadMemory ()</title>
<indexterm zone="xmlSecGnuTLSAppPkcs12LoadMemory"><primary>xmlSecGnuTLSAppPkcs12LoadMemory</primary></indexterm>
<programlisting><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>        xmlSecGnuTLSAppPkcs12LoadMemory     (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                                         <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>
Reads key and all associated certificates from the PKCS12 data in memory buffer.
For uniformity, call xmlSecGnuTLSAppKeyLoadMemory instead of this function. Pass
in format=xmlSecKeyDataFormatPkcs12.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the PKCS12 binary data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dataSize</parameter>&#160;:</term>
<listitem><simpara>the PKCS12 binary data size.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwd</parameter>&#160;:</term>
<listitem><simpara>the PKCS12 file password.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallback</parameter>&#160;:</term>
<listitem><simpara>the password callback.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pwdCallbackCtx</parameter>&#160;:</term>
<listitem><simpara>the user context for password callback.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to the key or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeyCertLoad" role="function">
<title>xmlSecGnuTLSAppKeyCertLoad ()</title>
<indexterm zone="xmlSecGnuTLSAppKeyCertLoad"><primary>xmlSecGnuTLSAppKeyCertLoad</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppKeyCertLoad          (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                                                         <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);</programlisting>
<para>
Reads the certificate from $<parameter>filename</parameter> and adds it to key.
</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>the pointer to key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>filename</parameter>&#160;:</term>
<listitem><simpara>the certificate filename.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the certificate file format.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeyCertLoadMemory" role="function">
<title>xmlSecGnuTLSAppKeyCertLoadMemory ()</title>
<indexterm zone="xmlSecGnuTLSAppKeyCertLoadMemory"><primary>xmlSecGnuTLSAppKeyCertLoadMemory</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSAppKeyCertLoadMemory    (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                                         <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);</programlisting>
<para>
Reads the certificate from memory buffer and adds it to key.
</para><variablelist role="params">
<varlistentry><term><parameter>key</parameter>&#160;:</term>
<listitem><simpara>the pointer to key.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the certificate binary data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dataSize</parameter>&#160;:</term>
<listitem><simpara>the certificate binary data size.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>the certificate file format.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSAppGetDefaultPwdCallback" role="function">
<title>xmlSecGnuTLSAppGetDefaultPwdCallback ()</title>
<indexterm zone="xmlSecGnuTLSAppGetDefaultPwdCallback"><primary>xmlSecGnuTLSAppGetDefaultPwdCallback</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>*               xmlSecGnuTLSAppGetDefaultPwdCallback
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
Gets default password callback.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> default password callback.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
