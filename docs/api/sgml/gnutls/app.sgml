<refentry id="xmlsec-gnutls-app">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-gnutls-app.top_of_page">app</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC-GNUTLS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>app</refname>
<refpurpose>Application functions implementation for GnuTLS.</refpurpose>
</refnamediv>

<refsect1 id="xmlsec-gnutls-app.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppInit">xmlSecGnuTLSAppInit</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppShutdown">xmlSecGnuTLSAppShutdown</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppDefaultKeysMngrInit">xmlSecGnuTLSAppDefaultKeysMngrInit</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppDefaultKeysMngrAdoptKey">xmlSecGnuTLSAppDefaultKeysMngrAdoptKey</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppDefaultKeysMngrLoad">xmlSecGnuTLSAppDefaultKeysMngrLoad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppDefaultKeysMngrSave">xmlSecGnuTLSAppDefaultKeysMngrSave</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppKeysMngrCertLoad">xmlSecGnuTLSAppKeysMngrCertLoad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppKeysMngrCertLoadMemory">xmlSecGnuTLSAppKeysMngrCertLoadMemory</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppKeyLoad">xmlSecGnuTLSAppKeyLoad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppKeyLoadMemory">xmlSecGnuTLSAppKeyLoadMemory</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppPkcs12Load">xmlSecGnuTLSAppPkcs12Load</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppPkcs12LoadMemory">xmlSecGnuTLSAppPkcs12LoadMemory</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppKeyCertLoad">xmlSecGnuTLSAppKeyCertLoad</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppKeyCertLoadMemory">xmlSecGnuTLSAppKeyCertLoadMemory</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="xmlSecGnuTLSAppGetDefaultPwdCallback">xmlSecGnuTLSAppGetDefaultPwdCallback</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="xmlsec-gnutls-app.description" role="desc">
<title role="desc.title">Description</title>
<para>
Application functions implementation for GnuTLS.
</para>

</refsect1>
<refsect1 id="xmlsec-gnutls-app.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="xmlSecGnuTLSAppInit" role="function">
<title>xmlSecGnuTLSAppInit&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppInit"><primary>xmlSecGnuTLSAppInit</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppInit (<parameter>const <link linkend="char"><type>char</type></link> *config</parameter>);</programlisting>
<para>General crypto engine initialization. This function is used
by XMLSec command line utility and called before
<parameter>xmlSecInit</parameter>
 function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>config</para></entry>
<entry role="parameter_description"><para>the path to GnuTLS configuration (unused).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppShutdown" role="function">
<title>xmlSecGnuTLSAppShutdown&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppShutdown"><primary>xmlSecGnuTLSAppShutdown</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppShutdown (<parameter><type>void</type></parameter>);</programlisting>
<para>General crypto engine shutdown. This function is used
by XMLSec command line utility and called after
<parameter>xmlSecShutdown</parameter>
 function.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppDefaultKeysMngrInit" role="function">
<title>xmlSecGnuTLSAppDefaultKeysMngrInit&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppDefaultKeysMngrInit"><primary>xmlSecGnuTLSAppDefaultKeysMngrInit</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppDefaultKeysMngrInit (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>);</programlisting>
<para>Initializes <parameter>mngr</parameter>
 with simple keys store <link linkend="xmlSecSimpleKeysStoreId"><type>xmlSecSimpleKeysStoreId</type></link>
and a default GnuTLS crypto key data stores.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mngr</para></entry>
<entry role="parameter_description"><para>the pointer to keys manager.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppDefaultKeysMngrAdoptKey" role="function">
<title>xmlSecGnuTLSAppDefaultKeysMngrAdoptKey&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppDefaultKeysMngrAdoptKey"><primary>xmlSecGnuTLSAppDefaultKeysMngrAdoptKey</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppDefaultKeysMngrAdoptKey
                               (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                <parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>);</programlisting>
<para>Adds <parameter>key</parameter>
 to the keys manager <parameter>mngr</parameter>
 created with <link linkend="xmlSecGnuTLSAppDefaultKeysMngrInit"><type>xmlSecGnuTLSAppDefaultKeysMngrInit</type></link>
function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mngr</para></entry>
<entry role="parameter_description"><para>the pointer to keys manager.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>key</para></entry>
<entry role="parameter_description"><para>the pointer to key.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppDefaultKeysMngrLoad" role="function">
<title>xmlSecGnuTLSAppDefaultKeysMngrLoad&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppDefaultKeysMngrLoad"><primary>xmlSecGnuTLSAppDefaultKeysMngrLoad</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppDefaultKeysMngrLoad (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                    <parameter>const <link linkend="char"><type>char</type></link> *uri</parameter>);</programlisting>
<para>Loads XML keys file from <parameter>uri</parameter>
 to the keys manager <parameter>mngr</parameter>
 created
with <link linkend="xmlSecGnuTLSAppDefaultKeysMngrInit"><type>xmlSecGnuTLSAppDefaultKeysMngrInit</type></link> function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mngr</para></entry>
<entry role="parameter_description"><para>the pointer to keys manager.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>uri</para></entry>
<entry role="parameter_description"><para>the uri.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppDefaultKeysMngrSave" role="function">
<title>xmlSecGnuTLSAppDefaultKeysMngrSave&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppDefaultKeysMngrSave"><primary>xmlSecGnuTLSAppDefaultKeysMngrSave</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppDefaultKeysMngrSave (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                    <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                    <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);</programlisting>
<para>Saves keys from <parameter>mngr</parameter>
 to  XML keys file.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mngr</para></entry>
<entry role="parameter_description"><para>the pointer to keys manager.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>filename</para></entry>
<entry role="parameter_description"><para>the destination filename.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the type of keys to save (public/private/symmetric).</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeysMngrCertLoad" role="function">
<title>xmlSecGnuTLSAppKeysMngrCertLoad&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppKeysMngrCertLoad"><primary>xmlSecGnuTLSAppKeysMngrCertLoad</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppKeysMngrCertLoad (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                                 <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                 <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);</programlisting>
<para>Reads cert from <parameter>filename</parameter>
 and adds to the list of trusted or known
untrusted certs in <parameter>store</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mngr</para></entry>
<entry role="parameter_description"><para>the keys manager.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>filename</para></entry>
<entry role="parameter_description"><para>the certificate file.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the certificate file format.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the flag that indicates is the certificate in <parameter>filename</parameter>
trusted or not.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeysMngrCertLoadMemory" role="function">
<title>xmlSecGnuTLSAppKeysMngrCertLoadMemory&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppKeysMngrCertLoadMemory"><primary>xmlSecGnuTLSAppKeysMngrCertLoadMemory</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppKeysMngrCertLoadMemory (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>,
                                       <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                       <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                       <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                                       <parameter><link linkend="xmlSecKeyDataType"><type>xmlSecKeyDataType</type></link> type</parameter>);</programlisting>
<para>Reads cert from binary buffer <parameter>data</parameter>
 and adds to the list of trusted or known
untrusted certs in <parameter>store</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>mngr</para></entry>
<entry role="parameter_description"><para>the keys manager.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the certificate binary data.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dataSize</para></entry>
<entry role="parameter_description"><para>the certificate binary data size.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the certificate file format.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>type</para></entry>
<entry role="parameter_description"><para>the flag that indicates is the certificate trusted or not.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeyLoad" role="function">
<title>xmlSecGnuTLSAppKeyLoad&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppKeyLoad"><primary>xmlSecGnuTLSAppKeyLoad</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>
xmlSecGnuTLSAppKeyLoad (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                        <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                        <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                        <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                        <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>Reads key from the a file.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>filename</para></entry>
<entry role="parameter_description"><para>the key filename.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the key file format.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwd</para></entry>
<entry role="parameter_description"><para>the key file password.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwdCallback</para></entry>
<entry role="parameter_description"><para>the key password callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwdCallbackCtx</para></entry>
<entry role="parameter_description"><para>the user context for password callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> pointer to the key or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeyLoadMemory" role="function">
<title>xmlSecGnuTLSAppKeyLoadMemory&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppKeyLoadMemory"><primary>xmlSecGnuTLSAppKeyLoadMemory</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>
xmlSecGnuTLSAppKeyLoadMemory (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                              <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                              <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>,
                              <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                              <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                              <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>Reads key from the memory buffer.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the binary key data.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dataSize</para></entry>
<entry role="parameter_description"><para>the size of binary key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the key file format.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwd</para></entry>
<entry role="parameter_description"><para>the key file password.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwdCallback</para></entry>
<entry role="parameter_description"><para>the key password callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwdCallbackCtx</para></entry>
<entry role="parameter_description"><para>the user context for password callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> pointer to the key or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppPkcs12Load" role="function">
<title>xmlSecGnuTLSAppPkcs12Load&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppPkcs12Load"><primary>xmlSecGnuTLSAppPkcs12Load</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>
xmlSecGnuTLSAppPkcs12Load (<parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                           <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                           <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                           <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>Reads key and all associated certificates from the PKCS12 file.
For uniformity, call xmlSecGnuTLSAppKeyLoad instead of this function. Pass
in format=xmlSecKeyDataFormatPkcs12.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>filename</para></entry>
<entry role="parameter_description"><para>the PKCS12 key filename.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwd</para></entry>
<entry role="parameter_description"><para>the PKCS12 file password.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwdCallback</para></entry>
<entry role="parameter_description"><para>the password callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwdCallbackCtx</para></entry>
<entry role="parameter_description"><para>the user context for password callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> pointer to the key or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppPkcs12LoadMemory" role="function">
<title>xmlSecGnuTLSAppPkcs12LoadMemory&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppPkcs12LoadMemory"><primary>xmlSecGnuTLSAppPkcs12LoadMemory</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecKey"><returnvalue>xmlSecKeyPtr</returnvalue></link>
xmlSecGnuTLSAppPkcs12LoadMemory (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                 <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                 <parameter>const <link linkend="char"><type>char</type></link> *pwd</parameter>,
                                 <parameter><link linkend="void"><type>void</type></link> *pwdCallback</parameter>,
                                 <parameter><link linkend="void"><type>void</type></link> *pwdCallbackCtx</parameter>);</programlisting>
<para>Reads key and all associated certificates from the PKCS12 data in memory buffer.
For uniformity, call xmlSecGnuTLSAppKeyLoadMemory instead of this function. Pass
in format=xmlSecKeyDataFormatPkcs12.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the PKCS12 binary data.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dataSize</para></entry>
<entry role="parameter_description"><para>the PKCS12 binary data size.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwd</para></entry>
<entry role="parameter_description"><para>the PKCS12 file password.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwdCallback</para></entry>
<entry role="parameter_description"><para>the password callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>pwdCallbackCtx</para></entry>
<entry role="parameter_description"><para>the user context for password callback.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> pointer to the key or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeyCertLoad" role="function">
<title>xmlSecGnuTLSAppKeyCertLoad&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppKeyCertLoad"><primary>xmlSecGnuTLSAppKeyCertLoad</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppKeyCertLoad (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                            <parameter>const <link linkend="char"><type>char</type></link> *filename</parameter>,
                            <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);</programlisting>
<para>Reads the certificate from $<parameter>filename</parameter>
 and adds it to key.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>key</para></entry>
<entry role="parameter_description"><para>the pointer to key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>filename</para></entry>
<entry role="parameter_description"><para>the certificate filename.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the certificate file format.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppKeyCertLoadMemory" role="function">
<title>xmlSecGnuTLSAppKeyCertLoadMemory&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppKeyCertLoadMemory"><primary>xmlSecGnuTLSAppKeyCertLoadMemory</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecGnuTLSAppKeyCertLoadMemory (<parameter><link linkend="xmlSecKey"><type>xmlSecKeyPtr</type></link> key</parameter>,
                                  <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                                  <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                                  <parameter><link linkend="xmlSecKeyDataFormat"><type>xmlSecKeyDataFormat</type></link> format</parameter>);</programlisting>
<para>Reads the certificate from memory buffer and adds it to key.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>key</para></entry>
<entry role="parameter_description"><para>the pointer to key.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the certificate binary data.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dataSize</para></entry>
<entry role="parameter_description"><para>the certificate binary data size.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the certificate file format.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value otherwise.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecGnuTLSAppGetDefaultPwdCallback" role="function">
<title>xmlSecGnuTLSAppGetDefaultPwdCallback&#160;()</title>
<indexterm zone="xmlSecGnuTLSAppGetDefaultPwdCallback"><primary>xmlSecGnuTLSAppGetDefaultPwdCallback</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>&#160;*
xmlSecGnuTLSAppGetDefaultPwdCallback (<parameter><type>void</type></parameter>);</programlisting>
<para>Gets default password callback.</para>
<refsect3 role="returns">
<title>Returns</title>
<para> default password callback.</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="xmlsec-gnutls-app.other_details" role="details">
<title role="details.title">Types and Values</title>

</refsect1>

</refentry>
