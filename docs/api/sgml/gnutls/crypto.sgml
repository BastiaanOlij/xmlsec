<refentry id="xmlsec-gnutls-crypto">
<refmeta>
<refentrytitle role="top_of_page">crypto</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC-GNUTLS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>crypto</refname>
<refpurpose>Crypto transforms implementation for GnuTLS.</refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



<link linkend="xmlSecCryptoDLFunctions">xmlSecCryptoDLFunctionsPtr</link> <link linkend="xmlSecCryptoGetFunctions-gnutls">xmlSecCryptoGetFunctions_gnutls</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSInit">xmlSecGnuTLSInit</link>                (void);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSShutdown">xmlSecGnuTLSShutdown</link>            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSKeysMngrInit">xmlSecGnuTLSKeysMngrInit</link>        (<link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> mngr);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSGenerateRandom">xmlSecGnuTLSGenerateRandom</link>      (<link linkend="xmlSecBuffer">xmlSecBufferPtr</link> buffer,
                                             <link linkend="xmlSecSize">xmlSecSize</link> size);
#define     <link linkend="xmlSecGnuTLSKeyDataAesId">xmlSecGnuTLSKeyDataAesId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGnuTLSKeyDataAesGetKlass">xmlSecGnuTLSKeyDataAesGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSKeyDataAesSet">xmlSecGnuTLSKeyDataAesSet</link>       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);
#define     <link linkend="xmlSecGnuTLSTransformAes128CbcId">xmlSecGnuTLSTransformAes128CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformAes128CbcGetKlass">xmlSecGnuTLSTransformAes128CbcGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformAes192CbcId">xmlSecGnuTLSTransformAes192CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformAes192CbcGetKlass">xmlSecGnuTLSTransformAes192CbcGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformAes256CbcId">xmlSecGnuTLSTransformAes256CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformAes256CbcGetKlass">xmlSecGnuTLSTransformAes256CbcGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformKWAes128Id">xmlSecGnuTLSTransformKWAes128Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformKWAes128GetKlass">xmlSecGnuTLSTransformKWAes128GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformKWAes192Id">xmlSecGnuTLSTransformKWAes192Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformKWAes192GetKlass">xmlSecGnuTLSTransformKWAes192GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformKWAes256Id">xmlSecGnuTLSTransformKWAes256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformKWAes256GetKlass">xmlSecGnuTLSTransformKWAes256GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSKeyDataDesId">xmlSecGnuTLSKeyDataDesId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGnuTLSKeyDataDesGetKlass">xmlSecGnuTLSKeyDataDesGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSKeyDataDesSet">xmlSecGnuTLSKeyDataDesSet</link>       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);
#define     <link linkend="xmlSecGnuTLSTransformDes3CbcId">xmlSecGnuTLSTransformDes3CbcId</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformDes3CbcGetKlass">xmlSecGnuTLSTransformDes3CbcGetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformKWDes3Id">xmlSecGnuTLSTransformKWDes3Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformKWDes3GetKlass">xmlSecGnuTLSTransformKWDes3GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSKeyDataDsaId">xmlSecGnuTLSKeyDataDsaId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGnuTLSKeyDataDsaGetKlass">xmlSecGnuTLSKeyDataDsaGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSKeyDataDsaAdoptPrivateKey">xmlSecGnuTLSKeyDataDsaAdoptPrivateKey</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gnutls-x509-privkey-t">gnutls_x509_privkey_t</link> dsa_key);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSKeyDataDsaAdoptPublicKey">xmlSecGnuTLSKeyDataDsaAdoptPublicKey</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *p,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *q,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *g,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *y);
#define     <link linkend="xmlSecGnuTLSTransformDsaSha1Id">xmlSecGnuTLSTransformDsaSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformDsaSha1GetKlass">xmlSecGnuTLSTransformDsaSha1GetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSHmacGetMinOutputLength">xmlSecGnuTLSHmacGetMinOutputLength</link>
                                            (void);
<link linkend="void">void</link>        <link linkend="xmlSecGnuTLSHmacSetMinOutputLength">xmlSecGnuTLSHmacSetMinOutputLength</link>
                                            (<link linkend="int">int</link> min_length);
#define     <link linkend="xmlSecGnuTLSKeyDataHmacId">xmlSecGnuTLSKeyDataHmacId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGnuTLSKeyDataHmacGetKlass">xmlSecGnuTLSKeyDataHmacGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSKeyDataHmacSet">xmlSecGnuTLSKeyDataHmacSet</link>      (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);
#define     <link linkend="xmlSecGnuTLSTransformHmacMd5Id">xmlSecGnuTLSTransformHmacMd5Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformHmacMd5GetKlass">xmlSecGnuTLSTransformHmacMd5GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformHmacRipemd160Id">xmlSecGnuTLSTransformHmacRipemd160Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformHmacRipemd160GetKlass">xmlSecGnuTLSTransformHmacRipemd160GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformHmacSha1Id">xmlSecGnuTLSTransformHmacSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformHmacSha1GetKlass">xmlSecGnuTLSTransformHmacSha1GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformHmacSha256Id">xmlSecGnuTLSTransformHmacSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformHmacSha256GetKlass">xmlSecGnuTLSTransformHmacSha256GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformHmacSha384Id">xmlSecGnuTLSTransformHmacSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformHmacSha384GetKlass">xmlSecGnuTLSTransformHmacSha384GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformHmacSha512Id">xmlSecGnuTLSTransformHmacSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformHmacSha512GetKlass">xmlSecGnuTLSTransformHmacSha512GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSKeyDataRsaId">xmlSecGnuTLSKeyDataRsaId</link>
<link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> <link linkend="xmlSecGnuTLSKeyDataRsaGetKlass">xmlSecGnuTLSKeyDataRsaGetKlass</link>
                                            (void);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSKeyDataRsaAdoptPrivateKey">xmlSecGnuTLSKeyDataRsaAdoptPrivateKey</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gnutls-x509-privkey-t">gnutls_x509_privkey_t</link> rsa_key);
<link linkend="int">int</link>         <link linkend="xmlSecGnuTLSKeyDataRsaAdoptPublicKey">xmlSecGnuTLSKeyDataRsaAdoptPublicKey</link>
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *m,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *e);
#define     <link linkend="xmlSecGnuTLSTransformRsaMd5Id">xmlSecGnuTLSTransformRsaMd5Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformRsaMd5GetKlass">xmlSecGnuTLSTransformRsaMd5GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformRsaRipemd160Id">xmlSecGnuTLSTransformRsaRipemd160Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformRsaRipemd160GetKlass">xmlSecGnuTLSTransformRsaRipemd160GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformRsaSha1Id">xmlSecGnuTLSTransformRsaSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformRsaSha1GetKlass">xmlSecGnuTLSTransformRsaSha1GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformRsaSha256Id">xmlSecGnuTLSTransformRsaSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformRsaSha256GetKlass">xmlSecGnuTLSTransformRsaSha256GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformRsaSha384Id">xmlSecGnuTLSTransformRsaSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformRsaSha384GetKlass">xmlSecGnuTLSTransformRsaSha384GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformRsaSha512Id">xmlSecGnuTLSTransformRsaSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformRsaSha512GetKlass">xmlSecGnuTLSTransformRsaSha512GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformSha1Id">xmlSecGnuTLSTransformSha1Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformSha1GetKlass">xmlSecGnuTLSTransformSha1GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformSha256Id">xmlSecGnuTLSTransformSha256Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformSha256GetKlass">xmlSecGnuTLSTransformSha256GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformSha384Id">xmlSecGnuTLSTransformSha384Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformSha384GetKlass">xmlSecGnuTLSTransformSha384GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformSha512Id">xmlSecGnuTLSTransformSha512Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformSha512GetKlass">xmlSecGnuTLSTransformSha512GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformMd5Id">xmlSecGnuTLSTransformMd5Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformMd5GetKlass">xmlSecGnuTLSTransformMd5GetKlass</link>
                                            (void);
#define     <link linkend="xmlSecGnuTLSTransformRipemd160Id">xmlSecGnuTLSTransformRipemd160Id</link>
<link linkend="xmlSecTransformId">xmlSecTransformId</link> <link linkend="xmlSecGnuTLSTransformRipemd160GetKlass">xmlSecGnuTLSTransformRipemd160GetKlass</link>
                                            (void);
</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
Crypto transforms implementation for GnuTLS.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="xmlSecCryptoGetFunctions-gnutls" role="function">xmlSecCryptoGetFunctions_gnutls ()</title>
<indexterm><primary>xmlSecCryptoGetFunctions_gnutls</primary></indexterm><programlisting><link linkend="xmlSecCryptoDLFunctions">xmlSecCryptoDLFunctionsPtr</link> xmlSecCryptoGetFunctions_gnutls
                                            (void);</programlisting>
<para>
Gets the pointer to xmlsec-gnutls functions table.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the xmlsec-gnutls functions table or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSInit" role="function">xmlSecGnuTLSInit ()</title>
<indexterm><primary>xmlSecGnuTLSInit</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSInit                (void);</programlisting>
<para>
XMLSec library specific crypto engine initialization.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSShutdown" role="function">xmlSecGnuTLSShutdown ()</title>
<indexterm><primary>xmlSecGnuTLSShutdown</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSShutdown            (void);</programlisting>
<para>
XMLSec library specific crypto engine shutdown.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeysMngrInit" role="function">xmlSecGnuTLSKeysMngrInit ()</title>
<indexterm><primary>xmlSecGnuTLSKeysMngrInit</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSKeysMngrInit        (<link linkend="xmlSecKeysMngr">xmlSecKeysMngrPtr</link> mngr);</programlisting>
<para>
Adds GnuTLS specific key data stores in keys manager.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSGenerateRandom" role="function">xmlSecGnuTLSGenerateRandom ()</title>
<indexterm><primary>xmlSecGnuTLSGenerateRandom</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSGenerateRandom      (<link linkend="xmlSecBuffer">xmlSecBufferPtr</link> buffer,
                                             <link linkend="xmlSecSize">xmlSecSize</link> size);</programlisting>
<para>
Generates <parameter>size</parameter> random bytes and puts result in <parameter>buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara>             the destination buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&nbsp;:</term>
<listitem><simpara>               the numer of bytes to generate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataAesId" role="macro">xmlSecGnuTLSKeyDataAesId</title>
<indexterm><primary>xmlSecGnuTLSKeyDataAesId</primary></indexterm><programlisting>#define     xmlSecGnuTLSKeyDataAesId</programlisting>
<para>
The AES key data klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataAesGetKlass" role="function">xmlSecGnuTLSKeyDataAesGetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataAesGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGnuTLSKeyDataAesGetKlass
                                            (void);</programlisting>
<para>
The AES key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> AES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataAesSet" role="function">xmlSecGnuTLSKeyDataAesSet ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataAesSet</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSKeyDataAesSet       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);</programlisting>
<para>
Sets the value of AES key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to AES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>                the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&nbsp;:</term>
<listitem><simpara>            the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformAes128CbcId" role="macro">xmlSecGnuTLSTransformAes128CbcId</title>
<indexterm><primary>xmlSecGnuTLSTransformAes128CbcId</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformAes128CbcId</programlisting>
<para>
The AES128 CBC cipher transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformAes128CbcGetKlass" role="function">xmlSecGnuTLSTransformAes128CbcGetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformAes128CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformAes128CbcGetKlass
                                            (void);</programlisting>
<para>
AES 128 CBC encryption transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to AES 128 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformAes192CbcId" role="macro">xmlSecGnuTLSTransformAes192CbcId</title>
<indexterm><primary>xmlSecGnuTLSTransformAes192CbcId</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformAes192CbcId</programlisting>
<para>
The AES192 CBC cipher transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformAes192CbcGetKlass" role="function">xmlSecGnuTLSTransformAes192CbcGetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformAes192CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformAes192CbcGetKlass
                                            (void);</programlisting>
<para>
AES 192 CBC encryption transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to AES 192 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformAes256CbcId" role="macro">xmlSecGnuTLSTransformAes256CbcId</title>
<indexterm><primary>xmlSecGnuTLSTransformAes256CbcId</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformAes256CbcId</programlisting>
<para>
The AES256 CBC cipher transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformAes256CbcGetKlass" role="function">xmlSecGnuTLSTransformAes256CbcGetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformAes256CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformAes256CbcGetKlass
                                            (void);</programlisting>
<para>
AES 256 CBC encryption transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to AES 256 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformKWAes128Id" role="macro">xmlSecGnuTLSTransformKWAes128Id</title>
<indexterm><primary>xmlSecGnuTLSTransformKWAes128Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformKWAes128Id</programlisting>
<para>
The AES 128 key wrap transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformKWAes128GetKlass" role="function">xmlSecGnuTLSTransformKWAes128GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformKWAes128GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformKWAes128GetKlass
                                            (void);</programlisting>
<para>
The AES-128 kew wrapper transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> AES-128 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformKWAes192Id" role="macro">xmlSecGnuTLSTransformKWAes192Id</title>
<indexterm><primary>xmlSecGnuTLSTransformKWAes192Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformKWAes192Id</programlisting>
<para>
The AES 192 key wrap transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformKWAes192GetKlass" role="function">xmlSecGnuTLSTransformKWAes192GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformKWAes192GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformKWAes192GetKlass
                                            (void);</programlisting>
<para>
The AES-192 kew wrapper transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> AES-192 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformKWAes256Id" role="macro">xmlSecGnuTLSTransformKWAes256Id</title>
<indexterm><primary>xmlSecGnuTLSTransformKWAes256Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformKWAes256Id</programlisting>
<para>
The AES 256 key wrap transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformKWAes256GetKlass" role="function">xmlSecGnuTLSTransformKWAes256GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformKWAes256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformKWAes256GetKlass
                                            (void);</programlisting>
<para>
The AES-256 kew wrapper transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> AES-256 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataDesId" role="macro">xmlSecGnuTLSKeyDataDesId</title>
<indexterm><primary>xmlSecGnuTLSKeyDataDesId</primary></indexterm><programlisting>#define     xmlSecGnuTLSKeyDataDesId</programlisting>
<para>
The DES key data klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataDesGetKlass" role="function">xmlSecGnuTLSKeyDataDesGetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataDesGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGnuTLSKeyDataDesGetKlass
                                            (void);</programlisting>
<para>
The DES key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> DES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataDesSet" role="function">xmlSecGnuTLSKeyDataDesSet ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataDesSet</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSKeyDataDesSet       (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);</programlisting>
<para>
Sets the value of DES key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to DES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>                the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&nbsp;:</term>
<listitem><simpara>            the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformDes3CbcId" role="macro">xmlSecGnuTLSTransformDes3CbcId</title>
<indexterm><primary>xmlSecGnuTLSTransformDes3CbcId</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformDes3CbcId</programlisting>
<para>
The DES3 CBC cipher transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformDes3CbcGetKlass" role="function">xmlSecGnuTLSTransformDes3CbcGetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformDes3CbcGetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformDes3CbcGetKlass
                                            (void);</programlisting>
<para>
Triple DES CBC encryption transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to Triple DES encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformKWDes3Id" role="macro">xmlSecGnuTLSTransformKWDes3Id</title>
<indexterm><primary>xmlSecGnuTLSTransformKWDes3Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformKWDes3Id</programlisting>
<para>
The DES3 KW transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformKWDes3GetKlass" role="function">xmlSecGnuTLSTransformKWDes3GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformKWDes3GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformKWDes3GetKlass
                                            (void);</programlisting>
<para>
The Triple DES key wrapper transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> Triple DES key wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataDsaId" role="macro">xmlSecGnuTLSKeyDataDsaId</title>
<indexterm><primary>xmlSecGnuTLSKeyDataDsaId</primary></indexterm><programlisting>#define     xmlSecGnuTLSKeyDataDsaId</programlisting>
<para>
The DSA key klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataDsaGetKlass" role="function">xmlSecGnuTLSKeyDataDsaGetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataDsaGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGnuTLSKeyDataDsaGetKlass
                                            (void);</programlisting>
<para>
The DSA key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to DSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataDsaAdoptPrivateKey" role="function">xmlSecGnuTLSKeyDataDsaAdoptPrivateKey ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataDsaAdoptPrivateKey</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSKeyDataDsaAdoptPrivateKey
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gnutls-x509-privkey-t">gnutls_x509_privkey_t</link> dsa_key);</programlisting>
<para>
Sets the value of DSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dsa_key</parameter>&nbsp;:</term>
<listitem><simpara>            the pointer to GnuTLS DSA private key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataDsaAdoptPublicKey" role="function">xmlSecGnuTLSKeyDataDsaAdoptPublicKey ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataDsaAdoptPublicKey</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSKeyDataDsaAdoptPublicKey
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *p,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *q,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *g,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *y);</programlisting>
<para>
Sets the value of DSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>p</parameter>&nbsp;:</term>
<listitem><simpara>                  the pointer to p component of the DSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>q</parameter>&nbsp;:</term>
<listitem><simpara>                  the pointer to q component of the DSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>g</parameter>&nbsp;:</term>
<listitem><simpara>                  the pointer to g component of the DSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&nbsp;:</term>
<listitem><simpara>                  the pointer to y component of the DSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformDsaSha1Id" role="macro">xmlSecGnuTLSTransformDsaSha1Id</title>
<indexterm><primary>xmlSecGnuTLSTransformDsaSha1Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformDsaSha1Id</programlisting>
<para>
The DSA SHA1 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformDsaSha1GetKlass" role="function">xmlSecGnuTLSTransformDsaSha1GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformDsaSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformDsaSha1GetKlass
                                            (void);</programlisting>
<para>
The DSA-SHA1 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> DSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSHmacGetMinOutputLength" role="function">xmlSecGnuTLSHmacGetMinOutputLength ()</title>
<indexterm><primary>xmlSecGnuTLSHmacGetMinOutputLength</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSHmacGetMinOutputLength
                                            (void);</programlisting>
<para>
Gets the value of min HMAC length.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the min HMAC output length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSHmacSetMinOutputLength" role="function">xmlSecGnuTLSHmacSetMinOutputLength ()</title>
<indexterm><primary>xmlSecGnuTLSHmacSetMinOutputLength</primary></indexterm><programlisting><link linkend="void">void</link>        xmlSecGnuTLSHmacSetMinOutputLength
                                            (<link linkend="int">int</link> min_length);</programlisting>
<para>
Sets the min HMAC output length</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>min_length</parameter>&nbsp;:</term>
<listitem><simpara> the new min length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataHmacId" role="macro">xmlSecGnuTLSKeyDataHmacId</title>
<indexterm><primary>xmlSecGnuTLSKeyDataHmacId</primary></indexterm><programlisting>#define     xmlSecGnuTLSKeyDataHmacId</programlisting>
<para>
The HMAC key klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataHmacGetKlass" role="function">xmlSecGnuTLSKeyDataHmacGetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataHmacGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGnuTLSKeyDataHmacGetKlass
                                            (void);</programlisting>
<para>
The HMAC key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> HMAC key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataHmacSet" role="function">xmlSecGnuTLSKeyDataHmacSet ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataHmacSet</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSKeyDataHmacSet      (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             const <link linkend="xmlSecByte">xmlSecByte</link> *buf,
                                             <link linkend="xmlSecSize">xmlSecSize</link> bufSize);</programlisting>
<para>
Sets the value of HMAC key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to HMAC key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara>                the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&nbsp;:</term>
<listitem><simpara>            the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacMd5Id" role="macro">xmlSecGnuTLSTransformHmacMd5Id</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacMd5Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformHmacMd5Id</programlisting>
<para>
The HMAC with MD5 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacMd5GetKlass" role="function">xmlSecGnuTLSTransformHmacMd5GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacMd5GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformHmacMd5GetKlass
                                            (void);</programlisting>
<para>
The HMAC-MD5 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-MD5 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacRipemd160Id" role="macro">xmlSecGnuTLSTransformHmacRipemd160Id</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacRipemd160Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformHmacRipemd160Id</programlisting>
<para>
The HMAC with RipeMD160 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacRipemd160GetKlass" role="function">xmlSecGnuTLSTransformHmacRipemd160GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacRipemd160GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformHmacRipemd160GetKlass
                                            (void);</programlisting>
<para>
The HMAC-RIPEMD160 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-RIPEMD160 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacSha1Id" role="macro">xmlSecGnuTLSTransformHmacSha1Id</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacSha1Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformHmacSha1Id</programlisting>
<para>
The HMAC with SHA1 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacSha1GetKlass" role="function">xmlSecGnuTLSTransformHmacSha1GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformHmacSha1GetKlass
                                            (void);</programlisting>
<para>
The HMAC-SHA1 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-SHA1 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacSha256Id" role="macro">xmlSecGnuTLSTransformHmacSha256Id</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacSha256Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformHmacSha256Id</programlisting>
<para>
The HMAC with SHA256 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacSha256GetKlass" role="function">xmlSecGnuTLSTransformHmacSha256GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformHmacSha256GetKlass
                                            (void);</programlisting>
<para>
The HMAC-SHA256 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-SHA256 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacSha384Id" role="macro">xmlSecGnuTLSTransformHmacSha384Id</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacSha384Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformHmacSha384Id</programlisting>
<para>
The HMAC with SHA384 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacSha384GetKlass" role="function">xmlSecGnuTLSTransformHmacSha384GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformHmacSha384GetKlass
                                            (void);</programlisting>
<para>
The HMAC-SHA384 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-SHA384 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacSha512Id" role="macro">xmlSecGnuTLSTransformHmacSha512Id</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacSha512Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformHmacSha512Id</programlisting>
<para>
The HMAC with SHA512 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformHmacSha512GetKlass" role="function">xmlSecGnuTLSTransformHmacSha512GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformHmacSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformHmacSha512GetKlass
                                            (void);</programlisting>
<para>
The HMAC-SHA512 transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the HMAC-SHA512 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataRsaId" role="macro">xmlSecGnuTLSKeyDataRsaId</title>
<indexterm><primary>xmlSecGnuTLSKeyDataRsaId</primary></indexterm><programlisting>#define     xmlSecGnuTLSKeyDataRsaId</programlisting>
<para>
The RSA key klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataRsaGetKlass" role="function">xmlSecGnuTLSKeyDataRsaGetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataRsaGetKlass</primary></indexterm><programlisting><link linkend="xmlSecKeyDataId">xmlSecKeyDataId</link> xmlSecGnuTLSKeyDataRsaGetKlass
                                            (void);</programlisting>
<para>
The GnuTLS RSA key data klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to GnuTLS RSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataRsaAdoptPrivateKey" role="function">xmlSecGnuTLSKeyDataRsaAdoptPrivateKey ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataRsaAdoptPrivateKey</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSKeyDataRsaAdoptPrivateKey
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gnutls-x509-privkey-t">gnutls_x509_privkey_t</link> rsa_key);</programlisting>
<para>
Sets the value of RSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rsa_key</parameter>&nbsp;:</term>
<listitem><simpara>            the pointer to GnuTLS RSA private key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSKeyDataRsaAdoptPublicKey" role="function">xmlSecGnuTLSKeyDataRsaAdoptPublicKey ()</title>
<indexterm><primary>xmlSecGnuTLSKeyDataRsaAdoptPublicKey</primary></indexterm><programlisting><link linkend="int">int</link>         xmlSecGnuTLSKeyDataRsaAdoptPublicKey
                                            (<link linkend="xmlSecKeyData">xmlSecKeyDataPtr</link> data,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *m,
                                             <link linkend="gnutls-datum-t">gnutls_datum_t</link> *e);</programlisting>
<para>
Sets the value of RSA key data.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara>               the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m</parameter>&nbsp;:</term>
<listitem><simpara>                  the pointer to m component of the RSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>e</parameter>&nbsp;:</term>
<listitem><simpara>                  the pointer to e component of the RSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaMd5Id" role="macro">xmlSecGnuTLSTransformRsaMd5Id</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaMd5Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformRsaMd5Id</programlisting>
<para>
The RSA-MD5 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaMd5GetKlass" role="function">xmlSecGnuTLSTransformRsaMd5GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaMd5GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformRsaMd5GetKlass
                                            (void);</programlisting>
<para>
The RSA-MD5 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-MD5 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaRipemd160Id" role="macro">xmlSecGnuTLSTransformRsaRipemd160Id</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaRipemd160Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformRsaRipemd160Id</programlisting>
<para>
The RSA-RIPEMD160 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaRipemd160GetKlass" role="function">xmlSecGnuTLSTransformRsaRipemd160GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaRipemd160GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformRsaRipemd160GetKlass
                                            (void);</programlisting>
<para>
The RSA-RIPEMD160 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-RIPEMD160 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaSha1Id" role="macro">xmlSecGnuTLSTransformRsaSha1Id</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaSha1Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformRsaSha1Id</programlisting>
<para>
The RSA-SHA1 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaSha1GetKlass" role="function">xmlSecGnuTLSTransformRsaSha1GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformRsaSha1GetKlass
                                            (void);</programlisting>
<para>
The RSA-SHA1 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaSha256Id" role="macro">xmlSecGnuTLSTransformRsaSha256Id</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaSha256Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformRsaSha256Id</programlisting>
<para>
The RSA-SHA256 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaSha256GetKlass" role="function">xmlSecGnuTLSTransformRsaSha256GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformRsaSha256GetKlass
                                            (void);</programlisting>
<para>
The RSA-SHA256 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-SHA256 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaSha384Id" role="macro">xmlSecGnuTLSTransformRsaSha384Id</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaSha384Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformRsaSha384Id</programlisting>
<para>
The RSA-SHA384 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaSha384GetKlass" role="function">xmlSecGnuTLSTransformRsaSha384GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformRsaSha384GetKlass
                                            (void);</programlisting>
<para>
The RSA-SHA384 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-SHA384 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaSha512Id" role="macro">xmlSecGnuTLSTransformRsaSha512Id</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaSha512Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformRsaSha512Id</programlisting>
<para>
The RSA-SHA512 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRsaSha512GetKlass" role="function">xmlSecGnuTLSTransformRsaSha512GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformRsaSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformRsaSha512GetKlass
                                            (void);</programlisting>
<para>
The RSA-SHA512 signature transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> RSA-SHA512 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformSha1Id" role="macro">xmlSecGnuTLSTransformSha1Id</title>
<indexterm><primary>xmlSecGnuTLSTransformSha1Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformSha1Id</programlisting>
<para>
The HMAC with SHA1 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformSha1GetKlass" role="function">xmlSecGnuTLSTransformSha1GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformSha1GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformSha1GetKlass
                                            (void);</programlisting>
<para>
SHA-1 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to SHA-1 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformSha256Id" role="macro">xmlSecGnuTLSTransformSha256Id</title>
<indexterm><primary>xmlSecGnuTLSTransformSha256Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformSha256Id</programlisting>
<para>
The HMAC with SHA256 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformSha256GetKlass" role="function">xmlSecGnuTLSTransformSha256GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformSha256GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformSha256GetKlass
                                            (void);</programlisting>
<para>
SHA256 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to SHA256 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformSha384Id" role="macro">xmlSecGnuTLSTransformSha384Id</title>
<indexterm><primary>xmlSecGnuTLSTransformSha384Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformSha384Id</programlisting>
<para>
The HMAC with SHA384 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformSha384GetKlass" role="function">xmlSecGnuTLSTransformSha384GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformSha384GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformSha384GetKlass
                                            (void);</programlisting>
<para>
SHA384 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to SHA384 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformSha512Id" role="macro">xmlSecGnuTLSTransformSha512Id</title>
<indexterm><primary>xmlSecGnuTLSTransformSha512Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformSha512Id</programlisting>
<para>
The HMAC with SHA512 signature transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformSha512GetKlass" role="function">xmlSecGnuTLSTransformSha512GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformSha512GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformSha512GetKlass
                                            (void);</programlisting>
<para>
SHA512 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to SHA512 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformMd5Id" role="macro">xmlSecGnuTLSTransformMd5Id</title>
<indexterm><primary>xmlSecGnuTLSTransformMd5Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformMd5Id</programlisting>
<para>
The MD5 digest transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformMd5GetKlass" role="function">xmlSecGnuTLSTransformMd5GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformMd5GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformMd5GetKlass
                                            (void);</programlisting>
<para>
MD5 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to MD5 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRipemd160Id" role="macro">xmlSecGnuTLSTransformRipemd160Id</title>
<indexterm><primary>xmlSecGnuTLSTransformRipemd160Id</primary></indexterm><programlisting>#define     xmlSecGnuTLSTransformRipemd160Id</programlisting>
<para>
The RIPEMD160 digest transform klass.</para>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="xmlSecGnuTLSTransformRipemd160GetKlass" role="function">xmlSecGnuTLSTransformRipemd160GetKlass ()</title>
<indexterm><primary>xmlSecGnuTLSTransformRipemd160GetKlass</primary></indexterm><programlisting><link linkend="xmlSecTransformId">xmlSecTransformId</link> xmlSecGnuTLSTransformRipemd160GetKlass
                                            (void);</programlisting>
<para>
RIPEMD160 digest transform klass.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> pointer to RIPEMD160 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>




</refentry>
