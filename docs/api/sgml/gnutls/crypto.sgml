<refentry id="xmlsec-gnutls-crypto">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-gnutls-crypto.top_of_page">crypto</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  XMLSEC-GNUTLS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>crypto</refname>
<refpurpose>Crypto transforms implementation for GnuTLS.</refpurpose>
</refnamediv>

<refsynopsisdiv id="xmlsec-gnutls-crypto.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="xmlSecCryptoDLFunctions"><returnvalue>xmlSecCryptoDLFunctionsPtr</returnvalue></link>  <link linkend="xmlSecCryptoGetFunctions-gnutls">xmlSecCryptoGetFunctions_gnutls</link>
                                                        (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSInit">xmlSecGnuTLSInit</link>                    (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSShutdown">xmlSecGnuTLSShutdown</link>                (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSKeysMngrInit">xmlSecGnuTLSKeysMngrInit</link>            (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSGenerateRandom">xmlSecGnuTLSGenerateRandom</link>          (<parameter><link linkend="xmlSecBuffer"><type>xmlSecBufferPtr</type></link> buffer</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> size</parameter>);
#define             <link linkend="xmlSecGnuTLSKeyDataAesId">xmlSecGnuTLSKeyDataAesId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecGnuTLSKeyDataAesGetKlass">xmlSecGnuTLSKeyDataAesGetKlass</link>      (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSKeyDataAesSet">xmlSecGnuTLSKeyDataAesSet</link>           (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);
#define             <link linkend="xmlSecGnuTLSTransformAes128CbcId">xmlSecGnuTLSTransformAes128CbcId</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformAes128CbcGetKlass">xmlSecGnuTLSTransformAes128CbcGetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformAes192CbcId">xmlSecGnuTLSTransformAes192CbcId</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformAes192CbcGetKlass">xmlSecGnuTLSTransformAes192CbcGetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformAes256CbcId">xmlSecGnuTLSTransformAes256CbcId</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformAes256CbcGetKlass">xmlSecGnuTLSTransformAes256CbcGetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformKWAes128Id">xmlSecGnuTLSTransformKWAes128Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformKWAes128GetKlass">xmlSecGnuTLSTransformKWAes128GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformKWAes192Id">xmlSecGnuTLSTransformKWAes192Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformKWAes192GetKlass">xmlSecGnuTLSTransformKWAes192GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformKWAes256Id">xmlSecGnuTLSTransformKWAes256Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformKWAes256GetKlass">xmlSecGnuTLSTransformKWAes256GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSKeyDataDesId">xmlSecGnuTLSKeyDataDesId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecGnuTLSKeyDataDesGetKlass">xmlSecGnuTLSKeyDataDesGetKlass</link>      (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSKeyDataDesSet">xmlSecGnuTLSKeyDataDesSet</link>           (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);
#define             <link linkend="xmlSecGnuTLSTransformDes3CbcId">xmlSecGnuTLSTransformDes3CbcId</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformDes3CbcGetKlass">xmlSecGnuTLSTransformDes3CbcGetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformKWDes3Id">xmlSecGnuTLSTransformKWDes3Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformKWDes3GetKlass">xmlSecGnuTLSTransformKWDes3GetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSKeyDataDsaId">xmlSecGnuTLSKeyDataDsaId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecGnuTLSKeyDataDsaGetKlass">xmlSecGnuTLSKeyDataDsaGetKlass</link>      (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSKeyDataDsaAdoptPrivateKey">xmlSecGnuTLSKeyDataDsaAdoptPrivateKey</link>
                                                        (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter><link linkend="gnutls-x509-privkey-t"><type>gnutls_x509_privkey_t</type></link> dsa_key</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSKeyDataDsaAdoptPublicKey">xmlSecGnuTLSKeyDataDsaAdoptPublicKey</link>
                                                        (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *p</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *q</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *g</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *y</parameter>);
#define             <link linkend="xmlSecGnuTLSTransformDsaSha1Id">xmlSecGnuTLSTransformDsaSha1Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformDsaSha1GetKlass">xmlSecGnuTLSTransformDsaSha1GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSHmacGetMinOutputLength">xmlSecGnuTLSHmacGetMinOutputLength</link>  (<parameter><type>void</type></parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="xmlSecGnuTLSHmacSetMinOutputLength">xmlSecGnuTLSHmacSetMinOutputLength</link>  (<parameter><link linkend="int"><type>int</type></link> min_length</parameter>);
#define             <link linkend="xmlSecGnuTLSKeyDataHmacId">xmlSecGnuTLSKeyDataHmacId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecGnuTLSKeyDataHmacGetKlass">xmlSecGnuTLSKeyDataHmacGetKlass</link>     (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSKeyDataHmacSet">xmlSecGnuTLSKeyDataHmacSet</link>          (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);
#define             <link linkend="xmlSecGnuTLSTransformHmacMd5Id">xmlSecGnuTLSTransformHmacMd5Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformHmacMd5GetKlass">xmlSecGnuTLSTransformHmacMd5GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformHmacRipemd160Id">xmlSecGnuTLSTransformHmacRipemd160Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformHmacRipemd160GetKlass">xmlSecGnuTLSTransformHmacRipemd160GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformHmacSha1Id">xmlSecGnuTLSTransformHmacSha1Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformHmacSha1GetKlass">xmlSecGnuTLSTransformHmacSha1GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformHmacSha256Id">xmlSecGnuTLSTransformHmacSha256Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformHmacSha256GetKlass">xmlSecGnuTLSTransformHmacSha256GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformHmacSha384Id">xmlSecGnuTLSTransformHmacSha384Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformHmacSha384GetKlass">xmlSecGnuTLSTransformHmacSha384GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformHmacSha512Id">xmlSecGnuTLSTransformHmacSha512Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformHmacSha512GetKlass">xmlSecGnuTLSTransformHmacSha512GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSKeyDataRsaId">xmlSecGnuTLSKeyDataRsaId</link>
<link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     <link linkend="xmlSecGnuTLSKeyDataRsaGetKlass">xmlSecGnuTLSKeyDataRsaGetKlass</link>      (<parameter><type>void</type></parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSKeyDataRsaAdoptPrivateKey">xmlSecGnuTLSKeyDataRsaAdoptPrivateKey</link>
                                                        (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter><link linkend="gnutls-x509-privkey-t"><type>gnutls_x509_privkey_t</type></link> rsa_key</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="xmlSecGnuTLSKeyDataRsaAdoptPublicKey">xmlSecGnuTLSKeyDataRsaAdoptPublicKey</link>
                                                        (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *m</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *e</parameter>);
#define             <link linkend="xmlSecGnuTLSTransformRsaMd5Id">xmlSecGnuTLSTransformRsaMd5Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformRsaMd5GetKlass">xmlSecGnuTLSTransformRsaMd5GetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformRsaRipemd160Id">xmlSecGnuTLSTransformRsaRipemd160Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformRsaRipemd160GetKlass">xmlSecGnuTLSTransformRsaRipemd160GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformRsaSha1Id">xmlSecGnuTLSTransformRsaSha1Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformRsaSha1GetKlass">xmlSecGnuTLSTransformRsaSha1GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformRsaSha256Id">xmlSecGnuTLSTransformRsaSha256Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformRsaSha256GetKlass">xmlSecGnuTLSTransformRsaSha256GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformRsaSha384Id">xmlSecGnuTLSTransformRsaSha384Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformRsaSha384GetKlass">xmlSecGnuTLSTransformRsaSha384GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformRsaSha512Id">xmlSecGnuTLSTransformRsaSha512Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformRsaSha512GetKlass">xmlSecGnuTLSTransformRsaSha512GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformSha1Id">xmlSecGnuTLSTransformSha1Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformSha1GetKlass">xmlSecGnuTLSTransformSha1GetKlass</link>   (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformSha256Id">xmlSecGnuTLSTransformSha256Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformSha256GetKlass">xmlSecGnuTLSTransformSha256GetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformSha384Id">xmlSecGnuTLSTransformSha384Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformSha384GetKlass">xmlSecGnuTLSTransformSha384GetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformSha512Id">xmlSecGnuTLSTransformSha512Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformSha512GetKlass">xmlSecGnuTLSTransformSha512GetKlass</link> (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformMd5Id">xmlSecGnuTLSTransformMd5Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformMd5GetKlass">xmlSecGnuTLSTransformMd5GetKlass</link>    (<parameter><type>void</type></parameter>);
#define             <link linkend="xmlSecGnuTLSTransformRipemd160Id">xmlSecGnuTLSTransformRipemd160Id</link>
<link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   <link linkend="xmlSecGnuTLSTransformRipemd160GetKlass">xmlSecGnuTLSTransformRipemd160GetKlass</link>
                                                        (<parameter><type>void</type></parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="xmlsec-gnutls-crypto.description" role="desc">
<title role="desc.title">Description</title>
<para>
Crypto transforms implementation for GnuTLS.
</para>
</refsect1>
<refsect1 id="xmlsec-gnutls-crypto.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="xmlSecCryptoGetFunctions-gnutls" role="function">
<title>xmlSecCryptoGetFunctions_gnutls ()</title>
<indexterm zone="xmlSecCryptoGetFunctions-gnutls"><primary>xmlSecCryptoGetFunctions_gnutls</primary></indexterm>
<programlisting><link linkend="xmlSecCryptoDLFunctions"><returnvalue>xmlSecCryptoDLFunctionsPtr</returnvalue></link>  xmlSecCryptoGetFunctions_gnutls
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
Gets the pointer to xmlsec-gnutls functions table.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the xmlsec-gnutls functions table or NULL if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSInit" role="function">
<title>xmlSecGnuTLSInit ()</title>
<indexterm zone="xmlSecGnuTLSInit"><primary>xmlSecGnuTLSInit</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSInit                    (<parameter><type>void</type></parameter>);</programlisting>
<para>
XMLSec library specific crypto engine initialization.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSShutdown" role="function">
<title>xmlSecGnuTLSShutdown ()</title>
<indexterm zone="xmlSecGnuTLSShutdown"><primary>xmlSecGnuTLSShutdown</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSShutdown                (<parameter><type>void</type></parameter>);</programlisting>
<para>
XMLSec library specific crypto engine shutdown.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeysMngrInit" role="function">
<title>xmlSecGnuTLSKeysMngrInit ()</title>
<indexterm zone="xmlSecGnuTLSKeysMngrInit"><primary>xmlSecGnuTLSKeysMngrInit</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSKeysMngrInit            (<parameter><link linkend="xmlSecKeysMngr"><type>xmlSecKeysMngrPtr</type></link> mngr</parameter>);</programlisting>
<para>
Adds GnuTLS specific key data stores in keys manager.
</para><variablelist role="params">
<varlistentry><term><parameter>mngr</parameter>&#160;:</term>
<listitem><simpara>the pointer to keys manager.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSGenerateRandom" role="function">
<title>xmlSecGnuTLSGenerateRandom ()</title>
<indexterm zone="xmlSecGnuTLSGenerateRandom"><primary>xmlSecGnuTLSGenerateRandom</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSGenerateRandom          (<parameter><link linkend="xmlSecBuffer"><type>xmlSecBufferPtr</type></link> buffer</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> size</parameter>);</programlisting>
<para>
Generates <parameter>size</parameter> random bytes and puts result in <parameter>buffer</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&#160;:</term>
<listitem><simpara>the destination buffer.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara>the numer of bytes to generate.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataAesId" role="macro">
<title>xmlSecGnuTLSKeyDataAesId</title>
<indexterm zone="xmlSecGnuTLSKeyDataAesId"><primary>xmlSecGnuTLSKeyDataAesId</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSKeyDataAesId</programlisting>
<para>
The AES key data klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataAesGetKlass" role="function">
<title>xmlSecGnuTLSKeyDataAesGetKlass ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataAesGetKlass"><primary>xmlSecGnuTLSKeyDataAesGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecGnuTLSKeyDataAesGetKlass      (<parameter><type>void</type></parameter>);</programlisting>
<para>
The AES key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataAesSet" role="function">
<title>xmlSecGnuTLSKeyDataAesSet ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataAesSet"><primary>xmlSecGnuTLSKeyDataAesSet</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSKeyDataAesSet           (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);</programlisting>
<para>
Sets the value of AES key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to AES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&#160;:</term>
<listitem><simpara>the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformAes128CbcId" role="macro">
<title>xmlSecGnuTLSTransformAes128CbcId</title>
<indexterm zone="xmlSecGnuTLSTransformAes128CbcId"><primary>xmlSecGnuTLSTransformAes128CbcId</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformAes128CbcId</programlisting>
<para>
The AES128 CBC cipher transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformAes128CbcGetKlass" role="function">
<title>xmlSecGnuTLSTransformAes128CbcGetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformAes128CbcGetKlass"><primary>xmlSecGnuTLSTransformAes128CbcGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformAes128CbcGetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
AES 128 CBC encryption transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to AES 128 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformAes192CbcId" role="macro">
<title>xmlSecGnuTLSTransformAes192CbcId</title>
<indexterm zone="xmlSecGnuTLSTransformAes192CbcId"><primary>xmlSecGnuTLSTransformAes192CbcId</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformAes192CbcId</programlisting>
<para>
The AES192 CBC cipher transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformAes192CbcGetKlass" role="function">
<title>xmlSecGnuTLSTransformAes192CbcGetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformAes192CbcGetKlass"><primary>xmlSecGnuTLSTransformAes192CbcGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformAes192CbcGetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
AES 192 CBC encryption transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to AES 192 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformAes256CbcId" role="macro">
<title>xmlSecGnuTLSTransformAes256CbcId</title>
<indexterm zone="xmlSecGnuTLSTransformAes256CbcId"><primary>xmlSecGnuTLSTransformAes256CbcId</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformAes256CbcId</programlisting>
<para>
The AES256 CBC cipher transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformAes256CbcGetKlass" role="function">
<title>xmlSecGnuTLSTransformAes256CbcGetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformAes256CbcGetKlass"><primary>xmlSecGnuTLSTransformAes256CbcGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformAes256CbcGetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
AES 256 CBC encryption transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to AES 256 CBC encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformKWAes128Id" role="macro">
<title>xmlSecGnuTLSTransformKWAes128Id</title>
<indexterm zone="xmlSecGnuTLSTransformKWAes128Id"><primary>xmlSecGnuTLSTransformKWAes128Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformKWAes128Id</programlisting>
<para>
The AES 128 key wrap transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformKWAes128GetKlass" role="function">
<title>xmlSecGnuTLSTransformKWAes128GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformKWAes128GetKlass"><primary>xmlSecGnuTLSTransformKWAes128GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformKWAes128GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The AES-128 kew wrapper transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES-128 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformKWAes192Id" role="macro">
<title>xmlSecGnuTLSTransformKWAes192Id</title>
<indexterm zone="xmlSecGnuTLSTransformKWAes192Id"><primary>xmlSecGnuTLSTransformKWAes192Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformKWAes192Id</programlisting>
<para>
The AES 192 key wrap transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformKWAes192GetKlass" role="function">
<title>xmlSecGnuTLSTransformKWAes192GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformKWAes192GetKlass"><primary>xmlSecGnuTLSTransformKWAes192GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformKWAes192GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The AES-192 kew wrapper transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES-192 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformKWAes256Id" role="macro">
<title>xmlSecGnuTLSTransformKWAes256Id</title>
<indexterm zone="xmlSecGnuTLSTransformKWAes256Id"><primary>xmlSecGnuTLSTransformKWAes256Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformKWAes256Id</programlisting>
<para>
The AES 256 key wrap transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformKWAes256GetKlass" role="function">
<title>xmlSecGnuTLSTransformKWAes256GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformKWAes256GetKlass"><primary>xmlSecGnuTLSTransformKWAes256GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformKWAes256GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The AES-256 kew wrapper transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> AES-256 kew wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataDesId" role="macro">
<title>xmlSecGnuTLSKeyDataDesId</title>
<indexterm zone="xmlSecGnuTLSKeyDataDesId"><primary>xmlSecGnuTLSKeyDataDesId</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSKeyDataDesId</programlisting>
<para>
The DES key data klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataDesGetKlass" role="function">
<title>xmlSecGnuTLSKeyDataDesGetKlass ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataDesGetKlass"><primary>xmlSecGnuTLSKeyDataDesGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecGnuTLSKeyDataDesGetKlass      (<parameter><type>void</type></parameter>);</programlisting>
<para>
The DES key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> DES key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataDesSet" role="function">
<title>xmlSecGnuTLSKeyDataDesSet ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataDesSet"><primary>xmlSecGnuTLSKeyDataDesSet</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSKeyDataDesSet           (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);</programlisting>
<para>
Sets the value of DES key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to DES key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&#160;:</term>
<listitem><simpara>the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformDes3CbcId" role="macro">
<title>xmlSecGnuTLSTransformDes3CbcId</title>
<indexterm zone="xmlSecGnuTLSTransformDes3CbcId"><primary>xmlSecGnuTLSTransformDes3CbcId</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformDes3CbcId</programlisting>
<para>
The DES3 CBC cipher transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformDes3CbcGetKlass" role="function">
<title>xmlSecGnuTLSTransformDes3CbcGetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformDes3CbcGetKlass"><primary>xmlSecGnuTLSTransformDes3CbcGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformDes3CbcGetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
Triple DES CBC encryption transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to Triple DES encryption transform.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformKWDes3Id" role="macro">
<title>xmlSecGnuTLSTransformKWDes3Id</title>
<indexterm zone="xmlSecGnuTLSTransformKWDes3Id"><primary>xmlSecGnuTLSTransformKWDes3Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformKWDes3Id</programlisting>
<para>
The DES3 KW transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformKWDes3GetKlass" role="function">
<title>xmlSecGnuTLSTransformKWDes3GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformKWDes3GetKlass"><primary>xmlSecGnuTLSTransformKWDes3GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformKWDes3GetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
The Triple DES key wrapper transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> Triple DES key wrapper transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataDsaId" role="macro">
<title>xmlSecGnuTLSKeyDataDsaId</title>
<indexterm zone="xmlSecGnuTLSKeyDataDsaId"><primary>xmlSecGnuTLSKeyDataDsaId</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSKeyDataDsaId</programlisting>
<para>
The DSA key klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataDsaGetKlass" role="function">
<title>xmlSecGnuTLSKeyDataDsaGetKlass ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataDsaGetKlass"><primary>xmlSecGnuTLSKeyDataDsaGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecGnuTLSKeyDataDsaGetKlass      (<parameter><type>void</type></parameter>);</programlisting>
<para>
The DSA key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to DSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataDsaAdoptPrivateKey" role="function">
<title>xmlSecGnuTLSKeyDataDsaAdoptPrivateKey ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataDsaAdoptPrivateKey"><primary>xmlSecGnuTLSKeyDataDsaAdoptPrivateKey</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSKeyDataDsaAdoptPrivateKey
                                                        (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter><link linkend="gnutls-x509-privkey-t"><type>gnutls_x509_privkey_t</type></link> dsa_key</parameter>);</programlisting>
<para>
Sets the value of DSA key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dsa_key</parameter>&#160;:</term>
<listitem><simpara>the pointer to GnuTLS DSA private key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataDsaAdoptPublicKey" role="function">
<title>xmlSecGnuTLSKeyDataDsaAdoptPublicKey ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataDsaAdoptPublicKey"><primary>xmlSecGnuTLSKeyDataDsaAdoptPublicKey</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSKeyDataDsaAdoptPublicKey
                                                        (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *p</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *q</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *g</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *y</parameter>);</programlisting>
<para>
Sets the value of DSA key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to DSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>p</parameter>&#160;:</term>
<listitem><simpara>the pointer to p component of the DSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>q</parameter>&#160;:</term>
<listitem><simpara>the pointer to q component of the DSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>g</parameter>&#160;:</term>
<listitem><simpara>the pointer to g component of the DSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>y</parameter>&#160;:</term>
<listitem><simpara>the pointer to y component of the DSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformDsaSha1Id" role="macro">
<title>xmlSecGnuTLSTransformDsaSha1Id</title>
<indexterm zone="xmlSecGnuTLSTransformDsaSha1Id"><primary>xmlSecGnuTLSTransformDsaSha1Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformDsaSha1Id</programlisting>
<para>
The DSA SHA1 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformDsaSha1GetKlass" role="function">
<title>xmlSecGnuTLSTransformDsaSha1GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformDsaSha1GetKlass"><primary>xmlSecGnuTLSTransformDsaSha1GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformDsaSha1GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The DSA-SHA1 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> DSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSHmacGetMinOutputLength" role="function">
<title>xmlSecGnuTLSHmacGetMinOutputLength ()</title>
<indexterm zone="xmlSecGnuTLSHmacGetMinOutputLength"><primary>xmlSecGnuTLSHmacGetMinOutputLength</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSHmacGetMinOutputLength  (<parameter><type>void</type></parameter>);</programlisting>
<para>
Gets the value of min HMAC length.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the min HMAC output length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSHmacSetMinOutputLength" role="function">
<title>xmlSecGnuTLSHmacSetMinOutputLength ()</title>
<indexterm zone="xmlSecGnuTLSHmacSetMinOutputLength"><primary>xmlSecGnuTLSHmacSetMinOutputLength</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                xmlSecGnuTLSHmacSetMinOutputLength  (<parameter><link linkend="int"><type>int</type></link> min_length</parameter>);</programlisting>
<para>
Sets the min HMAC output length
</para><variablelist role="params">
<varlistentry><term><parameter>min_length</parameter>&#160;:</term>
<listitem><simpara>the new min length
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataHmacId" role="macro">
<title>xmlSecGnuTLSKeyDataHmacId</title>
<indexterm zone="xmlSecGnuTLSKeyDataHmacId"><primary>xmlSecGnuTLSKeyDataHmacId</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSKeyDataHmacId</programlisting>
<para>
The HMAC key klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataHmacGetKlass" role="function">
<title>xmlSecGnuTLSKeyDataHmacGetKlass ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataHmacGetKlass"><primary>xmlSecGnuTLSKeyDataHmacGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecGnuTLSKeyDataHmacGetKlass     (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> HMAC key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataHmacSet" role="function">
<title>xmlSecGnuTLSKeyDataHmacSet ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataHmacSet"><primary>xmlSecGnuTLSKeyDataHmacSet</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSKeyDataHmacSet          (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *buf</parameter>,
                                                         <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> bufSize</parameter>);</programlisting>
<para>
Sets the value of HMAC key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to HMAC key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&#160;:</term>
<listitem><simpara>the pointer to key value.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>bufSize</parameter>&#160;:</term>
<listitem><simpara>the key value size (in bytes).
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value if an error occurs.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacMd5Id" role="macro">
<title>xmlSecGnuTLSTransformHmacMd5Id</title>
<indexterm zone="xmlSecGnuTLSTransformHmacMd5Id"><primary>xmlSecGnuTLSTransformHmacMd5Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformHmacMd5Id</programlisting>
<para>
The HMAC with MD5 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacMd5GetKlass" role="function">
<title>xmlSecGnuTLSTransformHmacMd5GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformHmacMd5GetKlass"><primary>xmlSecGnuTLSTransformHmacMd5GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformHmacMd5GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-MD5 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-MD5 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacRipemd160Id" role="macro">
<title>xmlSecGnuTLSTransformHmacRipemd160Id</title>
<indexterm zone="xmlSecGnuTLSTransformHmacRipemd160Id"><primary>xmlSecGnuTLSTransformHmacRipemd160Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformHmacRipemd160Id</programlisting>
<para>
The HMAC with RipeMD160 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacRipemd160GetKlass" role="function">
<title>xmlSecGnuTLSTransformHmacRipemd160GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformHmacRipemd160GetKlass"><primary>xmlSecGnuTLSTransformHmacRipemd160GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformHmacRipemd160GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-RIPEMD160 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-RIPEMD160 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacSha1Id" role="macro">
<title>xmlSecGnuTLSTransformHmacSha1Id</title>
<indexterm zone="xmlSecGnuTLSTransformHmacSha1Id"><primary>xmlSecGnuTLSTransformHmacSha1Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformHmacSha1Id</programlisting>
<para>
The HMAC with SHA1 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacSha1GetKlass" role="function">
<title>xmlSecGnuTLSTransformHmacSha1GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformHmacSha1GetKlass"><primary>xmlSecGnuTLSTransformHmacSha1GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformHmacSha1GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-SHA1 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA1 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacSha256Id" role="macro">
<title>xmlSecGnuTLSTransformHmacSha256Id</title>
<indexterm zone="xmlSecGnuTLSTransformHmacSha256Id"><primary>xmlSecGnuTLSTransformHmacSha256Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformHmacSha256Id</programlisting>
<para>
The HMAC with SHA256 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacSha256GetKlass" role="function">
<title>xmlSecGnuTLSTransformHmacSha256GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformHmacSha256GetKlass"><primary>xmlSecGnuTLSTransformHmacSha256GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformHmacSha256GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-SHA256 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA256 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacSha384Id" role="macro">
<title>xmlSecGnuTLSTransformHmacSha384Id</title>
<indexterm zone="xmlSecGnuTLSTransformHmacSha384Id"><primary>xmlSecGnuTLSTransformHmacSha384Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformHmacSha384Id</programlisting>
<para>
The HMAC with SHA384 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacSha384GetKlass" role="function">
<title>xmlSecGnuTLSTransformHmacSha384GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformHmacSha384GetKlass"><primary>xmlSecGnuTLSTransformHmacSha384GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformHmacSha384GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-SHA384 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA384 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacSha512Id" role="macro">
<title>xmlSecGnuTLSTransformHmacSha512Id</title>
<indexterm zone="xmlSecGnuTLSTransformHmacSha512Id"><primary>xmlSecGnuTLSTransformHmacSha512Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformHmacSha512Id</programlisting>
<para>
The HMAC with SHA512 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformHmacSha512GetKlass" role="function">
<title>xmlSecGnuTLSTransformHmacSha512GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformHmacSha512GetKlass"><primary>xmlSecGnuTLSTransformHmacSha512GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformHmacSha512GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The HMAC-SHA512 transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the HMAC-SHA512 transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataRsaId" role="macro">
<title>xmlSecGnuTLSKeyDataRsaId</title>
<indexterm zone="xmlSecGnuTLSKeyDataRsaId"><primary>xmlSecGnuTLSKeyDataRsaId</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSKeyDataRsaId</programlisting>
<para>
The RSA key klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataRsaGetKlass" role="function">
<title>xmlSecGnuTLSKeyDataRsaGetKlass ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataRsaGetKlass"><primary>xmlSecGnuTLSKeyDataRsaGetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecKeyDataId"><returnvalue>xmlSecKeyDataId</returnvalue></link>     xmlSecGnuTLSKeyDataRsaGetKlass      (<parameter><type>void</type></parameter>);</programlisting>
<para>
The GnuTLS RSA key data klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to GnuTLS RSA key data klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataRsaAdoptPrivateKey" role="function">
<title>xmlSecGnuTLSKeyDataRsaAdoptPrivateKey ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataRsaAdoptPrivateKey"><primary>xmlSecGnuTLSKeyDataRsaAdoptPrivateKey</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSKeyDataRsaAdoptPrivateKey
                                                        (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter><link linkend="gnutls-x509-privkey-t"><type>gnutls_x509_privkey_t</type></link> rsa_key</parameter>);</programlisting>
<para>
Sets the value of RSA key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rsa_key</parameter>&#160;:</term>
<listitem><simpara>the pointer to GnuTLS RSA private key.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSKeyDataRsaAdoptPublicKey" role="function">
<title>xmlSecGnuTLSKeyDataRsaAdoptPublicKey ()</title>
<indexterm zone="xmlSecGnuTLSKeyDataRsaAdoptPublicKey"><primary>xmlSecGnuTLSKeyDataRsaAdoptPublicKey</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 xmlSecGnuTLSKeyDataRsaAdoptPublicKey
                                                        (<parameter><link linkend="xmlSecKeyData"><type>xmlSecKeyDataPtr</type></link> data</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *m</parameter>,
                                                         <parameter><link linkend="gnutls-datum-t"><type>gnutls_datum_t</type></link> *e</parameter>);</programlisting>
<para>
Sets the value of RSA key data.
</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&#160;:</term>
<listitem><simpara>the pointer to RSA key data.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>m</parameter>&#160;:</term>
<listitem><simpara>the pointer to m component of the RSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>e</parameter>&#160;:</term>
<listitem><simpara>the pointer to e component of the RSA public key
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> 0 on success or a negative value otherwise.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaMd5Id" role="macro">
<title>xmlSecGnuTLSTransformRsaMd5Id</title>
<indexterm zone="xmlSecGnuTLSTransformRsaMd5Id"><primary>xmlSecGnuTLSTransformRsaMd5Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformRsaMd5Id</programlisting>
<para>
The RSA-MD5 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaMd5GetKlass" role="function">
<title>xmlSecGnuTLSTransformRsaMd5GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformRsaMd5GetKlass"><primary>xmlSecGnuTLSTransformRsaMd5GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformRsaMd5GetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-MD5 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-MD5 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaRipemd160Id" role="macro">
<title>xmlSecGnuTLSTransformRsaRipemd160Id</title>
<indexterm zone="xmlSecGnuTLSTransformRsaRipemd160Id"><primary>xmlSecGnuTLSTransformRsaRipemd160Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformRsaRipemd160Id</programlisting>
<para>
The RSA-RIPEMD160 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaRipemd160GetKlass" role="function">
<title>xmlSecGnuTLSTransformRsaRipemd160GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformRsaRipemd160GetKlass"><primary>xmlSecGnuTLSTransformRsaRipemd160GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformRsaRipemd160GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-RIPEMD160 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-RIPEMD160 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaSha1Id" role="macro">
<title>xmlSecGnuTLSTransformRsaSha1Id</title>
<indexterm zone="xmlSecGnuTLSTransformRsaSha1Id"><primary>xmlSecGnuTLSTransformRsaSha1Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformRsaSha1Id</programlisting>
<para>
The RSA-SHA1 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaSha1GetKlass" role="function">
<title>xmlSecGnuTLSTransformRsaSha1GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformRsaSha1GetKlass"><primary>xmlSecGnuTLSTransformRsaSha1GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformRsaSha1GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-SHA1 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA1 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaSha256Id" role="macro">
<title>xmlSecGnuTLSTransformRsaSha256Id</title>
<indexterm zone="xmlSecGnuTLSTransformRsaSha256Id"><primary>xmlSecGnuTLSTransformRsaSha256Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformRsaSha256Id</programlisting>
<para>
The RSA-SHA256 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaSha256GetKlass" role="function">
<title>xmlSecGnuTLSTransformRsaSha256GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformRsaSha256GetKlass"><primary>xmlSecGnuTLSTransformRsaSha256GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformRsaSha256GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-SHA256 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA256 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaSha384Id" role="macro">
<title>xmlSecGnuTLSTransformRsaSha384Id</title>
<indexterm zone="xmlSecGnuTLSTransformRsaSha384Id"><primary>xmlSecGnuTLSTransformRsaSha384Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformRsaSha384Id</programlisting>
<para>
The RSA-SHA384 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaSha384GetKlass" role="function">
<title>xmlSecGnuTLSTransformRsaSha384GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformRsaSha384GetKlass"><primary>xmlSecGnuTLSTransformRsaSha384GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformRsaSha384GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-SHA384 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA384 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaSha512Id" role="macro">
<title>xmlSecGnuTLSTransformRsaSha512Id</title>
<indexterm zone="xmlSecGnuTLSTransformRsaSha512Id"><primary>xmlSecGnuTLSTransformRsaSha512Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformRsaSha512Id</programlisting>
<para>
The RSA-SHA512 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRsaSha512GetKlass" role="function">
<title>xmlSecGnuTLSTransformRsaSha512GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformRsaSha512GetKlass"><primary>xmlSecGnuTLSTransformRsaSha512GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformRsaSha512GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
The RSA-SHA512 signature transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> RSA-SHA512 signature transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformSha1Id" role="macro">
<title>xmlSecGnuTLSTransformSha1Id</title>
<indexterm zone="xmlSecGnuTLSTransformSha1Id"><primary>xmlSecGnuTLSTransformSha1Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformSha1Id</programlisting>
<para>
The HMAC with SHA1 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformSha1GetKlass" role="function">
<title>xmlSecGnuTLSTransformSha1GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformSha1GetKlass"><primary>xmlSecGnuTLSTransformSha1GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformSha1GetKlass   (<parameter><type>void</type></parameter>);</programlisting>
<para>
SHA-1 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA-1 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformSha256Id" role="macro">
<title>xmlSecGnuTLSTransformSha256Id</title>
<indexterm zone="xmlSecGnuTLSTransformSha256Id"><primary>xmlSecGnuTLSTransformSha256Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformSha256Id</programlisting>
<para>
The HMAC with SHA256 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformSha256GetKlass" role="function">
<title>xmlSecGnuTLSTransformSha256GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformSha256GetKlass"><primary>xmlSecGnuTLSTransformSha256GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformSha256GetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
SHA256 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA256 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformSha384Id" role="macro">
<title>xmlSecGnuTLSTransformSha384Id</title>
<indexterm zone="xmlSecGnuTLSTransformSha384Id"><primary>xmlSecGnuTLSTransformSha384Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformSha384Id</programlisting>
<para>
The HMAC with SHA384 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformSha384GetKlass" role="function">
<title>xmlSecGnuTLSTransformSha384GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformSha384GetKlass"><primary>xmlSecGnuTLSTransformSha384GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformSha384GetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
SHA384 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA384 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformSha512Id" role="macro">
<title>xmlSecGnuTLSTransformSha512Id</title>
<indexterm zone="xmlSecGnuTLSTransformSha512Id"><primary>xmlSecGnuTLSTransformSha512Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformSha512Id</programlisting>
<para>
The HMAC with SHA512 signature transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformSha512GetKlass" role="function">
<title>xmlSecGnuTLSTransformSha512GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformSha512GetKlass"><primary>xmlSecGnuTLSTransformSha512GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformSha512GetKlass (<parameter><type>void</type></parameter>);</programlisting>
<para>
SHA512 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to SHA512 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformMd5Id" role="macro">
<title>xmlSecGnuTLSTransformMd5Id</title>
<indexterm zone="xmlSecGnuTLSTransformMd5Id"><primary>xmlSecGnuTLSTransformMd5Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformMd5Id</programlisting>
<para>
The MD5 digest transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformMd5GetKlass" role="function">
<title>xmlSecGnuTLSTransformMd5GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformMd5GetKlass"><primary>xmlSecGnuTLSTransformMd5GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformMd5GetKlass    (<parameter><type>void</type></parameter>);</programlisting>
<para>
MD5 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to MD5 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRipemd160Id" role="macro">
<title>xmlSecGnuTLSTransformRipemd160Id</title>
<indexterm zone="xmlSecGnuTLSTransformRipemd160Id"><primary>xmlSecGnuTLSTransformRipemd160Id</primary></indexterm>
<programlisting>#define             xmlSecGnuTLSTransformRipemd160Id</programlisting>
<para>
The RIPEMD160 digest transform klass.
</para></refsect2>
<refsect2 id="xmlSecGnuTLSTransformRipemd160GetKlass" role="function">
<title>xmlSecGnuTLSTransformRipemd160GetKlass ()</title>
<indexterm zone="xmlSecGnuTLSTransformRipemd160GetKlass"><primary>xmlSecGnuTLSTransformRipemd160GetKlass</primary></indexterm>
<programlisting><link linkend="xmlSecTransformId"><returnvalue>xmlSecTransformId</returnvalue></link>   xmlSecGnuTLSTransformRipemd160GetKlass
                                                        (<parameter><type>void</type></parameter>);</programlisting>
<para>
RIPEMD160 digest transform klass.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> pointer to RIPEMD160 digest transform klass.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
