<refentry id="xmlsec-bn">
<refmeta>
<refentrytitle role="top_of_page" id="xmlsec-bn.top_of_page">bn</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>XMLSEC Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>bn</refname>
<refpurpose>Big numbers support functions.</refpurpose>
</refnamediv>

<refsect1 id="xmlsec-bn.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_return" colwidth="150px"/>
<colspec colname="functions_name"/>
<tbody>
<row><entry role="function_type"><link linkend="xmlSecBn"><returnvalue>xmlSecBnPtr</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnCreate">xmlSecBnCreate</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnDestroy">xmlSecBnDestroy</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnInitialize">xmlSecBnInitialize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnFinalize">xmlSecBnFinalize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlSecByte"><returnvalue>xmlSecByte</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="xmlSecBnGetData">xmlSecBnGetData</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnSetData">xmlSecBnSetData</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlSecSize"><returnvalue>xmlSecSize</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnGetSize">xmlSecBnGetSize</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnZero">xmlSecBnZero</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnFromString">xmlSecBnFromString</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlChar"><returnvalue>xmlChar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="xmlSecBnToString">xmlSecBnToString</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnFromHexString">xmlSecBnFromHexString</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlChar"><returnvalue>xmlChar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="xmlSecBnToHexString">xmlSecBnToHexString</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnFromDecString">xmlSecBnFromDecString</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="xmlChar"><returnvalue>xmlChar</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="xmlSecBnToDecString">xmlSecBnToDecString</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnMul">xmlSecBnMul</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnDiv">xmlSecBnDiv</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnAdd">xmlSecBnAdd</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnReverse">xmlSecBnReverse</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnCompare">xmlSecBnCompare</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnCompareReverse">xmlSecBnCompareReverse</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnGetNodeValue">xmlSecBnGetNodeValue</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnSetNodeValue">xmlSecBnSetNodeValue</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="xmlSecBnBlobSetNodeValue">xmlSecBnBlobSetNodeValue</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="xmlsec-bn.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="name" colwidth="150px"/>
<colspec colname="description"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="xmlSecBnFormat">xmlSecBnFormat</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="xmlsec-bn.description" role="desc">
<title role="desc.title">Description</title>
<para>
Big numbers support functions.
</para>

</refsect1>
<refsect1 id="xmlsec-bn.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="xmlSecBnCreate" role="function">
<title>xmlSecBnCreate&#160;()</title>
<indexterm zone="xmlSecBnCreate"><primary>xmlSecBnCreate</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecBn"><returnvalue>xmlSecBnPtr</returnvalue></link>
xmlSecBnCreate (<parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> size</parameter>);</programlisting>
<para>Creates a new BN object. Caller is responsible for destroying it
by calling <parameter>xmlSecBnDestroy</parameter>
 function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>the initial allocated BN size.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the newly BN or a NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnDestroy" role="function">
<title>xmlSecBnDestroy&#160;()</title>
<indexterm zone="xmlSecBnDestroy"><primary>xmlSecBnDestroy</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecBnDestroy (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>);</programlisting>
<para>Destroys <parameter>bn</parameter>
 object created with <parameter>xmlSecBnCreate</parameter>
 function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecBnInitialize" role="function">
<title>xmlSecBnInitialize&#160;()</title>
<indexterm zone="xmlSecBnInitialize"><primary>xmlSecBnInitialize</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnInitialize (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                    <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> size</parameter>);</programlisting>
<para>Initializes a BN object. Caller is responsible for destroying it
by calling <parameter>xmlSecBnFinalize</parameter>
 function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>the initial allocated BN size.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnFinalize" role="function">
<title>xmlSecBnFinalize&#160;()</title>
<indexterm zone="xmlSecBnFinalize"><primary>xmlSecBnFinalize</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecBnFinalize (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>);</programlisting>
<para>Destroys <parameter>bn</parameter>
 object created with <parameter>xmlSecBnInitialize</parameter>
 function.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecBnGetData" role="function">
<title>xmlSecBnGetData&#160;()</title>
<indexterm zone="xmlSecBnGetData"><primary>xmlSecBnGetData</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecByte"><returnvalue>xmlSecByte</returnvalue></link>&#160;*
xmlSecBnGetData (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>);</programlisting>
<para>Gets pointer to the binary <parameter>bn</parameter>
 representation.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> pointer to binary BN data or NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnSetData" role="function">
<title>xmlSecBnSetData&#160;()</title>
<indexterm zone="xmlSecBnSetData"><primary>xmlSecBnSetData</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnSetData (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                 <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                 <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> size</parameter>);</programlisting>
<para>Sets the value of <parameter>bn</parameter>
 to <parameter>data</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the pointer to new BN binary data.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>size</para></entry>
<entry role="parameter_description"><para>the size of new BN data.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnGetSize" role="function">
<title>xmlSecBnGetSize&#160;()</title>
<indexterm zone="xmlSecBnGetSize"><primary>xmlSecBnGetSize</primary></indexterm>
<programlisting language="C"><link linkend="xmlSecSize"><returnvalue>xmlSecSize</returnvalue></link>
xmlSecBnGetSize (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>);</programlisting>
<para>Gets the size of binary data in <parameter>bn</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the size of binary data.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnZero" role="function">
<title>xmlSecBnZero&#160;()</title>
<indexterm zone="xmlSecBnZero"><primary>xmlSecBnZero</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
xmlSecBnZero (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>);</programlisting>
<para>Sets the value of <parameter>bn</parameter>
 to zero.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="xmlSecBnFromString" role="function">
<title>xmlSecBnFromString&#160;()</title>
<indexterm zone="xmlSecBnFromString"><primary>xmlSecBnFromString</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnFromString (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                    <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *str</parameter>,
                    <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> base</parameter>);</programlisting>
<para>Reads <parameter>bn</parameter>
 from string <parameter>str</parameter>
 assuming it has base <parameter>base</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para>the string with BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>base</para></entry>
<entry role="parameter_description"><para>the base for <parameter>str</parameter>
.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnToString" role="function">
<title>xmlSecBnToString&#160;()</title>
<indexterm zone="xmlSecBnToString"><primary>xmlSecBnToString</primary></indexterm>
<programlisting language="C"><link linkend="xmlChar"><returnvalue>xmlChar</returnvalue></link>&#160;*
xmlSecBnToString (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                  <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> base</parameter>);</programlisting>
<para>Writes <parameter>bn</parameter>
 to string with base <parameter>base</parameter>
. Caller is responsible for
freeing returned string with <parameter>xmlFree</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>base</para></entry>
<entry role="parameter_description"><para>the base for returned string.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the string represenataion if BN or a NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnFromHexString" role="function">
<title>xmlSecBnFromHexString&#160;()</title>
<indexterm zone="xmlSecBnFromHexString"><primary>xmlSecBnFromHexString</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnFromHexString (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                       <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *str</parameter>);</programlisting>
<para>Reads <parameter>bn</parameter>
 from hex string <parameter>str</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para>the string with BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnToHexString" role="function">
<title>xmlSecBnToHexString&#160;()</title>
<indexterm zone="xmlSecBnToHexString"><primary>xmlSecBnToHexString</primary></indexterm>
<programlisting language="C"><link linkend="xmlChar"><returnvalue>xmlChar</returnvalue></link>&#160;*
xmlSecBnToHexString (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>);</programlisting>
<para>Writes <parameter>bn</parameter>
 to hex string. Caller is responsible for
freeing returned string with <parameter>xmlFree</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the string represenataion if BN or a NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnFromDecString" role="function">
<title>xmlSecBnFromDecString&#160;()</title>
<indexterm zone="xmlSecBnFromDecString"><primary>xmlSecBnFromDecString</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnFromDecString (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                       <parameter>const <link linkend="xmlChar"><type>xmlChar</type></link> *str</parameter>);</programlisting>
<para>Reads <parameter>bn</parameter>
 from decimal string <parameter>str</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>str</para></entry>
<entry role="parameter_description"><para>the string with BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnToDecString" role="function">
<title>xmlSecBnToDecString&#160;()</title>
<indexterm zone="xmlSecBnToDecString"><primary>xmlSecBnToDecString</primary></indexterm>
<programlisting language="C"><link linkend="xmlChar"><returnvalue>xmlChar</returnvalue></link>&#160;*
xmlSecBnToDecString (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>);</programlisting>
<para>Writes <parameter>bn</parameter>
 to decimal string. Caller is responsible for
freeing returned string with <parameter>xmlFree</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> the string represenataion if BN or a NULL if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnMul" role="function">
<title>xmlSecBnMul&#160;()</title>
<indexterm zone="xmlSecBnMul"><primary>xmlSecBnMul</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnMul (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
             <parameter><link linkend="int"><type>int</type></link> multiplier</parameter>);</programlisting>
<para>Multiplies <parameter>bn</parameter>
 with <parameter>multiplier</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>multiplier</para></entry>
<entry role="parameter_description"><para>the multiplier.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnDiv" role="function">
<title>xmlSecBnDiv&#160;()</title>
<indexterm zone="xmlSecBnDiv"><primary>xmlSecBnDiv</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnDiv (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
             <parameter><link linkend="int"><type>int</type></link> divider</parameter>,
             <parameter><link linkend="int"><type>int</type></link> *mod</parameter>);</programlisting>
<para>Divides <parameter>bn</parameter>
 by <parameter>divider</parameter>
 and places modulus into <parameter>mod</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>divider</para></entry>
<entry role="parameter_description"><para>the divider</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>mod</para></entry>
<entry role="parameter_description"><para>the pointer for modulus result.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnAdd" role="function">
<title>xmlSecBnAdd&#160;()</title>
<indexterm zone="xmlSecBnAdd"><primary>xmlSecBnAdd</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnAdd (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
             <parameter><link linkend="int"><type>int</type></link> delta</parameter>);</programlisting>
<para>Adds <parameter>delta</parameter>
 to <parameter>bn</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>delta</para></entry>
<entry role="parameter_description"><para>the delta.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnReverse" role="function">
<title>xmlSecBnReverse&#160;()</title>
<indexterm zone="xmlSecBnReverse"><primary>xmlSecBnReverse</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnReverse (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>);</programlisting>
<para>Reverses bytes order in <parameter>bn</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success or a negative value if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnCompare" role="function">
<title>xmlSecBnCompare&#160;()</title>
<indexterm zone="xmlSecBnCompare"><primary>xmlSecBnCompare</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnCompare (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                 <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                 <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>);</programlisting>
<para>Compares the <parameter>bn</parameter>
 with <parameter>data</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the data to compare BN to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dataSize</para></entry>
<entry role="parameter_description"><para>the <parameter>data</parameter>
size.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 if data is equal, negative value if <parameter>bn</parameter>
is less or positive value if <parameter>bn</parameter>
is greater than <parameter>data</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnCompareReverse" role="function">
<title>xmlSecBnCompareReverse&#160;()</title>
<indexterm zone="xmlSecBnCompareReverse"><primary>xmlSecBnCompareReverse</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnCompareReverse (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                        <parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                        <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>);</programlisting>
<para>Compares the <parameter>bn</parameter>
 with reverse <parameter>data</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the data to compare BN to.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dataSize</para></entry>
<entry role="parameter_description"><para>the <parameter>data</parameter>
size.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 if data is equal, negative value if <parameter>bn</parameter>
is less or positive value if <parameter>bn</parameter>
is greater than <parameter>data</parameter>
.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnGetNodeValue" role="function">
<title>xmlSecBnGetNodeValue&#160;()</title>
<indexterm zone="xmlSecBnGetNodeValue"><primary>xmlSecBnGetNodeValue</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnGetNodeValue (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                      <parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> cur</parameter>,
                      <parameter><link linkend="xmlSecBnFormat"><type>xmlSecBnFormat</type></link> format</parameter>,
                      <parameter><link linkend="int"><type>int</type></link> reverse</parameter>);</programlisting>
<para>Converts the node content from <parameter>format</parameter>
 to <parameter>bn</parameter>
.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para>the poitner to an XML node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the BN format.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>reverse</para></entry>
<entry role="parameter_description"><para>if set then reverse read buffer after reading.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success and a negative values if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnSetNodeValue" role="function">
<title>xmlSecBnSetNodeValue&#160;()</title>
<indexterm zone="xmlSecBnSetNodeValue"><primary>xmlSecBnSetNodeValue</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnSetNodeValue (<parameter><link linkend="xmlSecBn"><type>xmlSecBnPtr</type></link> bn</parameter>,
                      <parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> cur</parameter>,
                      <parameter><link linkend="xmlSecBnFormat"><type>xmlSecBnFormat</type></link> format</parameter>,
                      <parameter><link linkend="int"><type>int</type></link> reverse</parameter>,
                      <parameter><link linkend="int"><type>int</type></link> addLineBreaks</parameter>);</programlisting>
<para>Converts the <parameter>bn</parameter>
 and sets it to node content.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>bn</para></entry>
<entry role="parameter_description"><para>the pointer to BN.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para>the poitner to an XML node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the BN format.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>reverse</para></entry>
<entry role="parameter_description"><para>the flag that indicates whether to reverse the buffer before writing.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>addLineBreaks</para></entry>
<entry role="parameter_description"><para>the flag; it is equal to 1 then linebreaks will be added before and after new buffer content.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success and a negative values if an error occurs.</para>
</refsect3></refsect2>
<refsect2 id="xmlSecBnBlobSetNodeValue" role="function">
<title>xmlSecBnBlobSetNodeValue&#160;()</title>
<indexterm zone="xmlSecBnBlobSetNodeValue"><primary>xmlSecBnBlobSetNodeValue</primary></indexterm>
<programlisting language="C"><link linkend="int"><returnvalue>int</returnvalue></link>
xmlSecBnBlobSetNodeValue (<parameter>const <link linkend="xmlSecByte"><type>xmlSecByte</type></link> *data</parameter>,
                          <parameter><link linkend="xmlSecSize"><type>xmlSecSize</type></link> dataSize</parameter>,
                          <parameter><link linkend="xmlNode"><type>xmlNodePtr</type></link> cur</parameter>,
                          <parameter><link linkend="xmlSecBnFormat"><type>xmlSecBnFormat</type></link> format</parameter>,
                          <parameter><link linkend="int"><type>int</type></link> reverse</parameter>,
                          <parameter><link linkend="int"><type>int</type></link> addLineBreaks</parameter>);</programlisting>
<para>Converts the <parameter>blob</parameter>
 and sets it to node content.</para>
<refsect3 role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>data</para></entry>
<entry role="parameter_description"><para>the pointer to BN blob.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>dataSize</para></entry>
<entry role="parameter_description"><para>the size of BN blob.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>cur</para></entry>
<entry role="parameter_description"><para>the poitner to an XML node.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>format</para></entry>
<entry role="parameter_description"><para>the BN format.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>reverse</para></entry>
<entry role="parameter_description"><para>the flag that indicates whether to reverse the buffer before writing.</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>addLineBreaks</para></entry>
<entry role="parameter_description"><para>if the flag is equal to 1 then
linebreaks will be added before and after
new buffer content.</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 role="returns">
<title>Returns</title>
<para> 0 on success and a negative values if an error occurs.</para>
</refsect3></refsect2>

</refsect1>
<refsect1 id="xmlsec-bn.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="xmlSecBnFormat" role="enum">
<title>enum xmlSecBnFormat</title>
<indexterm zone="xmlSecBnFormat"><primary>xmlSecBnFormat</primary></indexterm>
<para>The big numbers formats.</para>
<refsect3 role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="xmlSecBnBase64">xmlSecBnBase64</para></entry>
<entry role="enum_member_description"><para>the base64 decoded binary blob.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="xmlSecBnHex">xmlSecBnHex</para></entry>
<entry role="enum_member_description"><para>the hex number.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="xmlSecBnDec">xmlSecBnDec</para></entry>
<entry role="enum_member_description"><para>the decimal number.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>

</refentry>
