<!doctype book PUBLIC "-//Davenport//DTD DocBook V3.0//EN" [
<!ENTITY chapter-init-and-shutdown 	SYSTEM "chapters/init-and-shutdown.sgml">
<!ENTITY chapter-sign-and-encrypt 	SYSTEM "chapters/sign-and-encrypt.sgml">
<!ENTITY chapter-verify-and-decrypt 	SYSTEM "chapters/verify-and-decrypt.sgml">
<!ENTITY chapter-creating-templates 	SYSTEM "chapters/creating-templates.sgml">
<!ENTITY chapter-using-keysmngr 	SYSTEM "chapters/using-keysmngr.sgml">

<!ENTITY xmlsec-base64 			SYSTEM "sgml/base64.sgml">
<!ENTITY xmlsec-buffer 			SYSTEM "sgml/buffer.sgml">
<!ENTITY xmlsec-errors 			SYSTEM "sgml/errors.sgml">
<!ENTITY xmlsec-io 			SYSTEM "sgml/io.sgml">
<!ENTITY xmlsec-keyinfo 		SYSTEM "sgml/keyinfo.sgml">
<!ENTITY xmlsec-keysdata 		SYSTEM "sgml/keysdata.sgml">
<!ENTITY xmlsec-keys 			SYSTEM "sgml/keys.sgml">
<!ENTITY xmlsec-keysmngr 		SYSTEM "sgml/keysmngr.sgml">
<!ENTITY xmlsec-list 			SYSTEM "sgml/list.sgml">
<!ENTITY xmlsec-membuf 			SYSTEM "sgml/membuf.sgml">
<!ENTITY xmlsec-nodeset 		SYSTEM "sgml/nodeset.sgml">
<!ENTITY xmlsec-parser 			SYSTEM "sgml/parser.sgml">
<!ENTITY xmlsec-templates 		SYSTEM "sgml/templates.sgml">
<!ENTITY xmlsec-transforms 		SYSTEM "sgml/transforms.sgml">
<!ENTITY xmlsec-version 		SYSTEM "sgml/version.sgml">
<!ENTITY xmlsec-xmldsig 		SYSTEM "sgml/xmldsig.sgml">
<!ENTITY xmlsec-xmlenc 			SYSTEM "sgml/xmlenc.sgml">
<!ENTITY xmlsec-xmlsec 			SYSTEM "sgml/xmlsec.sgml">
<!ENTITY xmlsec-xmltree 		SYSTEM "sgml/xmltree.sgml">

<!ENTITY xmlsec-openssl-app 		SYSTEM "sgml/openssl/app.sgml">
<!ENTITY xmlsec-openssl-bn 		SYSTEM "sgml/openssl/bn.sgml">
<!ENTITY xmlsec-openssl-crypto 		SYSTEM "sgml/openssl/crypto.sgml">
<!ENTITY xmlsec-openssl-x509 		SYSTEM "sgml/openssl/x509.sgml">
<!ENTITY xmlsec-openssl-symbols 	SYSTEM "sgml/openssl/symbols.sgml">

<!ENTITY xmlsec-gnutls-app 		SYSTEM "sgml/gnutls/app.sgml">
<!ENTITY xmlsec-gnutls-crypto 		SYSTEM "sgml/gnutls/crypto.sgml">
<!ENTITY xmlsec-gnutls-symbols 		SYSTEM "sgml/gnutls/symbols.sgml">

<!ENTITY xmlsec-nss-app 		SYSTEM "sgml/nss/app.sgml">
<!ENTITY xmlsec-nss-crypto 		SYSTEM "sgml/nss/crypto.sgml">
<!ENTITY xmlsec-nss-symbols		SYSTEM "sgml/nss/symbols.sgml">


<!ENTITY xmlsec-example-dsig1 		SYSTEM "examples/dsig1.sgml">
<!ENTITY xmlsec-example-dsig2 		SYSTEM "examples/dsig2.sgml">
<!ENTITY xmlsec-example-dsig3 		SYSTEM "examples/dsig3.sgml">
<!ENTITY xmlsec-example-dsig4 		SYSTEM "examples/dsig4.sgml">
<!ENTITY xmlsec-example-enc1 		SYSTEM "examples/enc1.sgml">
<!ENTITY xmlsec-example-enc2 		SYSTEM "examples/enc2.sgml">
<!ENTITY xmlsec-example-dsig1-tmpl	SYSTEM "examples/dsig1-tmpl.sgml">
<!ENTITY xmlsec-example-dsig1-res	SYSTEM "examples/dsig1-res.sgml">
]>
<book id="index">
  <bookinfo>
    <title>XML Security Library Reference Manual</title>
    <authorgroup>
      <author>
        <firstname>Aleksey</firstname>
        <surname>Sanin</surname>
        <affiliation>
	  <address>
	    <email>aleksey@aleksey.com</email>
	  </address>
        </affiliation>
      </author>
    </authorgroup>
    <copyright>
      <year>2002-2003</year>
      <holder>Aleksey Sanin</holder>
    </copyright>	
    <legalnotice>
      <para>Permission is granted to make and distribute verbatim
      copies of this manual provided the copyright notice and this
      permission notice are preserved on all copies.</para>
      <para>Permission is granted to copy and distribute modified
      versions of this manual under the conditions for verbatim
      copying, provided also that the entire resulting derived work is
      distributed under the terms of a permission notice identical to
      this one.</para>
      
      <para>Permission is granted to copy and distribute translations
      of this manual into another language, under the above conditions
      for modified versions.</para>
    </legalnotice>

    <abstract>
      <para>This manual documents the interfaces of the xmlsec
      library and has some short notes to help get you up to speed
      with using the library.</para>
    </abstract>
  </bookinfo>

  <chapter id="xmlsec-notes">
    <title>XML Security Library Programming Notes</title>
    <sect1 id="xmlsec-notes-overview">
	<title>Overview.</title>
	<para>XML Security Library provides support for XML Digital Signature 
	and XML Encryption. It is based on LibXML/LibXSLT and can use
	practicaly any crypto library (currently there is "out of the box" 
	support for OpenSSL, GnuTLS and NSS).
	</para>
    </sect1>
    <sect1 id="xmlsec-notes-structure">
	<title>XML Security Library Structure.</title>
	<para>In order to provide the an ability to use different crypto engines, 
	the XML Security Library is splitted in two parts: core library (xmlsec)
	and crypto library (xmlsec-openssl, xmlsec-gnutls, xmlsec-nss, ...). 
	<figure>
	    <title>The library structure and dependencies.</title>
	    <graphic fileref="images/structure.png" align="center" />
	</figure>	 
	</para>
	<para>The core library has no dependency on any crypto library and provides 
	implementation of all the engines as well as support for all the non 
	crypto transforms (xml parser, c14n transforms, xpath and xslt 
	transforms,...). The XML Security Crypto library provides 
	implementations for crypto transforms, crypto keys data and key 
	data stores. Application is linked with particular XML Security 
	Crypto library (or even libraries), but the actual application 
	code might be general enough so switching crypto engine would be 
	a matter of changing several #include directives.</para>
    </sect1>
    <sect1 id="xmlsec-compiling">
	<title>Compiling and linking</title>
	<para>TODO</para>
    </sect1>
    &chapter-init-and-shutdown;
    &chapter-sign-and-encrypt;
    &chapter-verify-and-decrypt;
    &chapter-creating-templates;
    &chapter-using-keysmngr;
    <sect1 id="xmlsec-notes-transforms">
	<title>Transforms and transforms chain.</title>
	<para>XML Digital Signature and XML Encryption standards are 
	very flexible and provide an XML developer many different ways to 
	sign or encrypt any part (or even parts) of an XML document. 
	The key for such great flexibility is the "transforms" model.
	Transform is defined as a method of pre-processing binary or XML data 
	before calculating digest or signature. XML Security Library extends 
	this definition and names "transform" any operation performed on 
	the data: reading data from an URI, xml parsing, xml transformation, 
	calculation digest, encrypting or decrypting. Each XML Security Library
	transform provides at least one of the following callbacks: 
	    <itemizedlist>
		<listitem><para>
		    <link linkend="xmlSecTransformPushBinMethod">push binary data</link>;
		</para></listitem>
		<listitem><para>
		    <link linkend="xmlSecTransformPushXmlMethod">push xml data</link>;
		</para></listitem>
		<listitem><para>
		    <link linkend="xmlSecTransformPopBinMethod">pop binary data</link>;
		</para></listitem>
		<listitem><para>
		    <link linkend="xmlSecTransformPopXmlMethod">pop xml data</link>.
		</para></listitem>
	    </itemizedlist>
	</para><para>One additional <link linkend="xmlSecTransformExecuteMethod">execute</link>
	callback was added to simplify the development and reduce code size. 
	This callback is used by default
	implementations of the four external callbacks from the list above.
	For example, most of the crypto transforms could be implemented by 
	just implementing one "execute" callback and using default push/pop 
	binary data callbacks. However, in some cases using push/pop callbacks 
	directly is more efficient.
	</para>
	<figure>
	    <title>The XML Security Library transform.</title>
	    <graphic fileref="images/transform.png" align="center" />
	</figure>	 
	<para>XML Security Library constructs transforms chain according to the 
	signature/encryption template or signed/encrypted document. 
	If necessary, XML Security Library inserts XML parser or defaul
	canonicalization to ensure that the output data type (binary or XML) 
	of previous transform matches the input of the next transform.
	</para>
	<para>The data are processed by pushing through or poping from the chain
	depending on the transforms in the chain.  For example, then binary 
	data chunk is pushed through a binary-to-binary transform, it 
	processes this chunk and pushes the result to the next transform 
	in the chain. 
	</para>	
	<figure>
	    <title>Transforms chain created for &lt;dsig:Reference/&gt; element processing.</title>
	    <graphic fileref="images/transforms-chain.png" align="center" />
	</figure>	 

	<para>
	     <example>
		<title>Walking through transforms chain.</title>
		<programlisting><![CDATA[
TODO
		]]></programlisting>
	    </example>
	</para>
    </sect1>
    <sect1 id="xmlsec-notes-cusomize-signature">
	<title>Customizing signature and verification process.</title>
	<para>Application may control XML Security Library behavior using 
	different context objects:
	    <itemizedlist>
		<listitem><para>
		    <link linkend="xmlSecDSigCtx">xmlSecDSigCtx</link>;
		</para></listitem>
		<listitem><para>
		    <link linkend="xmlSecEncCtx">xmlSecEncCtx</link>;
		</para></listitem>
		<listitem><para>
		    <link linkend="xmlSecKeyInfoCtx">xmlSecKeyInfoCtx</link>;
		</para></listitem>
		<listitem><para>
		    <link linkend="xmlSecTransformCtx">xmlSecTransformCtx</link>.
		</para></listitem>
	    </itemizedlist>	 
	New context objects are created for each operation and could not be 
	reused. XML Security Library also uses context objects to store 
	temporary data and return additional information to the application.
	</para>
	<para>
	     <example>
		<title>SAML signature validation.</title>
		<programlisting><![CDATA[
TODO
		]]></programlisting>
	    </example>
	</para>
    </sect1>
    <sect1 id="xmlsec-notes-customize-encryption">
	<title>Customizing encryption and decryption process.</title>
	<para>TODO: example</para>
    </sect1>
    <sect1 id="xmlsec-notes-new-crypto-library">
        <title>Supporting new cryptographic library.</title>
        <para>This section contains information for developers who wish to use
    	XML Security Library with a new crypto engine.
        </para>
	<para>TODO: example</para>
    </sect1>
  </chapter>

  <chapter id="xmlsec-ref">
    <title>XML Security Library API Reference.</title>
    <para>This section contains the API reference for xmlsec. All
    the public interfaces are documented here. This reference guide is
    build by extracting comments from the code sources. </para>

    &xmlsec-base64;
    &xmlsec-buffer;
    &xmlsec-errors;
    &xmlsec-io;
    &xmlsec-keyinfo;
    &xmlsec-keysdata;
    &xmlsec-keys;
    &xmlsec-keysmngr;
    &xmlsec-list;
    &xmlsec-membuf;
    &xmlsec-nodeset;
    &xmlsec-parser;
    &xmlsec-templates;
    &xmlsec-transforms;
    &xmlsec-version;
    &xmlsec-xmldsig;
    &xmlsec-xmlenc;
    &xmlsec-xmlsec;
    &xmlsec-xmltree;
  </chapter>

  <chapter id="xmlsec-openssl-ref">
    <title>XML Security Library for OpenSLL API Reference.</title>
    <para>This section contains the API reference for xmlsec-openssl. All
    the public interfaces are documented here. This reference guide is
    build by extracting comments from the code sources. </para>
    
    &xmlsec-openssl-app;
    &xmlsec-openssl-bn;
    &xmlsec-openssl-crypto;
    &xmlsec-openssl-x509;
  </chapter>

  <chapter id="xmlsec-gnutls-ref">
    <title>XML Security Library for GnuTLS API Reference.</title>
    <para>This section contains the API reference for xmlsec-gnutls. All
    the public interfaces are documented here. This reference guide is
    build by extracting comments from the code sources. </para>
    &xmlsec-gnutls-app;
    &xmlsec-gnutls-crypto;
  </chapter>

  <chapter id="xmlsec-nss-ref">
    <title>XML Security Library for NSS API Reference.</title>
    <para>This section contains the API reference for xmlsec-nss. All
    the public interfaces are documented here. This reference guide is
    build by extracting comments from the code sources. </para>
    &xmlsec-nss-app;
    &xmlsec-nss-crypto;
  </chapter>
    
  <chapter id="xmlsec-examples">
    <title>XML Security Library Examples.</title>
    <para>This section contains several examples of using XML Security Library
	to sign, veiryf, encrypt or decrypt XML documents.</para>
    
    &xmlsec-example-dsig1;
    &xmlsec-example-dsig1-tmpl;
    &xmlsec-example-dsig2;
    &xmlsec-example-dsig3;
    &xmlsec-example-dsig4;
    &xmlsec-example-enc1;
    &xmlsec-example-enc2;
  </chapter>
</book>
